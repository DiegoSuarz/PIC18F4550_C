

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Mar 24 22:39:41 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57  0000                     
    58                           ; Version 2.40
    59                           ; Generated 17/11/2021 GMT
    60                           ; 
    61                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4550 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	idataBANK0
    95  001ED2                     __pidataBANK0:
    96                           	callstack 0
    97                           
    98                           ;initializer for _data
    99  001ED2  38                 	db	56
   100  001ED3  3B                 	db	59
   101  001ED4  07                 	db	7
   102  001ED5  0F                 	db	15
   103  001ED6  03                 	db	3
   104  001ED7  05                 	db	5
   105  001ED8  1E                 	db	30
   106                           
   107                           ;initializer for _aux
   108  001ED9  20                 	db	32
   109  001EDA  00                 	db	0
   110  001EDB  00                 	db	0
   111  001EDC  00                 	db	0
   112  001EDD  00                 	db	0
   113  001EDE  00                 	db	0
   114  001EDF  00                 	db	0
   115  001EE0  00                 	db	0
   116  001EE1  00                 	db	0
   117  001EE2  00                 	db	0
   118  001EE3  00                 	db	0
   119  001EE4  00                 	db	0
   120  001EE5  00                 	db	0
   121  001EE6  00                 	db	0
   122  001EE7  00                 	db	0
   123  001EE8  00                 	db	0
   124  001EE9  00                 	db	0
   125  001EEA  00                 	db	0
   126  001EEB  00                 	db	0
   127  001EEC  00                 	db	0
   128  0000                     _SSPSTAT	set	4039
   129  0000                     _SSPADD	set	4040
   130  0000                     _SSPCON2	set	4037
   131  0000                     _SSPSTATbits	set	4039
   132  0000                     _SSPCON2bits	set	4037
   133  0000                     _ACKEN	set	32300
   134  0000                     _ACKDT	set	32301
   135  0000                     _TRISB1	set	31897
   136  0000                     _TRISB0	set	31896
   137  0000                     _RCEN	set	32299
   138  0000                     _ACKSTAT	set	32302
   139  0000                     _PEIE	set	32662
   140  0000                     _LATDbits	set	3980
   141  0000                     _TRISB	set	3987
   142  0000                     _ADCON1	set	4033
   143  0000                     _SSPCON1	set	4038
   144  0000                     _SEN	set	32296
   145  0000                     _TRISDbits	set	3989
   146  0000                     _SSPIE	set	31979
   147  0000                     _SSPBUF	set	4041
   148  0000                     _GIE	set	32663
   149  0000                     _SSPIF	set	31987
   150                           
   151                           	psect	smallconst
   152  000800                     __psmallconst:
   153                           	callstack 0
   154  000800  00                 	db	0
   155  000801                     STR_5:
   156  000801  54                 	db	84	;'T'
   157  000802  49                 	db	73	;'I'
   158  000803  45                 	db	69	;'E'
   159  000804  4D                 	db	77	;'M'
   160  000805  50                 	db	80	;'P'
   161  000806  4F                 	db	79	;'O'
   162  000807  3A                 	db	58	;':'
   163  000808  20                 	db	32
   164  000809  25                 	db	37
   165  00080A  30                 	db	48	;'0'
   166  00080B  32                 	db	50	;'2'
   167  00080C  64                 	db	100	;'d'
   168  00080D  3A                 	db	58	;':'
   169  00080E  25                 	db	37
   170  00080F  30                 	db	48	;'0'
   171  000810  32                 	db	50	;'2'
   172  000811  64                 	db	100	;'d'
   173  000812  3A                 	db	58	;':'
   174  000813  25                 	db	37
   175  000814  30                 	db	48	;'0'
   176  000815  32                 	db	50	;'2'
   177  000816  64                 	db	100	;'d'
   178  000817  00                 	db	0
   179  000818                     STR_6:
   180  000818  46                 	db	70	;'F'
   181  000819  45                 	db	69	;'E'
   182  00081A  43                 	db	67	;'C'
   183  00081B  48                 	db	72	;'H'
   184  00081C  41                 	db	65	;'A'
   185  00081D  3A                 	db	58	;':'
   186  00081E  20                 	db	32
   187  00081F  25                 	db	37
   188  000820  30                 	db	48	;'0'
   189  000821  32                 	db	50	;'2'
   190  000822  64                 	db	100	;'d'
   191  000823  2F                 	db	47
   192  000824  25                 	db	37
   193  000825  30                 	db	48	;'0'
   194  000826  32                 	db	50	;'2'
   195  000827  64                 	db	100	;'d'
   196  000828  2F                 	db	47
   197  000829  25                 	db	37
   198  00082A  30                 	db	48	;'0'
   199  00082B  32                 	db	50	;'2'
   200  00082C  64                 	db	100	;'d'
   201  00082D  00                 	db	0
   202  00082E  46                 	db	70	;'F'
   203  00082F  45                 	db	69	;'E'
   204  000830  43                 	db	67	;'C'
   205  000831  48                 	db	72	;'H'
   206  000832  41                 	db	65	;'A'
   207  000833  3A                 	db	58	;':'
   208  000834  20                 	db	32
   209  000835  00                 	db	0
   210  000836  54                 	db	84	;'T'
   211  000837  49                 	db	73	;'I'
   212  000838  4D                 	db	77	;'M'
   213  000839  45                 	db	69	;'E'
   214  00083A  3A                 	db	58	;':'
   215  00083B  20                 	db	32
   216  00083C  00                 	db	0
   217  00083D                     STR_1:
   218  00083D  20                 	db	32
   219  00083E  20                 	db	32
   220  00083F  00                 	db	0
   221  000840                     STR_2:
   222  000840  41                 	db	65	;'A'
   223  000841  4D                 	db	77	;'M'
   224  000842  00                 	db	0
   225  000843  00                 	db	0	; dummy byte at the end
   226  0000                     
   227                           ; #config settings
   228                           
   229                           	psect	cinit
   230  001D30                     __pcinit:
   231                           	callstack 0
   232  001D30                     start_initialization:
   233                           	callstack 0
   234  001D30                     __initialization:
   235                           	callstack 0
   236                           
   237                           ; Initialize objects allocated to BANK0 (27 bytes)
   238                           ; load TBLPTR registers with __pidataBANK0
   239  001D30  0ED2               	movlw	low __pidataBANK0
   240  001D32  6EF6               	movwf	tblptrl,c
   241  001D34  0E1E               	movlw	high __pidataBANK0
   242  001D36  6EF7               	movwf	tblptrh,c
   243  001D38  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   244  001D3A  6EF8               	movwf	tblptru,c
   245  001D3C  EE00  F087         	lfsr	0,__pdataBANK0
   246  001D40  EE10 F01B          	lfsr	1,27
   247  001D44                     copy_data0:
   248  001D44  0009               	tblrd		*+
   249  001D46  CFF5 FFEE          	movff	tablat,postinc0
   250  001D4A  50E5               	movf	postdec1,w,c
   251  001D4C  50E1               	movf	fsr1l,w,c
   252  001D4E  E1FA               	bnz	copy_data0
   253                           
   254                           ; Clear objects allocated to BANK0 (39 bytes)
   255  001D50  EE00  F060         	lfsr	0,__pbssBANK0
   256  001D54  0E27               	movlw	39
   257  001D56                     clear_0:
   258  001D56  6AEE               	clrf	postinc0,c
   259  001D58  06E8               	decf	wreg,f,c
   260  001D5A  E1FD               	bnz	clear_0
   261                           
   262                           ; Clear objects allocated to COMRAM (2 bytes)
   263  001D5C  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   264  001D5E  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   265  001D60                     end_of_initialization:
   266                           	callstack 0
   267  001D60                     __end_of__initialization:
   268                           	callstack 0
   269  001D60  0E00               	movlw	low (__Lmediumconst shr (0+16))
   270  001D62  6EF8               	movwf	tblptru,c
   271  001D64  0100               	movlb	0
   272  001D66  EFF1  F009         	goto	_main	;jump to C main() function
   273                           
   274                           	psect	bssCOMRAM
   275  00005E                     __pbssCOMRAM:
   276                           	callstack 0
   277  00005E                     _flags:
   278                           	callstack 0
   279  00005E                     	ds	2
   280                           
   281                           	psect	bssBANK0
   282  000060                     __pbssBANK0:
   283                           	callstack 0
   284  000060                     _nout:
   285                           	callstack 0
   286  000060                     	ds	2
   287  000062                     _width:
   288                           	callstack 0
   289  000062                     	ds	2
   290  000064                     _prec:
   291                           	callstack 0
   292  000064                     	ds	2
   293  000066                     _registrosRTC:
   294                           	callstack 0
   295  000066                     	ds	1
   296  000067                     _dbuf:
   297                           	callstack 0
   298  000067                     	ds	32
   299                           
   300                           	psect	dataBANK0
   301  000087                     __pdataBANK0:
   302                           	callstack 0
   303  000087                     _data:
   304                           	callstack 0
   305  000087                     	ds	7
   306  00008E                     _aux:
   307                           	callstack 0
   308  00008E                     	ds	20
   309                           
   310                           	psect	cstackBANK0
   311  0000A2                     __pcstackBANK0:
   312                           	callstack 0
   313  0000A2                     ?_sprintf:
   314                           	callstack 0
   315  0000A2                     sprintf@s:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x0
   319  0000A2                     	ds	2
   320  0000A4                     sprintf@fmt:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x2
   324  0000A4                     	ds	8
   325  0000AC                     sprintf@ap:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0xA
   329  0000AC                     	ds	2
   330  0000AE                     sprintf@f:
   331                           	callstack 0
   332                           
   333                           ; 11 bytes @ 0xC
   334  0000AE                     	ds	11
   335                           
   336                           	psect	cstackCOMRAM
   337  000001                     __pcstackCOMRAM:
   338                           	callstack 0
   339  000001                     ??_I2C_Idle:
   340  000001                     ??_enviar_dato:
   341  000001                     ??_bcd_bin_convert:
   342  000001                     ?_strlen:
   343                           	callstack 0
   344  000001                     ?_isdigit:
   345                           	callstack 0
   346  000001                     ?_isspace:
   347                           	callstack 0
   348  000001                     ?___wmul:
   349                           	callstack 0
   350  000001                     ?___awdiv:
   351                           	callstack 0
   352  000001                     ?___awmod:
   353                           	callstack 0
   354  000001                     ?___lldiv:
   355                           	callstack 0
   356  000001                     ?___aodiv:
   357                           	callstack 0
   358  000001                     ?___aomod:
   359                           	callstack 0
   360  000001                     ___wmul@multiplier:
   361                           	callstack 0
   362  000001                     ___awdiv@dividend:
   363                           	callstack 0
   364  000001                     ___awmod@dividend:
   365                           	callstack 0
   366  000001                     isdigit@c:
   367                           	callstack 0
   368  000001                     isspace@c:
   369                           	callstack 0
   370  000001                     fputc@c:
   371                           	callstack 0
   372  000001                     strlen@s:
   373                           	callstack 0
   374  000001                     ___lldiv@dividend:
   375                           	callstack 0
   376  000001                     ___aodiv@dividend:
   377                           	callstack 0
   378  000001                     ___aomod@dividend:
   379                           	callstack 0
   380                           
   381                           ; 8 bytes @ 0x0
   382  000001                     	ds	1
   383  000002                     I2C_Write_Data@dato:
   384                           	callstack 0
   385  000002                     I2C_Read_Slave@dato:
   386                           	callstack 0
   387  000002                     bcd_bin_convert@dato:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0x1
   391  000002                     	ds	1
   392  000003                     ??_isdigit:
   393  000003                     ??_isspace:
   394  000003                     enviar_dato@cmd:
   395                           	callstack 0
   396  000003                     getDataDs1307@dato:
   397                           	callstack 0
   398  000003                     ___wmul@multiplicand:
   399                           	callstack 0
   400  000003                     ___awdiv@divisor:
   401                           	callstack 0
   402  000003                     ___awmod@divisor:
   403                           	callstack 0
   404  000003                     fputc@fp:
   405                           	callstack 0
   406  000003                     strlen@a:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x2
   410  000003                     	ds	1
   411  000004                     Lcd_Cmd@cmd:
   412                           	callstack 0
   413  000004                     Lcd_Char@letra:
   414                           	callstack 0
   415  000004                     getDataDs1307@data:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x3
   419  000004                     	ds	1
   420  000005                     ??_fputc:
   421  000005                     ??_Lcd_Init:
   422  000005                     Lcd_XY@x:
   423                           	callstack 0
   424  000005                     ___awdiv@counter:
   425                           	callstack 0
   426  000005                     ___awmod@counter:
   427                           	callstack 0
   428  000005                     Lcd_Out@text:
   429                           	callstack 0
   430  000005                     ___wmul@product:
   431                           	callstack 0
   432  000005                     ___lldiv@divisor:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0x4
   436  000005                     	ds	1
   437  000006                     ??_Lcd_XY:
   438  000006                     ___awdiv@sign:
   439                           	callstack 0
   440  000006                     ___awmod@sign:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x5
   444  000006                     	ds	1
   445  000007                     _isspace$1027:
   446                           	callstack 0
   447  000007                     ___awdiv@quotient:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x6
   451  000007                     	ds	1
   452  000008                     ?_atoi:
   453                           	callstack 0
   454  000008                     Lcd_XY@y:
   455                           	callstack 0
   456  000008                     atoi@s:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x7
   460  000008                     	ds	1
   461  000009                     ??_bin_bcd_convert:
   462  000009                     ___lldiv@quotient:
   463                           	callstack 0
   464  000009                     ___aodiv@divisor:
   465                           	callstack 0
   466  000009                     ___aomod@divisor:
   467                           	callstack 0
   468                           
   469                           ; 8 bytes @ 0x8
   470  000009                     	ds	1
   471  00000A                     ??_atoi:
   472  00000A                     fputs@s:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x9
   476  00000A                     	ds	1
   477  00000B                     bin_bcd_convert@data:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0xA
   481  00000B                     	ds	1
   482  00000C                     bin_bcd_convert@dato:
   483                           	callstack 0
   484  00000C                     fputs@fp:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0xB
   488  00000C                     	ds	1
   489  00000D                     ConfiRegRTC@dato:
   490                           	callstack 0
   491  00000D                     ___lldiv@counter:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0xC
   495  00000D                     	ds	1
   496  00000E                     ConfiRegRTC@reg:
   497                           	callstack 0
   498  00000E                     fputs@c:
   499                           	callstack 0
   500  00000E                     atoi@neg:
   501                           	callstack 0
   502  00000E                     I2C_Init_Master@speed_master:
   503                           	callstack 0
   504                           
   505                           ; 4 bytes @ 0xD
   506  00000E                     	ds	1
   507  00000F                     ConfiRegRTC@dir:
   508                           	callstack 0
   509  00000F                     fputs@i:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0xE
   513  00000F                     	ds	1
   514  000010                     ConfiRegRTC@data:
   515                           	callstack 0
   516  000010                     atoi@n:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0xF
   520  000010                     	ds	1
   521  000011                     ?_pad:
   522                           	callstack 0
   523  000011                     ___aodiv@counter:
   524                           	callstack 0
   525  000011                     ___aomod@counter:
   526                           	callstack 0
   527  000011                     pad@fp:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x10
   531  000011                     	ds	1
   532  000012                     I2C_Init_Master@interrupt_:
   533                           	callstack 0
   534  000012                     ___aodiv@sign:
   535                           	callstack 0
   536  000012                     ___aomod@sign:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x11
   540  000012                     	ds	1
   541  000013                     ??_I2C_Init_Master:
   542  000013                     ?_abs:
   543                           	callstack 0
   544  000013                     pad@buf:
   545                           	callstack 0
   546  000013                     abs@a:
   547                           	callstack 0
   548  000013                     ___aodiv@quotient:
   549                           	callstack 0
   550                           
   551                           ; 8 bytes @ 0x12
   552  000013                     	ds	2
   553  000015                     ??_abs:
   554  000015                     pad@p:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x14
   558  000015                     	ds	2
   559  000017                     ??_pad:
   560                           
   561                           ; 1 bytes @ 0x16
   562  000017                     	ds	1
   563  000018                     pad@i:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x17
   567  000018                     	ds	2
   568  00001A                     pad@w:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x19
   572  00001A                     	ds	2
   573  00001C                     ?_dtoa:
   574                           	callstack 0
   575  00001C                     dtoa@fp:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x1B
   579  00001C                     	ds	2
   580  00001E                     dtoa@d:
   581                           	callstack 0
   582                           
   583                           ; 8 bytes @ 0x1D
   584  00001E                     	ds	8
   585  000026                     ??_dtoa:
   586                           
   587                           ; 1 bytes @ 0x25
   588  000026                     	ds	8
   589  00002E                     _dtoa$978:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x2D
   593  00002E                     	ds	2
   594  000030                     dtoa@p:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x2F
   598  000030                     	ds	2
   599  000032                     dtoa@w:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x31
   603  000032                     	ds	2
   604  000034                     dtoa@s:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x33
   608  000034                     	ds	2
   609  000036                     dtoa@n:
   610                           	callstack 0
   611                           
   612                           ; 8 bytes @ 0x35
   613  000036                     	ds	8
   614  00003E                     dtoa@i:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x3D
   618  00003E                     	ds	2
   619  000040                     ?_vfpfcnvrt:
   620                           	callstack 0
   621  000040                     vfpfcnvrt@fp:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x3F
   625  000040                     	ds	2
   626  000042                     vfpfcnvrt@fmt:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x41
   630  000042                     	ds	2
   631  000044                     vfpfcnvrt@ap:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x43
   635  000044                     	ds	2
   636  000046                     ??_vfpfcnvrt:
   637                           
   638                           ; 1 bytes @ 0x45
   639  000046                     	ds	4
   640  00004A                     vfpfcnvrt@ll:
   641                           	callstack 0
   642                           
   643                           ; 8 bytes @ 0x49
   644  00004A                     	ds	8
   645  000052                     vfpfcnvrt@done:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x51
   649  000052                     	ds	2
   650  000054                     ?_vfprintf:
   651                           	callstack 0
   652  000054                     vfprintf@fp:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x53
   656  000054                     	ds	2
   657  000056                     vfprintf@fmt:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x55
   661  000056                     	ds	2
   662  000058                     vfprintf@ap:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x57
   666  000058                     	ds	2
   667  00005A                     vfprintf@cfmt:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x59
   671  00005A                     	ds	2
   672  00005C                     ??_main:
   673                           
   674                           ; 1 bytes @ 0x5B
   675  00005C                     	ds	2
   676                           
   677 ;;
   678 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   679 ;;
   680 ;; *************** function _main *****************
   681 ;; Defined at:
   682 ;;		line 147 in file "main.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;		None
   687 ;; Return value:  Size  Location     Type
   688 ;;                  2  198[None  ] int 
   689 ;; Registers used:
   690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   696 ;;      Params:         0       0       0       0       0       0       0       0       0
   697 ;;      Locals:         0       0       0       0       0       0       0       0       0
   698 ;;      Temps:          2       0       0       0       0       0       0       0       0
   699 ;;      Totals:         2       0       0       0       0       0       0       0       0
   700 ;;Total ram usage:        2 bytes
   701 ;; Hardware stack levels required when called: 9
   702 ;; This function calls:
   703 ;;		_ConfiRegRTC
   704 ;;		_I2C_Init_Master
   705 ;;		_Lcd_Cmd
   706 ;;		_Lcd_Init
   707 ;;		_getDataDs1307
   708 ;;		_readDs1307_sprintf
   709 ;; This function is called by:
   710 ;;		Startup code after reset
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text0
   715  0013E2                     __ptext0:
   716                           	callstack 0
   717  0013E2                     _main:
   718                           	callstack 22
   719  0013E2                     
   720                           ;main.c: 150:     ADCON1=0x0F;
   721  0013E2  0E0F               	movlw	15
   722  0013E4  6EC1               	movwf	193,c	;volatile
   723  0013E6                     
   724                           ;main.c: 152:     Lcd_Init();
   725  0013E6  EC92  F00B         	call	_Lcd_Init	;wreg free
   726  0013EA                     
   727                           ;main.c: 153:     Lcd_Cmd(12);
   728  0013EA  0E0C               	movlw	12
   729  0013EC  ECA8  F00F         	call	_Lcd_Cmd
   730  0013F0                     
   731                           ;main.c: 154:     I2C_Init_Master(100000,0);
   732  0013F0  0EA0               	movlw	160
   733  0013F2  6E0E               	movwf	I2C_Init_Master@speed_master^0,c
   734  0013F4  0E86               	movlw	134
   735  0013F6  6E0F               	movwf	(I2C_Init_Master@speed_master+1)^0,c
   736  0013F8  0E01               	movlw	1
   737  0013FA  6E10               	movwf	(I2C_Init_Master@speed_master+2)^0,c
   738  0013FC  0E00               	movlw	0
   739  0013FE  6E11               	movwf	(I2C_Init_Master@speed_master+3)^0,c
   740  001400  0E00               	movlw	0
   741  001402  6E12               	movwf	I2C_Init_Master@interrupt_^0,c
   742  001404  EC17  F00D         	call	_I2C_Init_Master	;wreg free
   743  001408                     
   744                           ;main.c: 156:     ConfiRegRTC(0xD0,data.segundos,reg_Segundos);
   745  001408  C087  F00D         	movff	_data,ConfiRegRTC@dato
   746  00140C  0E00               	movlw	0
   747  00140E  6E0E               	movwf	ConfiRegRTC@reg^0,c
   748  001410  0ED0               	movlw	208
   749  001412  EC51  F00D         	call	_ConfiRegRTC
   750  001416                     
   751                           ;main.c: 157:     ConfiRegRTC(0xD0,data.minutos,reg_min);
   752  001416  C088  F00D         	movff	_data+1,ConfiRegRTC@dato
   753  00141A  0E01               	movlw	1
   754  00141C  6E0E               	movwf	ConfiRegRTC@reg^0,c
   755  00141E  0ED0               	movlw	208
   756  001420  EC51  F00D         	call	_ConfiRegRTC
   757  001424                     
   758                           ;main.c: 158:     ConfiRegRTC(0xD0,data.horas,reg_horas);
   759  001424  C089  F00D         	movff	_data+2,ConfiRegRTC@dato
   760  001428  0E02               	movlw	2
   761  00142A  6E0E               	movwf	ConfiRegRTC@reg^0,c
   762  00142C  0ED0               	movlw	208
   763  00142E  EC51  F00D         	call	_ConfiRegRTC
   764  001432                     
   765                           ;main.c: 159:     ConfiRegRTC(0xD0,data.dates,reg_dates);
   766  001432  C08B  F00D         	movff	_data+4,ConfiRegRTC@dato
   767  001436  0E03               	movlw	3
   768  001438  6E0E               	movwf	ConfiRegRTC@reg^0,c
   769  00143A  0ED0               	movlw	208
   770  00143C  EC51  F00D         	call	_ConfiRegRTC
   771  001440                     
   772                           ;main.c: 160:     ConfiRegRTC(0xD0,data.dias,reg_dias);
   773  001440  C08A  F00D         	movff	_data+3,ConfiRegRTC@dato
   774  001444  0E04               	movlw	4
   775  001446  6E0E               	movwf	ConfiRegRTC@reg^0,c
   776  001448  0ED0               	movlw	208
   777  00144A  EC51  F00D         	call	_ConfiRegRTC
   778  00144E                     
   779                           ;main.c: 161:     ConfiRegRTC(0xD0,data.meses,reg_meses);
   780  00144E  C08C  F00D         	movff	_data+5,ConfiRegRTC@dato
   781  001452  0E05               	movlw	5
   782  001454  6E0E               	movwf	ConfiRegRTC@reg^0,c
   783  001456  0ED0               	movlw	208
   784  001458  EC51  F00D         	call	_ConfiRegRTC
   785  00145C                     
   786                           ;main.c: 162:     ConfiRegRTC(0xD0,data.years,reg_years);
   787  00145C  C08D  F00D         	movff	_data+6,ConfiRegRTC@dato
   788  001460  0E06               	movlw	6
   789  001462  6E0E               	movwf	ConfiRegRTC@reg^0,c
   790  001464  0ED0               	movlw	208
   791  001466  EC51  F00D         	call	_ConfiRegRTC
   792  00146A                     l2746:
   793                           
   794                           ;main.c: 165:         data.segundos=getDataDs1307(reg_Segundos);
   795  00146A  0E00               	movlw	0
   796  00146C  EC09  F00F         	call	_getDataDs1307
   797  001470  0100               	movlb	0	; () banked
   798  001472  6F87               	movwf	_data& (0+255),b
   799  001474                     
   800                           ; BSR set to: 0
   801                           ;main.c: 166:         data.minutos=getDataDs1307(reg_min);
   802  001474  0E01               	movlw	1
   803  001476  EC09  F00F         	call	_getDataDs1307
   804  00147A  0100               	movlb	0	; () banked
   805  00147C  6F88               	movwf	(_data+1)& (0+255),b
   806  00147E                     
   807                           ; BSR set to: 0
   808                           ;main.c: 167:         data.horas=getDataDs1307(reg_horas);
   809  00147E  0E02               	movlw	2
   810  001480  EC09  F00F         	call	_getDataDs1307
   811  001484  0100               	movlb	0	; () banked
   812  001486  6F89               	movwf	(_data+2)& (0+255),b
   813  001488                     
   814                           ; BSR set to: 0
   815                           ;main.c: 168:         data.dates=getDataDs1307(reg_dates);
   816  001488  0E03               	movlw	3
   817  00148A  EC09  F00F         	call	_getDataDs1307
   818  00148E  0100               	movlb	0	; () banked
   819  001490  6F8B               	movwf	(_data+4)& (0+255),b
   820  001492                     
   821                           ; BSR set to: 0
   822                           ;main.c: 169:         data.dias=getDataDs1307(reg_dias);
   823  001492  0E04               	movlw	4
   824  001494  EC09  F00F         	call	_getDataDs1307
   825  001498  0100               	movlb	0	; () banked
   826  00149A  6F8A               	movwf	(_data+3)& (0+255),b
   827  00149C                     
   828                           ; BSR set to: 0
   829                           ;main.c: 170:         data.meses=getDataDs1307(reg_meses);
   830  00149C  0E05               	movlw	5
   831  00149E  EC09  F00F         	call	_getDataDs1307
   832  0014A2  0100               	movlb	0	; () banked
   833  0014A4  6F8C               	movwf	(_data+5)& (0+255),b
   834  0014A6                     
   835                           ; BSR set to: 0
   836                           ;main.c: 171:         data.years=getDataDs1307(reg_years);
   837  0014A6  0E06               	movlw	6
   838  0014A8  EC09  F00F         	call	_getDataDs1307
   839  0014AC  0100               	movlb	0	; () banked
   840  0014AE  6F8D               	movwf	(_data+6)& (0+255),b
   841  0014B0                     
   842                           ; BSR set to: 0
   843                           ;main.c: 173:         readDs1307_sprintf();
   844  0014B0  EC9A  F00C         	call	_readDs1307_sprintf	;wreg free
   845  0014B4                     
   846                           ;main.c: 176:         _delay((unsigned long)((100)*(48000000UL/4000.0)));
   847  0014B4  0E07               	movlw	7
   848  0014B6  6E5D               	movwf	(??_main+1)^0,c
   849  0014B8  0E17               	movlw	23
   850  0014BA  6E5C               	movwf	??_main^0,c
   851  0014BC  0E6A               	movlw	106
   852  0014BE                     u1957:
   853  0014BE  2EE8               	decfsz	wreg,f,c
   854  0014C0  D7FE               	bra	u1957
   855  0014C2  2E5C               	decfsz	??_main^0,f,c
   856  0014C4  D7FC               	bra	u1957
   857  0014C6  2E5D               	decfsz	(??_main+1)^0,f,c
   858  0014C8  D7FA               	bra	u1957
   859  0014CA  D000               	nop2	
   860  0014CC  EF35  F00A         	goto	l2746
   861  0014D0  EF00  F000         	goto	start
   862  0014D4                     __end_of_main:
   863                           	callstack 0
   864                           
   865 ;; *************** function _readDs1307_sprintf *****************
   866 ;; Defined at:
   867 ;;		line 137 in file "main.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   881 ;;      Params:         0       0       0       0       0       0       0       0       0
   882 ;;      Locals:         0       0       0       0       0       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0       0       0       0       0
   884 ;;      Totals:         0       0       0       0       0       0       0       0       0
   885 ;;Total ram usage:        0 bytes
   886 ;; Hardware stack levels used: 1
   887 ;; Hardware stack levels required when called: 8
   888 ;; This function calls:
   889 ;;		_Lcd_Out
   890 ;;		_Lcd_XY
   891 ;;		_sprintf
   892 ;; This function is called by:
   893 ;;		_main
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           	psect	text1
   898  001934                     __ptext1:
   899                           	callstack 0
   900  001934                     _readDs1307_sprintf:
   901                           	callstack 22
   902  001934                     
   903                           ;main.c: 138:     Lcd_XY(1,1);
   904  001934  0E01               	movlw	1
   905  001936  6E05               	movwf	Lcd_XY@x^0,c
   906  001938  0E01               	movlw	1
   907  00193A  ECD9  F00C         	call	_Lcd_XY
   908  00193E                     
   909                           ;main.c: 139:     sprintf(aux,"TIEMPO: %02d:%02d:%02d",data.horas,data.minutos,data.segu
      +                          ndos);
   910  00193E  0E8E               	movlw	low _aux
   911  001940  0100               	movlb	0	; () banked
   912  001942  6FA2               	movwf	sprintf@s& (0+255),b
   913  001944  0E00               	movlw	high _aux
   914  001946  6FA3               	movwf	(sprintf@s+1)& (0+255),b
   915  001948  0E01               	movlw	low STR_5
   916  00194A  6FA4               	movwf	sprintf@fmt& (0+255),b
   917  00194C  0E08               	movlw	high STR_5
   918  00194E  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
   919  001950  C089  F0A6         	movff	_data+2,?_sprintf+4
   920  001954  6BA7               	clrf	(?_sprintf+5)& (0+255),b
   921  001956  C088  F0A8         	movff	_data+1,?_sprintf+6
   922  00195A  6BA9               	clrf	(?_sprintf+7)& (0+255),b
   923  00195C  C087  F0AA         	movff	_data,?_sprintf+8
   924  001960  6BAB               	clrf	(?_sprintf+9)& (0+255),b
   925  001962  ECE5  F00D         	call	_sprintf	;wreg free
   926  001966                     
   927                           ;main.c: 140:     Lcd_Out(aux);
   928  001966  0E8E               	movlw	low _aux
   929  001968  6E05               	movwf	Lcd_Out@text^0,c
   930  00196A  0E00               	movlw	high _aux
   931  00196C  6E06               	movwf	(Lcd_Out@text+1)^0,c
   932  00196E  ECB5  F00D         	call	_Lcd_Out	;wreg free
   933  001972                     
   934                           ;main.c: 141:     Lcd_XY(2,1);
   935  001972  0E01               	movlw	1
   936  001974  6E05               	movwf	Lcd_XY@x^0,c
   937  001976  0E02               	movlw	2
   938  001978  ECD9  F00C         	call	_Lcd_XY
   939  00197C                     
   940                           ;main.c: 142:     sprintf(aux,"FECHA: %02d/%02d/%02d",data.dias,data.meses,data.years);
   941  00197C  0E8E               	movlw	low _aux
   942  00197E  0100               	movlb	0	; () banked
   943  001980  6FA2               	movwf	sprintf@s& (0+255),b
   944  001982  0E00               	movlw	high _aux
   945  001984  6FA3               	movwf	(sprintf@s+1)& (0+255),b
   946  001986  0E18               	movlw	low STR_6
   947  001988  6FA4               	movwf	sprintf@fmt& (0+255),b
   948  00198A  0E08               	movlw	high STR_6
   949  00198C  6FA5               	movwf	(sprintf@fmt+1)& (0+255),b
   950  00198E  C08A  F0A6         	movff	_data+3,?_sprintf+4
   951  001992  6BA7               	clrf	(?_sprintf+5)& (0+255),b
   952  001994  C08C  F0A8         	movff	_data+5,?_sprintf+6
   953  001998  6BA9               	clrf	(?_sprintf+7)& (0+255),b
   954  00199A  C08D  F0AA         	movff	_data+6,?_sprintf+8
   955  00199E  6BAB               	clrf	(?_sprintf+9)& (0+255),b
   956  0019A0  ECE5  F00D         	call	_sprintf	;wreg free
   957                           
   958                           ;main.c: 143:     Lcd_Out(aux);
   959  0019A4  0E8E               	movlw	low _aux
   960  0019A6  6E05               	movwf	Lcd_Out@text^0,c
   961  0019A8  0E00               	movlw	high _aux
   962  0019AA  6E06               	movwf	(Lcd_Out@text+1)^0,c
   963  0019AC  ECB5  F00D         	call	_Lcd_Out	;wreg free
   964  0019B0  0012               	return		;funcret
   965  0019B2                     __end_of_readDs1307_sprintf:
   966                           	callstack 0
   967                           
   968 ;; *************** function _sprintf *****************
   969 ;; Defined at:
   970 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;  s               2    0[BANK0 ] PTR unsigned char 
   973 ;;		 -> aux(20), 
   974 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   975 ;;		 -> STR_6(22), STR_5(23), 
   976 ;; Auto vars:     Size  Location     Type
   977 ;;  f              11   12[BANK0 ] struct _IO_FILE
   978 ;;  ap              2   10[BANK0 ] PTR void [1]
   979 ;;		 -> ?_sprintf(2), 
   980 ;;  ret             2    0        int 
   981 ;; Return value:  Size  Location     Type
   982 ;;                  2    0[BANK0 ] int 
   983 ;; Registers used:
   984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   990 ;;      Params:         0      10       0       0       0       0       0       0       0
   991 ;;      Locals:         0      13       0       0       0       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0       0       0       0       0
   993 ;;      Totals:         0      23       0       0       0       0       0       0       0
   994 ;;Total ram usage:       23 bytes
   995 ;; Hardware stack levels used: 1
   996 ;; Hardware stack levels required when called: 7
   997 ;; This function calls:
   998 ;;		_vfprintf
   999 ;; This function is called by:
  1000 ;;		_readDs1307_sprintf
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text2
  1005  001BCA                     __ptext2:
  1006                           	callstack 0
  1007  001BCA                     _sprintf:
  1008                           	callstack 22
  1009  001BCA  0EA6               	movlw	low (?_sprintf+4)
  1010  001BCC  0100               	movlb	0	; () banked
  1011  001BCE  6FAC               	movwf	sprintf@ap& (0+255),b
  1012  001BD0  0E00               	movlw	high (?_sprintf+4)
  1013  001BD2  6FAD               	movwf	(sprintf@ap+1)& (0+255),b
  1014  001BD4  C0A2  F0AE         	movff	sprintf@s,sprintf@f
  1015  001BD8  C0A3  F0AF         	movff	sprintf@s+1,sprintf@f+1
  1016  001BDC                     
  1017                           ; BSR set to: 0
  1018  001BDC  0E00               	movlw	0
  1019  001BDE  6FB2               	movwf	(sprintf@f+4)& (0+255),b
  1020  001BE0  0E00               	movlw	0
  1021  001BE2  6FB1               	movwf	(sprintf@f+3)& (0+255),b
  1022  001BE4                     
  1023                           ; BSR set to: 0
  1024  001BE4  0E00               	movlw	0
  1025  001BE6  6FB8               	movwf	(sprintf@f+10)& (0+255),b
  1026  001BE8  0E00               	movlw	0
  1027  001BEA  6FB7               	movwf	(sprintf@f+9)& (0+255),b
  1028  001BEC                     
  1029                           ; BSR set to: 0
  1030  001BEC  0EAE               	movlw	low sprintf@f
  1031  001BEE  6E54               	movwf	vfprintf@fp^0,c
  1032  001BF0  0E00               	movlw	high sprintf@f
  1033  001BF2  6E55               	movwf	(vfprintf@fp+1)^0,c
  1034  001BF4  C0A4  F056         	movff	sprintf@fmt,vfprintf@fmt
  1035  001BF8  C0A5  F057         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1036  001BFC  0EAC               	movlw	low sprintf@ap
  1037  001BFE  6E58               	movwf	vfprintf@ap^0,c
  1038  001C00  0E00               	movlw	high sprintf@ap
  1039  001C02  6E59               	movwf	(vfprintf@ap+1)^0,c
  1040  001C04  EC84  F00D         	call	_vfprintf	;wreg free
  1041  001C08  0100               	movlb	0	; () banked
  1042  001C0A  51B1               	movf	(sprintf@f+3)& (0+255),w,b
  1043  001C0C  25A2               	addwf	sprintf@s& (0+255),w,b
  1044  001C0E  6ED9               	movwf	fsr2l,c
  1045  001C10  51B2               	movf	(sprintf@f+4)& (0+255),w,b
  1046  001C12  21A3               	addwfc	(sprintf@s+1)& (0+255),w,b
  1047  001C14  6EDA               	movwf	fsr2h,c
  1048  001C16  0E00               	movlw	0
  1049  001C18  6EDF               	movwf	indf2,c
  1050  001C1A                     
  1051                           ; BSR set to: 0
  1052  001C1A  0012               	return		;funcret
  1053  001C1C                     __end_of_sprintf:
  1054                           	callstack 0
  1055                           
  1056 ;; *************** function _vfprintf *****************
  1057 ;; Defined at:
  1058 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
  1061 ;;		 -> sprintf@f(11), 
  1062 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  1063 ;;		 -> STR_6(22), STR_5(23), 
  1064 ;;  ap              2   87[COMRAM] PTR PTR void 
  1065 ;;		 -> sprintf@ap(2), 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
  1068 ;;		 -> STR_6(22), STR_5(23), 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  2   83[COMRAM] int 
  1071 ;; Registers used:
  1072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1078 ;;      Params:         6       0       0       0       0       0       0       0       0
  1079 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1081 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1082 ;;Total ram usage:        8 bytes
  1083 ;; Hardware stack levels used: 1
  1084 ;; Hardware stack levels required when called: 6
  1085 ;; This function calls:
  1086 ;;		_vfpfcnvrt
  1087 ;; This function is called by:
  1088 ;;		_sprintf
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text3
  1093  001B08                     __ptext3:
  1094                           	callstack 0
  1095  001B08                     _vfprintf:
  1096                           	callstack 22
  1097  001B08                     
  1098                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1099  001B08  C056  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
  1100  001B0C  C057  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1101  001B10                     
  1102                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1103  001B10  0E00               	movlw	0
  1104  001B12  0100               	movlb	0	; () banked
  1105  001B14  6F61               	movwf	(_nout+1)& (0+255),b
  1106  001B16  0E00               	movlw	0
  1107  001B18  6F60               	movwf	_nout& (0+255),b
  1108                           
  1109                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1110  001B1A  EFA2  F00D         	goto	l2448
  1111  001B1E                     l2446:
  1112                           
  1113                           ; BSR set to: 0
  1114                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1115  001B1E  C054  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1116  001B22  C055  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1117  001B26  0E5A               	movlw	low vfprintf@cfmt
  1118  001B28  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1119  001B2A  0E00               	movlw	high vfprintf@cfmt
  1120  001B2C  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1121  001B2E  C058  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1122  001B32  C059  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1123  001B36  EC22  F004         	call	_vfpfcnvrt	;wreg free
  1124  001B3A  5040               	movf	?_vfpfcnvrt^0,w,c
  1125  001B3C  0100               	movlb	0	; () banked
  1126  001B3E  2760               	addwf	_nout& (0+255),f,b
  1127  001B40  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1128  001B42  2361               	addwfc	(_nout+1)& (0+255),f,b
  1129  001B44                     l2448:
  1130                           
  1131                           ; BSR set to: 0
  1132                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1133  001B44  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
  1134  001B48  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1135  001B4C                     	if	0	;tblptru may be non-zero
  1136  001B4C                     	endif
  1137  001B4C                     	if	0	;tblptru may be non-zero
  1138  001B4C                     	endif
  1139  001B4C  0008               	tblrd		*
  1140  001B4E  50F5               	movf	tablat,w,c
  1141  001B50  0900               	iorlw	0
  1142  001B52  A4D8               	btfss	status,2,c
  1143  001B54  EFAE  F00D         	goto	u1741
  1144  001B58  EFB0  F00D         	goto	u1740
  1145  001B5C                     u1741:
  1146  001B5C  EF8F  F00D         	goto	l2446
  1147  001B60                     u1740:
  1148  001B60                     
  1149                           ; BSR set to: 0
  1150                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1151  001B60  C060  F054         	movff	_nout,?_vfprintf
  1152  001B64  C061  F055         	movff	_nout+1,?_vfprintf+1
  1153  001B68                     
  1154                           ; BSR set to: 0
  1155  001B68  0012               	return		;funcret
  1156  001B6A                     __end_of_vfprintf:
  1157                           	callstack 0
  1158                           
  1159 ;; *************** function _vfpfcnvrt *****************
  1160 ;; Defined at:
  1161 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1164 ;;		 -> sprintf@f(11), 
  1165 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1166 ;;		 -> vfprintf@cfmt(2), 
  1167 ;;  ap              2   67[COMRAM] PTR PTR void 
  1168 ;;		 -> sprintf@ap(2), 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  ll              8   73[COMRAM] long long 
  1171 ;;  llu             8    0        unsigned long long 
  1172 ;;  f               4    0        unsigned long long 
  1173 ;;  vp              3    0        PTR void 
  1174 ;;  ct              3    0        unsigned char [3]
  1175 ;;  cp              3    0        PTR unsigned char 
  1176 ;;  done            2   81[COMRAM] int 
  1177 ;;  i               2    0        int 
  1178 ;;  c               1    0        unsigned char 
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  2   63[COMRAM] int 
  1181 ;; Registers used:
  1182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1188 ;;      Params:         6       0       0       0       0       0       0       0       0
  1189 ;;      Locals:        10       0       0       0       0       0       0       0       0
  1190 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1191 ;;      Totals:        20       0       0       0       0       0       0       0       0
  1192 ;;Total ram usage:       20 bytes
  1193 ;; Hardware stack levels used: 1
  1194 ;; Hardware stack levels required when called: 5
  1195 ;; This function calls:
  1196 ;;		_atoi
  1197 ;;		_dtoa
  1198 ;;		_fputc
  1199 ;;		_isdigit
  1200 ;; This function is called by:
  1201 ;;		_vfprintf
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           	psect	text4
  1206  000844                     __ptext4:
  1207                           	callstack 0
  1208  000844                     _vfpfcnvrt:
  1209                           	callstack 22
  1210  000844                     
  1211                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1212  000844  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1213  000848  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1214  00084C  CFDE FFF6          	movff	postinc2,tblptrl
  1215  000850  CFDD FFF7          	movff	postdec2,tblptrh
  1216  000854                     	if	0	;tblptru may be non-zero
  1217  000854                     	endif
  1218  000854                     	if	0	;tblptru may be non-zero
  1219  000854                     	endif
  1220  000854  0008               	tblrd		*
  1221  000856  50F5               	movf	tablat,w,c
  1222  000858  0A25               	xorlw	37
  1223  00085A  A4D8               	btfss	status,2,c
  1224  00085C  EF32  F004         	goto	u1491
  1225  000860  EF34  F004         	goto	u1490
  1226  000864                     u1491:
  1227  000864  EFAF  F005         	goto	l2326
  1228  000868                     u1490:
  1229  000868                     
  1230                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1231  000868  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1232  00086C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1233  000870  2ADE               	incf	postinc2,f,c
  1234  000872  0E00               	movlw	0
  1235  000874  22DD               	addwfc	postdec2,f,c
  1236  000876                     
  1237                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1238  000876  0E00               	movlw	0
  1239  000878  0100               	movlb	0	; () banked
  1240  00087A  6F63               	movwf	(_width+1)& (0+255),b
  1241  00087C  0E00               	movlw	0
  1242  00087E  6F62               	movwf	_width& (0+255),b
  1243  000880  C062  F05E         	movff	_width,_flags
  1244  000884  C063  F05F         	movff	_width+1,_flags+1
  1245  000888                     
  1246                           ; BSR set to: 0
  1247                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1248  000888  6964               	setf	_prec& (0+255),b
  1249  00088A  6965               	setf	(_prec+1)& (0+255),b
  1250  00088C                     
  1251                           ; BSR set to: 0
  1252                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1253  00088C  0E00               	movlw	0
  1254  00088E  6E53               	movwf	(vfpfcnvrt@done+1)^0,c
  1255  000890  0E00               	movlw	0
  1256  000892  6E52               	movwf	vfpfcnvrt@done^0,c
  1257                           
  1258                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1259  000894  EF92  F004         	goto	l2280
  1260  000898                     l2254:
  1261                           
  1262                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1263  000898  805E               	bsf	_flags^0,0,c
  1264  00089A                     l2256:
  1265                           
  1266                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1267  00089A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1268  00089E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1269  0008A2  2ADE               	incf	postinc2,f,c
  1270  0008A4  0E00               	movlw	0
  1271  0008A6  22DD               	addwfc	postdec2,f,c
  1272                           
  1273                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1274  0008A8  EF92  F004         	goto	l2280
  1275  0008AC                     l2258:
  1276                           
  1277                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1278  0008AC  825E               	bsf	_flags^0,1,c
  1279  0008AE  EF4D  F004         	goto	l2256
  1280  0008B2                     l2262:
  1281                           
  1282                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1283  0008B2  845E               	bsf	_flags^0,2,c
  1284  0008B4  EF4D  F004         	goto	l2256
  1285  0008B8                     l2266:
  1286                           
  1287                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1288  0008B8  865E               	bsf	_flags^0,3,c
  1289  0008BA  EF4D  F004         	goto	l2256
  1290  0008BE                     l2270:
  1291                           
  1292                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1293  0008BE  885E               	bsf	_flags^0,4,c
  1294  0008C0  EF4D  F004         	goto	l2256
  1295  0008C4                     l2274:
  1296                           
  1297                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1298  0008C4  0E00               	movlw	0
  1299  0008C6  6E53               	movwf	(vfpfcnvrt@done+1)^0,c
  1300  0008C8  0E01               	movlw	1
  1301  0008CA  6E52               	movwf	vfpfcnvrt@done^0,c
  1302                           
  1303                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1304  0008CC  EF92  F004         	goto	l2280
  1305  0008D0                     l2278:
  1306  0008D0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1307  0008D4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1308  0008D8  CFDE FFF6          	movff	postinc2,tblptrl
  1309  0008DC  CFDD FFF7          	movff	postdec2,tblptrh
  1310  0008E0                     	if	0	;tblptru may be non-zero
  1311  0008E0                     	endif
  1312  0008E0                     	if	0	;tblptru may be non-zero
  1313  0008E0                     	endif
  1314  0008E0  0008               	tblrd		*
  1315  0008E2  50F5               	movf	tablat,w,c
  1316  0008E4  6E46               	movwf	??_vfpfcnvrt^0,c
  1317  0008E6  6A47               	clrf	(??_vfpfcnvrt+1)^0,c
  1318                           
  1319                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1320                           ; Switch size 1, requested type "simple"
  1321                           ; Number of cases is 1, Range of values is 0 to 0
  1322                           ; switch strategies available:
  1323                           ; Name         Instructions Cycles
  1324                           ; simple_byte            4     3 (average)
  1325                           ;	Chosen strategy is simple_byte
  1326  0008E8  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  1327  0008EA  0A00               	xorlw	0	; case 0
  1328  0008EC  B4D8               	btfsc	status,2,c
  1329  0008EE  EF7B  F004         	goto	l2824
  1330  0008F2  EF62  F004         	goto	l2274
  1331  0008F6                     l2824:
  1332                           
  1333                           ; Switch size 1, requested type "simple"
  1334                           ; Number of cases is 5, Range of values is 32 to 48
  1335                           ; switch strategies available:
  1336                           ; Name         Instructions Cycles
  1337                           ; simple_byte           16     9 (average)
  1338                           ;	Chosen strategy is simple_byte
  1339  0008F6  5046               	movf	??_vfpfcnvrt^0,w,c
  1340  0008F8  0A20               	xorlw	32	; case 32
  1341  0008FA  B4D8               	btfsc	status,2,c
  1342  0008FC  EF5C  F004         	goto	l2266
  1343  000900  0A03               	xorlw	3	; case 35
  1344  000902  B4D8               	btfsc	status,2,c
  1345  000904  EF5F  F004         	goto	l2270
  1346  000908  0A08               	xorlw	8	; case 43
  1347  00090A  B4D8               	btfsc	status,2,c
  1348  00090C  EF59  F004         	goto	l2262
  1349  000910  0A06               	xorlw	6	; case 45
  1350  000912  B4D8               	btfsc	status,2,c
  1351  000914  EF4C  F004         	goto	l2254
  1352  000918  0A1D               	xorlw	29	; case 48
  1353  00091A  B4D8               	btfsc	status,2,c
  1354  00091C  EF56  F004         	goto	l2258
  1355  000920  EF62  F004         	goto	l2274
  1356  000924                     l2280:
  1357                           
  1358                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1359  000924  5052               	movf	vfpfcnvrt@done^0,w,c
  1360  000926  1053               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1361  000928  B4D8               	btfsc	status,2,c
  1362  00092A  EF99  F004         	goto	u1501
  1363  00092E  EF9B  F004         	goto	u1500
  1364  000932                     u1501:
  1365  000932  EF68  F004         	goto	l2278
  1366  000936                     u1500:
  1367  000936                     
  1368                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1369  000936  A05E               	btfss	_flags^0,0,c
  1370  000938  EFA0  F004         	goto	u1511
  1371  00093C  EFA2  F004         	goto	u1510
  1372  000940                     u1511:
  1373  000940  EFA3  F004         	goto	l2284
  1374  000944                     u1510:
  1375  000944                     
  1376                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1377  000944  925E               	bcf	_flags^0,1,c
  1378  000946                     l2284:
  1379                           
  1380                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1381  000946  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1382  00094A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1383  00094E  CFDE FFF6          	movff	postinc2,tblptrl
  1384  000952  CFDD FFF7          	movff	postdec2,tblptrh
  1385  000956                     	if	0	;tblptru may be non-zero
  1386  000956                     	endif
  1387  000956                     	if	0	;tblptru may be non-zero
  1388  000956                     	endif
  1389  000956  0008               	tblrd		*
  1390  000958  50F5               	movf	tablat,w,c
  1391  00095A  0A2A               	xorlw	42
  1392  00095C  A4D8               	btfss	status,2,c
  1393  00095E  EFB3  F004         	goto	u1521
  1394  000962  EFB5  F004         	goto	u1520
  1395  000966                     u1521:
  1396  000966  EFDF  F004         	goto	l2292
  1397  00096A                     u1520:
  1398  00096A                     
  1399                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1400  00096A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1401  00096E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1402  000972  2ADE               	incf	postinc2,f,c
  1403  000974  0E00               	movlw	0
  1404  000976  22DD               	addwfc	postdec2,f,c
  1405                           
  1406                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1407  000978  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1408  00097C  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1409  000980  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1410  000984  0E02               	movlw	2
  1411  000986  26DE               	addwf	postinc2,f,c
  1412  000988  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1413  00098C  0E00               	movlw	0
  1414  00098E  22DD               	addwfc	postdec2,f,c
  1415  000990  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1416  000994  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1417  000998  CFDE F062          	movff	postinc2,_width
  1418  00099C  CFDD F063          	movff	postdec2,_width+1
  1419  0009A0                     
  1420                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1421  0009A0  0100               	movlb	0	; () banked
  1422  0009A2  BF63               	btfsc	(_width+1)& (0+255),7,b
  1423  0009A4  EFD8  F004         	goto	u1530
  1424  0009A8  EFD6  F004         	goto	u1531
  1425  0009AC                     u1531:
  1426  0009AC  EF15  F005         	goto	l2300
  1427  0009B0                     u1530:
  1428  0009B0                     
  1429                           ; BSR set to: 0
  1430                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1431  0009B0  805E               	bsf	_flags^0,0,c
  1432                           
  1433                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1434  0009B2  6D62               	negf	_width& (0+255),b
  1435  0009B4  1F63               	comf	(_width+1)& (0+255),f,b
  1436  0009B6  B0D8               	btfsc	status,0,c
  1437  0009B8  2B63               	incf	(_width+1)& (0+255),f,b
  1438  0009BA  EF15  F005         	goto	l2300
  1439  0009BE                     l2292:
  1440                           
  1441                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1442  0009BE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1443  0009C2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1444  0009C6  CFDE F008          	movff	postinc2,atoi@s
  1445  0009CA  CFDD F009          	movff	postdec2,atoi@s+1
  1446  0009CE  ECB0  F008         	call	_atoi	;wreg free
  1447  0009D2  C008  F062         	movff	?_atoi,_width
  1448  0009D6  C009  F063         	movff	?_atoi+1,_width+1
  1449                           
  1450                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1451  0009DA  EFF6  F004         	goto	l2298
  1452  0009DE                     l2294:
  1453                           
  1454                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1455  0009DE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1456  0009E2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1457  0009E6  2ADE               	incf	postinc2,f,c
  1458  0009E8  0E00               	movlw	0
  1459  0009EA  22DD               	addwfc	postdec2,f,c
  1460  0009EC                     l2298:
  1461  0009EC  0ED0               	movlw	208
  1462  0009EE  6E46               	movwf	??_vfpfcnvrt^0,c
  1463  0009F0  0EFF               	movlw	255
  1464  0009F2  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  1465  0009F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1466  0009F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1467  0009FC  CFDE FFF6          	movff	postinc2,tblptrl
  1468  000A00  CFDD FFF7          	movff	postdec2,tblptrh
  1469  000A04                     	if	0	;tblptru may be non-zero
  1470  000A04                     	endif
  1471  000A04                     	if	0	;tblptru may be non-zero
  1472  000A04                     	endif
  1473  000A04  0008               	tblrd		*
  1474  000A06  50F5               	movf	tablat,w,c
  1475  000A08  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  1476  000A0A  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  1477  000A0C  5046               	movf	??_vfpfcnvrt^0,w,c
  1478  000A0E  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1479  000A10  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  1480  000A12  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1481  000A14  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  1482  000A16  E109               	bnz	u1540
  1483  000A18  0E0A               	movlw	10
  1484  000A1A  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1485  000A1C  A0D8               	btfss	status,0,c
  1486  000A1E  EF13  F005         	goto	u1541
  1487  000A22  EF15  F005         	goto	u1540
  1488  000A26                     u1541:
  1489  000A26  EFEF  F004         	goto	l2294
  1490  000A2A                     u1540:
  1491  000A2A                     l2300:
  1492                           
  1493                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1494  000A2A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1495  000A2E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1496  000A32  CFDE FFF6          	movff	postinc2,tblptrl
  1497  000A36  CFDD FFF7          	movff	postdec2,tblptrh
  1498  000A3A                     	if	0	;tblptru may be non-zero
  1499  000A3A                     	endif
  1500  000A3A                     	if	0	;tblptru may be non-zero
  1501  000A3A                     	endif
  1502  000A3A  0008               	tblrd		*
  1503  000A3C  50F5               	movf	tablat,w,c
  1504  000A3E  0A64               	xorlw	100
  1505  000A40  B4D8               	btfsc	status,2,c
  1506  000A42  EF25  F005         	goto	u1551
  1507  000A46  EF27  F005         	goto	u1550
  1508  000A4A                     u1551:
  1509  000A4A  EF39  F005         	goto	l2304
  1510  000A4E                     u1550:
  1511  000A4E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1512  000A52  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1513  000A56  CFDE FFF6          	movff	postinc2,tblptrl
  1514  000A5A  CFDD FFF7          	movff	postdec2,tblptrh
  1515  000A5E                     	if	0	;tblptru may be non-zero
  1516  000A5E                     	endif
  1517  000A5E                     	if	0	;tblptru may be non-zero
  1518  000A5E                     	endif
  1519  000A5E  0008               	tblrd		*
  1520  000A60  50F5               	movf	tablat,w,c
  1521  000A62  0A69               	xorlw	105
  1522  000A64  A4D8               	btfss	status,2,c
  1523  000A66  EF37  F005         	goto	u1561
  1524  000A6A  EF39  F005         	goto	u1560
  1525  000A6E                     u1561:
  1526  000A6E  EF79  F005         	goto	l2310
  1527  000A72                     u1560:
  1528  000A72                     l2304:
  1529                           
  1530                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1531  000A72  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1532  000A76  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1533  000A7A  2ADE               	incf	postinc2,f,c
  1534  000A7C  0E00               	movlw	0
  1535  000A7E  22DD               	addwfc	postdec2,f,c
  1536                           
  1537                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1538  000A80  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1539  000A84  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1540  000A88  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1541  000A8C  0E02               	movlw	2
  1542  000A8E  26DE               	addwf	postinc2,f,c
  1543  000A90  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1544  000A94  0E00               	movlw	0
  1545  000A96  22DD               	addwfc	postdec2,f,c
  1546  000A98  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1547  000A9C  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1548  000AA0  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  1549  000AA4  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  1550  000AA8  0E00               	movlw	0
  1551  000AAA  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1552  000AAC  0EFF               	movlw	-1
  1553  000AAE  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  1554  000AB0  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  1555  000AB2  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  1556  000AB4  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  1557  000AB6  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  1558  000AB8  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  1559  000ABA                     
  1560                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1561  000ABA  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1562  000ABE  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1563  000AC2  C04A  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1564  000AC6  C04B  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1565  000ACA  C04C  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1566  000ACE  C04D  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1567  000AD2  C04E  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1568  000AD6  C04F  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1569  000ADA  C050  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1570  000ADE  C051  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1571  000AE2  ECCB  F005         	call	_dtoa	;wreg free
  1572  000AE6  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1573  000AEA  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1574  000AEE  EFCA  F005         	goto	l972
  1575  000AF2                     l2310:
  1576                           
  1577                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1578  000AF2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1579  000AF6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1580  000AFA  CFDE FFF6          	movff	postinc2,tblptrl
  1581  000AFE  CFDD FFF7          	movff	postdec2,tblptrh
  1582  000B02                     	if	0	;tblptru may be non-zero
  1583  000B02                     	endif
  1584  000B02                     	if	0	;tblptru may be non-zero
  1585  000B02                     	endif
  1586  000B02  0008               	tblrd		*
  1587  000B04  50F5               	movf	tablat,w,c
  1588  000B06  0A25               	xorlw	37
  1589  000B08  A4D8               	btfss	status,2,c
  1590  000B0A  EF89  F005         	goto	u1571
  1591  000B0E  EF8B  F005         	goto	u1570
  1592  000B12                     u1571:
  1593  000B12  EFA2  F005         	goto	l2320
  1594  000B16                     u1570:
  1595  000B16                     
  1596                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1597  000B16  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1598  000B1A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1599  000B1E  2ADE               	incf	postinc2,f,c
  1600  000B20  0E00               	movlw	0
  1601  000B22  22DD               	addwfc	postdec2,f,c
  1602  000B24                     
  1603                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1604  000B24  0E00               	movlw	0
  1605  000B26  6E02               	movwf	(fputc@c+1)^0,c
  1606  000B28  0E25               	movlw	37
  1607  000B2A  6E01               	movwf	fputc@c^0,c
  1608  000B2C  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1609  000B30  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1610  000B34  EC6A  F00A         	call	_fputc	;wreg free
  1611  000B38                     l2316:
  1612                           
  1613                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1614  000B38  0E00               	movlw	0
  1615  000B3A  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1616  000B3C  0E01               	movlw	1
  1617  000B3E  6E40               	movwf	?_vfpfcnvrt^0,c
  1618  000B40  EFCA  F005         	goto	l972
  1619  000B44                     l2320:
  1620                           
  1621                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1622  000B44  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1623  000B48  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1624  000B4C  2ADE               	incf	postinc2,f,c
  1625  000B4E  0E00               	movlw	0
  1626  000B50  22DD               	addwfc	postdec2,f,c
  1627  000B52                     
  1628                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1629  000B52  0E00               	movlw	0
  1630  000B54  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1631  000B56  0E00               	movlw	0
  1632  000B58  6E40               	movwf	?_vfpfcnvrt^0,c
  1633  000B5A  EFCA  F005         	goto	l972
  1634  000B5E                     l2326:
  1635                           
  1636                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1637  000B5E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1638  000B62  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1639  000B66  CFDE FFF6          	movff	postinc2,tblptrl
  1640  000B6A  CFDD FFF7          	movff	postdec2,tblptrh
  1641  000B6E                     	if	0	;tblptru may be non-zero
  1642  000B6E                     	endif
  1643  000B6E                     	if	0	;tblptru may be non-zero
  1644  000B6E                     	endif
  1645  000B6E  0008               	tblrd		*
  1646  000B70  50F5               	movf	tablat,w,c
  1647  000B72  6E01               	movwf	fputc@c^0,c
  1648  000B74  6A02               	clrf	(fputc@c+1)^0,c
  1649  000B76  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1650  000B7A  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1651  000B7E  EC6A  F00A         	call	_fputc	;wreg free
  1652  000B82                     
  1653                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1654  000B82  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1655  000B86  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1656  000B8A  2ADE               	incf	postinc2,f,c
  1657  000B8C  0E00               	movlw	0
  1658  000B8E  22DD               	addwfc	postdec2,f,c
  1659  000B90  EF9C  F005         	goto	l2316
  1660  000B94                     l972:
  1661  000B94  0012               	return		;funcret
  1662  000B96                     __end_of_vfpfcnvrt:
  1663                           	callstack 0
  1664                           
  1665 ;; *************** function _dtoa *****************
  1666 ;; Defined at:
  1667 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1670 ;;		 -> sprintf@f(11), 
  1671 ;;  d               8   29[COMRAM] long long 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  n               8   53[COMRAM] long long 
  1674 ;;  i               2   61[COMRAM] int 
  1675 ;;  s               2   51[COMRAM] int 
  1676 ;;  w               2   49[COMRAM] int 
  1677 ;;  p               2   47[COMRAM] int 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  2   27[COMRAM] int 
  1680 ;; Registers used:
  1681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1687 ;;      Params:        10       0       0       0       0       0       0       0       0
  1688 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1689 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1690 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1691 ;;Total ram usage:       36 bytes
  1692 ;; Hardware stack levels used: 1
  1693 ;; Hardware stack levels required when called: 4
  1694 ;; This function calls:
  1695 ;;		___aodiv
  1696 ;;		___aomod
  1697 ;;		_abs
  1698 ;;		_pad
  1699 ;; This function is called by:
  1700 ;;		_vfpfcnvrt
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text5
  1705  000B96                     __ptext5:
  1706                           	callstack 0
  1707  000B96                     _dtoa:
  1708                           	callstack 22
  1709  000B96                     
  1710                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1711  000B96  C01E  F036         	movff	dtoa@d,dtoa@n
  1712  000B9A  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1713  000B9E  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1714  000BA2  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1715  000BA6  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1716  000BAA  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1717  000BAE  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1718  000BB2  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1719  000BB6                     
  1720                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1721  000BB6  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1722  000BB8  EFE0  F005         	goto	u1271
  1723  000BBC  EFE3  F005         	goto	u1270
  1724  000BC0                     u1271:
  1725  000BC0  0E01               	movlw	1
  1726  000BC2  EFE4  F005         	goto	u1280
  1727  000BC6                     u1270:
  1728  000BC6  0E00               	movlw	0
  1729  000BC8                     u1280:
  1730  000BC8  6E34               	movwf	dtoa@s^0,c
  1731  000BCA  6A35               	clrf	(dtoa@s+1)^0,c
  1732                           
  1733                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1734  000BCC  5034               	movf	dtoa@s^0,w,c
  1735  000BCE  1035               	iorwf	(dtoa@s+1)^0,w,c
  1736  000BD0  B4D8               	btfsc	status,2,c
  1737  000BD2  EFED  F005         	goto	u1291
  1738  000BD6  EFEF  F005         	goto	u1290
  1739  000BDA                     u1291:
  1740  000BDA  EFFF  F005         	goto	l2114
  1741  000BDE                     u1290:
  1742  000BDE                     
  1743                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1744  000BDE  1E3D               	comf	(dtoa@n+7)^0,f,c
  1745  000BE0  1E3C               	comf	(dtoa@n+6)^0,f,c
  1746  000BE2  1E3B               	comf	(dtoa@n+5)^0,f,c
  1747  000BE4  1E3A               	comf	(dtoa@n+4)^0,f,c
  1748  000BE6  1E39               	comf	(dtoa@n+3)^0,f,c
  1749  000BE8  1E38               	comf	(dtoa@n+2)^0,f,c
  1750  000BEA  1E37               	comf	(dtoa@n+1)^0,f,c
  1751  000BEC  6C36               	negf	dtoa@n^0,c
  1752  000BEE  0E00               	movlw	0
  1753  000BF0  2237               	addwfc	(dtoa@n+1)^0,f,c
  1754  000BF2  2238               	addwfc	(dtoa@n+2)^0,f,c
  1755  000BF4  2239               	addwfc	(dtoa@n+3)^0,f,c
  1756  000BF6  223A               	addwfc	(dtoa@n+4)^0,f,c
  1757  000BF8  223B               	addwfc	(dtoa@n+5)^0,f,c
  1758  000BFA  223C               	addwfc	(dtoa@n+6)^0,f,c
  1759  000BFC  223D               	addwfc	(dtoa@n+7)^0,f,c
  1760  000BFE                     l2114:
  1761                           
  1762                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1763  000BFE  0100               	movlb	0	; () banked
  1764  000C00  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1765  000C02  EF05  F006         	goto	u1301
  1766  000C06  EF07  F006         	goto	u1300
  1767  000C0A                     u1301:
  1768  000C0A  EF08  F006         	goto	l2118
  1769  000C0E                     u1300:
  1770  000C0E                     
  1771                           ; BSR set to: 0
  1772                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1773  000C0E  925E               	bcf	_flags^0,1,c
  1774  000C10                     l2118:
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1778  000C10  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1779  000C12  EF15  F006         	goto	u1310
  1780  000C16  5165               	movf	(_prec+1)& (0+255),w,b
  1781  000C18  E106               	bnz	u1311
  1782  000C1A  0564               	decf	_prec& (0+255),w,b
  1783  000C1C  B0D8               	btfsc	status,0,c
  1784  000C1E  EF13  F006         	goto	u1311
  1785  000C22  EF15  F006         	goto	u1310
  1786  000C26                     u1311:
  1787  000C26  EF1B  F006         	goto	l925
  1788  000C2A                     u1310:
  1789  000C2A                     
  1790                           ; BSR set to: 0
  1791  000C2A  0E00               	movlw	0
  1792  000C2C  6E31               	movwf	(dtoa@p+1)^0,c
  1793  000C2E  0E01               	movlw	1
  1794  000C30  6E30               	movwf	dtoa@p^0,c
  1795  000C32  EF1F  F006         	goto	l927
  1796  000C36                     l925:
  1797                           
  1798                           ; BSR set to: 0
  1799  000C36  C064  F030         	movff	_prec,dtoa@p
  1800  000C3A  C065  F031         	movff	_prec+1,dtoa@p+1
  1801  000C3E                     l927:
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1805  000C3E  C062  F032         	movff	_width,dtoa@w
  1806  000C42  C063  F033         	movff	_width+1,dtoa@w+1
  1807  000C46                     
  1808                           ; BSR set to: 0
  1809                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1810  000C46  5034               	movf	dtoa@s^0,w,c
  1811  000C48  1035               	iorwf	(dtoa@s+1)^0,w,c
  1812  000C4A  A4D8               	btfss	status,2,c
  1813  000C4C  EF2A  F006         	goto	u1321
  1814  000C50  EF2C  F006         	goto	u1320
  1815  000C54                     u1321:
  1816  000C54  EF33  F006         	goto	l2126
  1817  000C58                     u1320:
  1818  000C58                     
  1819                           ; BSR set to: 0
  1820  000C58  A45E               	btfss	_flags^0,2,c
  1821  000C5A  EF31  F006         	goto	u1331
  1822  000C5E  EF33  F006         	goto	u1330
  1823  000C62                     u1331:
  1824  000C62  EF36  F006         	goto	l2128
  1825  000C66                     u1330:
  1826  000C66                     l2126:
  1827                           
  1828                           ; BSR set to: 0
  1829                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 306:         --w;
  1830  000C66  0632               	decf	dtoa@w^0,f,c
  1831  000C68  A0D8               	btfss	status,0,c
  1832  000C6A  0633               	decf	(dtoa@w+1)^0,f,c
  1833  000C6C                     l2128:
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1837  000C6C  0E00               	movlw	0
  1838  000C6E  6E3F               	movwf	(dtoa@i+1)^0,c
  1839  000C70  0E1F               	movlw	31
  1840  000C72  6E3E               	movwf	dtoa@i^0,c
  1841  000C74                     
  1842                           ; BSR set to: 0
  1843                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1844  000C74  0E00               	movlw	0
  1845  000C76  6F86               	movwf	(_dbuf+31)& (0+255),b
  1846                           
  1847                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1848  000C78  EFBA  F006         	goto	l2142
  1849  000C7C                     l2132:
  1850                           
  1851                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 313:         --i;
  1852  000C7C  063E               	decf	dtoa@i^0,f,c
  1853  000C7E  A0D8               	btfss	status,0,c
  1854  000C80  063F               	decf	(dtoa@i+1)^0,f,c
  1855  000C82                     
  1856                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1857  000C82  0E67               	movlw	low _dbuf
  1858  000C84  243E               	addwf	dtoa@i^0,w,c
  1859  000C86  6ED9               	movwf	fsr2l,c
  1860  000C88  0E00               	movlw	high _dbuf
  1861  000C8A  203F               	addwfc	(dtoa@i+1)^0,w,c
  1862  000C8C  6EDA               	movwf	fsr2h,c
  1863  000C8E  C036  F001         	movff	dtoa@n,___aomod@dividend
  1864  000C92  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1865  000C96  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1866  000C9A  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1867  000C9E  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1868  000CA2  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1869  000CA6  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1870  000CAA  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1871  000CAE  0E0A               	movlw	10
  1872  000CB0  6E09               	movwf	___aomod@divisor^0,c
  1873  000CB2  0E00               	movlw	0
  1874  000CB4  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1875  000CB6  0E00               	movlw	0
  1876  000CB8  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1877  000CBA  0E00               	movlw	0
  1878  000CBC  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1879  000CBE  0E00               	movlw	0
  1880  000CC0  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1881  000CC2  0E00               	movlw	0
  1882  000CC4  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1883  000CC6  0E00               	movlw	0
  1884  000CC8  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1885  000CCA  0E00               	movlw	0
  1886  000CCC  6E10               	movwf	(___aomod@divisor+7)^0,c
  1887  000CCE  ECFE  F007         	call	___aomod	;wreg free
  1888  000CD2  C001  F026         	movff	?___aomod,??_dtoa
  1889  000CD6  C002  F027         	movff	?___aomod+1,??_dtoa+1
  1890  000CDA  C003  F028         	movff	?___aomod+2,??_dtoa+2
  1891  000CDE  C004  F029         	movff	?___aomod+3,??_dtoa+3
  1892  000CE2  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  1893  000CE6  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  1894  000CEA  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  1895  000CEE  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  1896  000CF2  C026  F013         	movff	??_dtoa,abs@a
  1897  000CF6  C028  F014         	movff	??_dtoa+2,abs@a+1
  1898  000CFA  EC59  F00E         	call	_abs	;wreg free
  1899  000CFE  5013               	movf	?_abs^0,w,c
  1900  000D00  0F30               	addlw	48
  1901  000D02  6EDF               	movwf	indf2,c
  1902  000D04                     
  1903                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 315:         --p;
  1904  000D04  0630               	decf	dtoa@p^0,f,c
  1905  000D06  A0D8               	btfss	status,0,c
  1906  000D08  0631               	decf	(dtoa@p+1)^0,f,c
  1907  000D0A                     
  1908                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 316:         --w;
  1909  000D0A  0632               	decf	dtoa@w^0,f,c
  1910  000D0C  A0D8               	btfss	status,0,c
  1911  000D0E  0633               	decf	(dtoa@w+1)^0,f,c
  1912  000D10                     
  1913                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1914  000D10  C036  F001         	movff	dtoa@n,___aodiv@dividend
  1915  000D14  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1916  000D18  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1917  000D1C  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1918  000D20  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1919  000D24  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1920  000D28  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1921  000D2C  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1922  000D30  0E0A               	movlw	10
  1923  000D32  6E09               	movwf	___aodiv@divisor^0,c
  1924  000D34  0E00               	movlw	0
  1925  000D36  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1926  000D38  0E00               	movlw	0
  1927  000D3A  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1928  000D3C  0E00               	movlw	0
  1929  000D3E  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1930  000D40  0E00               	movlw	0
  1931  000D42  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1932  000D44  0E00               	movlw	0
  1933  000D46  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1934  000D48  0E00               	movlw	0
  1935  000D4A  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1936  000D4C  0E00               	movlw	0
  1937  000D4E  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1938  000D50  EC3A  F007         	call	___aodiv	;wreg free
  1939  000D54  C001  F036         	movff	?___aodiv,dtoa@n
  1940  000D58  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  1941  000D5C  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  1942  000D60  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  1943  000D64  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  1944  000D68  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  1945  000D6C  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  1946  000D70  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  1947  000D74                     l2142:
  1948                           
  1949                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1950  000D74  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  1951  000D76  EFC5  F006         	goto	u1341
  1952  000D7A  503F               	movf	(dtoa@i+1)^0,w,c
  1953  000D7C  E108               	bnz	u1340
  1954  000D7E  043E               	decf	dtoa@i^0,w,c
  1955  000D80  A0D8               	btfss	status,0,c
  1956  000D82  EFC5  F006         	goto	u1341
  1957  000D86  EFC7  F006         	goto	u1340
  1958  000D8A                     u1341:
  1959  000D8A  EFF7  F006         	goto	l2152
  1960  000D8E                     u1340:
  1961  000D8E  5036               	movf	dtoa@n^0,w,c
  1962  000D90  1037               	iorwf	(dtoa@n+1)^0,w,c
  1963  000D92  1038               	iorwf	(dtoa@n+2)^0,w,c
  1964  000D94  1039               	iorwf	(dtoa@n+3)^0,w,c
  1965  000D96  103A               	iorwf	(dtoa@n+4)^0,w,c
  1966  000D98  103B               	iorwf	(dtoa@n+5)^0,w,c
  1967  000D9A  103C               	iorwf	(dtoa@n+6)^0,w,c
  1968  000D9C  103D               	iorwf	(dtoa@n+7)^0,w,c
  1969  000D9E  A4D8               	btfss	status,2,c
  1970  000DA0  EFD4  F006         	goto	u1351
  1971  000DA4  EFD6  F006         	goto	u1350
  1972  000DA8                     u1351:
  1973  000DA8  EF3E  F006         	goto	l2132
  1974  000DAC                     u1350:
  1975  000DAC  BE31               	btfsc	(dtoa@p+1)^0,7,c
  1976  000DAE  EFE3  F006         	goto	u1360
  1977  000DB2  5031               	movf	(dtoa@p+1)^0,w,c
  1978  000DB4  E106               	bnz	u1361
  1979  000DB6  0430               	decf	dtoa@p^0,w,c
  1980  000DB8  B0D8               	btfsc	status,0,c
  1981  000DBA  EFE1  F006         	goto	u1361
  1982  000DBE  EFE3  F006         	goto	u1360
  1983  000DC2                     u1361:
  1984  000DC2  EF3E  F006         	goto	l2132
  1985  000DC6                     u1360:
  1986  000DC6  BE33               	btfsc	(dtoa@w+1)^0,7,c
  1987  000DC8  EFEE  F006         	goto	u1371
  1988  000DCC  5033               	movf	(dtoa@w+1)^0,w,c
  1989  000DCE  E108               	bnz	u1370
  1990  000DD0  0432               	decf	dtoa@w^0,w,c
  1991  000DD2  A0D8               	btfss	status,0,c
  1992  000DD4  EFEE  F006         	goto	u1371
  1993  000DD8  EFF0  F006         	goto	u1370
  1994  000DDC                     u1371:
  1995  000DDC  EFF7  F006         	goto	l2152
  1996  000DE0                     u1370:
  1997  000DE0  B25E               	btfsc	_flags^0,1,c
  1998  000DE2  EFF5  F006         	goto	u1381
  1999  000DE6  EFF7  F006         	goto	u1380
  2000  000DEA                     u1381:
  2001  000DEA  EF3E  F006         	goto	l2132
  2002  000DEE                     u1380:
  2003  000DEE                     l2152:
  2004                           
  2005                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2006  000DEE  5034               	movf	dtoa@s^0,w,c
  2007  000DF0  1035               	iorwf	(dtoa@s+1)^0,w,c
  2008  000DF2  A4D8               	btfss	status,2,c
  2009  000DF4  EFFE  F006         	goto	u1391
  2010  000DF8  EF00  F007         	goto	u1390
  2011  000DFC                     u1391:
  2012  000DFC  EF07  F007         	goto	l2156
  2013  000E00                     u1390:
  2014  000E00  A45E               	btfss	_flags^0,2,c
  2015  000E02  EF05  F007         	goto	u1401
  2016  000E06  EF07  F007         	goto	u1400
  2017  000E0A                     u1401:
  2018  000E0A  EF25  F007         	goto	l2166
  2019  000E0E                     u1400:
  2020  000E0E                     l2156:
  2021                           
  2022                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 322:         --i;
  2023  000E0E  063E               	decf	dtoa@i^0,f,c
  2024  000E10  A0D8               	btfss	status,0,c
  2025  000E12  063F               	decf	(dtoa@i+1)^0,f,c
  2026  000E14                     
  2027                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2028  000E14  5034               	movf	dtoa@s^0,w,c
  2029  000E16  1035               	iorwf	(dtoa@s+1)^0,w,c
  2030  000E18  A4D8               	btfss	status,2,c
  2031  000E1A  EF11  F007         	goto	u1411
  2032  000E1E  EF13  F007         	goto	u1410
  2033  000E22                     u1411:
  2034  000E22  EF19  F007         	goto	l2162
  2035  000E26                     u1410:
  2036  000E26  0E00               	movlw	0
  2037  000E28  6E2F               	movwf	(_dtoa$978+1)^0,c
  2038  000E2A  0E2B               	movlw	43
  2039  000E2C  6E2E               	movwf	_dtoa$978^0,c
  2040  000E2E  EF1D  F007         	goto	l2164
  2041  000E32                     l2162:
  2042  000E32  0E00               	movlw	0
  2043  000E34  6E2F               	movwf	(_dtoa$978+1)^0,c
  2044  000E36  0E2D               	movlw	45
  2045  000E38  6E2E               	movwf	_dtoa$978^0,c
  2046  000E3A                     l2164:
  2047  000E3A  0E67               	movlw	low _dbuf
  2048  000E3C  243E               	addwf	dtoa@i^0,w,c
  2049  000E3E  6ED9               	movwf	fsr2l,c
  2050  000E40  0E00               	movlw	high _dbuf
  2051  000E42  203F               	addwfc	(dtoa@i+1)^0,w,c
  2052  000E44  6EDA               	movwf	fsr2h,c
  2053  000E46  C02E  FFDF         	movff	_dtoa$978,indf2
  2054  000E4A                     l2166:
  2055                           
  2056                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2057  000E4A  C01C  F011         	movff	dtoa@fp,pad@fp
  2058  000E4E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2059  000E52  0E67               	movlw	low _dbuf
  2060  000E54  243E               	addwf	dtoa@i^0,w,c
  2061  000E56  6E13               	movwf	pad@buf^0,c
  2062  000E58  0E00               	movlw	high _dbuf
  2063  000E5A  203F               	addwfc	(dtoa@i+1)^0,w,c
  2064  000E5C  6E14               	movwf	(pad@buf+1)^0,c
  2065  000E5E  C032  F015         	movff	dtoa@w,pad@p
  2066  000E62  C033  F016         	movff	dtoa@w+1,pad@p+1
  2067  000E66  EC31  F00B         	call	_pad	;wreg free
  2068  000E6A  C011  F01C         	movff	?_pad,?_dtoa
  2069  000E6E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  2070  000E72  0012               	return		;funcret
  2071  000E74                     __end_of_dtoa:
  2072                           	callstack 0
  2073                           
  2074 ;; *************** function _pad *****************
  2075 ;; Defined at:
  2076 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2079 ;;		 -> sprintf@f(11), 
  2080 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2081 ;;		 -> dbuf(32), 
  2082 ;;  p               2   20[COMRAM] int 
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  w               2   25[COMRAM] int 
  2085 ;;  i               2   23[COMRAM] int 
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  2   16[COMRAM] int 
  2088 ;; Registers used:
  2089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2095 ;;      Params:         6       0       0       0       0       0       0       0       0
  2096 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2097 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2098 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2099 ;;Total ram usage:       11 bytes
  2100 ;; Hardware stack levels used: 1
  2101 ;; Hardware stack levels required when called: 3
  2102 ;; This function calls:
  2103 ;;		_fputc
  2104 ;;		_fputs
  2105 ;;		_strlen
  2106 ;; This function is called by:
  2107 ;;		_dtoa
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text6
  2112  001662                     __ptext6:
  2113                           	callstack 0
  2114  001662                     _pad:
  2115                           	callstack 22
  2116  001662                     
  2117                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2118  001662  A05E               	btfss	_flags^0,0,c
  2119  001664  EF36  F00B         	goto	u1181
  2120  001668  EF38  F00B         	goto	u1180
  2121  00166C                     u1181:
  2122  00166C  EF42  F00B         	goto	l2070
  2123  001670                     u1180:
  2124  001670                     
  2125                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2126  001670  C013  F00A         	movff	pad@buf,fputs@s
  2127  001674  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2128  001678  C011  F00C         	movff	pad@fp,fputs@fp
  2129  00167C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2130  001680  EC37  F00E         	call	_fputs	;wreg free
  2131  001684                     l2070:
  2132                           
  2133                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2134  001684  BE16               	btfsc	(pad@p+1)^0,7,c
  2135  001686  EF47  F00B         	goto	u1191
  2136  00168A  EF49  F00B         	goto	u1190
  2137  00168E                     u1191:
  2138  00168E  EF4F  F00B         	goto	l2074
  2139  001692                     u1190:
  2140  001692  C015  F01A         	movff	pad@p,pad@w
  2141  001696  C016  F01B         	movff	pad@p+1,pad@w+1
  2142  00169A  EF53  F00B         	goto	l914
  2143  00169E                     l2074:
  2144  00169E  0E00               	movlw	0
  2145  0016A0  6E1B               	movwf	(pad@w+1)^0,c
  2146  0016A2  0E00               	movlw	0
  2147  0016A4  6E1A               	movwf	pad@w^0,c
  2148  0016A6                     l914:
  2149                           
  2150                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2151  0016A6  0E00               	movlw	0
  2152  0016A8  6E19               	movwf	(pad@i+1)^0,c
  2153  0016AA  0E00               	movlw	0
  2154  0016AC  6E18               	movwf	pad@i^0,c
  2155                           
  2156                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2157  0016AE  EF65  F00B         	goto	l2080
  2158  0016B2                     l2076:
  2159                           
  2160                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2161  0016B2  0E00               	movlw	0
  2162  0016B4  6E02               	movwf	(fputc@c+1)^0,c
  2163  0016B6  0E20               	movlw	32
  2164  0016B8  6E01               	movwf	fputc@c^0,c
  2165  0016BA  C011  F003         	movff	pad@fp,fputc@fp
  2166  0016BE  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2167  0016C2  EC6A  F00A         	call	_fputc	;wreg free
  2168  0016C6                     
  2169                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2170  0016C6  4A18               	infsnz	pad@i^0,f,c
  2171  0016C8  2A19               	incf	(pad@i+1)^0,f,c
  2172  0016CA                     l2080:
  2173                           
  2174                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2175  0016CA  501A               	movf	pad@w^0,w,c
  2176  0016CC  5C18               	subwf	pad@i^0,w,c
  2177  0016CE  5019               	movf	(pad@i+1)^0,w,c
  2178  0016D0  0A80               	xorlw	128
  2179  0016D2  6E17               	movwf	??_pad^0,c
  2180  0016D4  501B               	movf	(pad@w+1)^0,w,c
  2181  0016D6  0A80               	xorlw	128
  2182  0016D8  5817               	subwfb	??_pad^0,w,c
  2183  0016DA  A0D8               	btfss	status,0,c
  2184  0016DC  EF72  F00B         	goto	u1201
  2185  0016E0  EF74  F00B         	goto	u1200
  2186  0016E4                     u1201:
  2187  0016E4  EF59  F00B         	goto	l2076
  2188  0016E8                     u1200:
  2189  0016E8                     
  2190                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2191  0016E8  B05E               	btfsc	_flags^0,0,c
  2192  0016EA  EF79  F00B         	goto	u1211
  2193  0016EE  EF7B  F00B         	goto	u1210
  2194  0016F2                     u1211:
  2195  0016F2  EF85  F00B         	goto	l2084
  2196  0016F6                     u1210:
  2197  0016F6                     
  2198                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2199  0016F6  C013  F00A         	movff	pad@buf,fputs@s
  2200  0016FA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2201  0016FE  C011  F00C         	movff	pad@fp,fputs@fp
  2202  001702  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2203  001706  EC37  F00E         	call	_fputs	;wreg free
  2204  00170A                     l2084:
  2205                           
  2206                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2207  00170A  C013  F001         	movff	pad@buf,strlen@s
  2208  00170E  C014  F002         	movff	pad@buf+1,strlen@s+1
  2209  001712  ECEE  F00E         	call	_strlen	;wreg free
  2210  001716  501A               	movf	pad@w^0,w,c
  2211  001718  2401               	addwf	?_strlen^0,w,c
  2212  00171A  6E11               	movwf	?_pad^0,c
  2213  00171C  501B               	movf	(pad@w+1)^0,w,c
  2214  00171E  2002               	addwfc	(?_strlen+1)^0,w,c
  2215  001720  6E12               	movwf	(?_pad+1)^0,c
  2216  001722  0012               	return		;funcret
  2217  001724                     __end_of_pad:
  2218                           	callstack 0
  2219                           
  2220 ;; *************** function _strlen *****************
  2221 ;; Defined at:
  2222 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2225 ;;		 -> dbuf(32), 
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2228 ;;		 -> dbuf(32), 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  2    0[COMRAM] unsigned int 
  2231 ;; Registers used:
  2232 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2238 ;;      Params:         2       0       0       0       0       0       0       0       0
  2239 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2240 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2241 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2242 ;;Total ram usage:        4 bytes
  2243 ;; Hardware stack levels used: 1
  2244 ;; This function calls:
  2245 ;;		Nothing
  2246 ;; This function is called by:
  2247 ;;		_pad
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           	psect	text7
  2252  001DDC                     __ptext7:
  2253                           	callstack 0
  2254  001DDC                     _strlen:
  2255                           	callstack 24
  2256  001DDC  C001  F003         	movff	strlen@s,strlen@a
  2257  001DE0  C002  F004         	movff	strlen@s+1,strlen@a+1
  2258  001DE4  EFF6  F00E         	goto	l1974
  2259  001DE8                     l1972:
  2260  001DE8  4A01               	infsnz	strlen@s^0,f,c
  2261  001DEA  2A02               	incf	(strlen@s+1)^0,f,c
  2262  001DEC                     l1974:
  2263  001DEC  C001  FFD9         	movff	strlen@s,fsr2l
  2264  001DF0  C002  FFDA         	movff	strlen@s+1,fsr2h
  2265  001DF4  50DF               	movf	indf2,w,c
  2266  001DF6  A4D8               	btfss	status,2,c
  2267  001DF8  EF00  F00F         	goto	u1041
  2268  001DFC  EF02  F00F         	goto	u1040
  2269  001E00                     u1041:
  2270  001E00  EFF4  F00E         	goto	l1972
  2271  001E04                     u1040:
  2272  001E04  5003               	movf	strlen@a^0,w,c
  2273  001E06  5C01               	subwf	strlen@s^0,w,c
  2274  001E08  6E01               	movwf	?_strlen^0,c
  2275  001E0A  5004               	movf	(strlen@a+1)^0,w,c
  2276  001E0C  5802               	subwfb	(strlen@s+1)^0,w,c
  2277  001E0E  6E02               	movwf	(?_strlen+1)^0,c
  2278  001E10  0012               	return		;funcret
  2279  001E12                     __end_of_strlen:
  2280                           	callstack 0
  2281                           
  2282 ;; *************** function _fputs *****************
  2283 ;; Defined at:
  2284 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2287 ;;		 -> dbuf(32), 
  2288 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2289 ;;		 -> sprintf@f(11), 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  i               2   14[COMRAM] int 
  2292 ;;  c               1   13[COMRAM] unsigned char 
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  2    9[COMRAM] int 
  2295 ;; Registers used:
  2296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2302 ;;      Params:         4       0       0       0       0       0       0       0       0
  2303 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2305 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2306 ;;Total ram usage:        7 bytes
  2307 ;; Hardware stack levels used: 1
  2308 ;; Hardware stack levels required when called: 2
  2309 ;; This function calls:
  2310 ;;		_fputc
  2311 ;; This function is called by:
  2312 ;;		_pad
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           	psect	text8
  2317  001C6E                     __ptext8:
  2318                           	callstack 0
  2319  001C6E                     _fputs:
  2320                           	callstack 22
  2321  001C6E  0E00               	movlw	0
  2322  001C70  6E10               	movwf	(fputs@i+1)^0,c
  2323  001C72  0E00               	movlw	0
  2324  001C74  6E0F               	movwf	fputs@i^0,c
  2325  001C76  EF48  F00E         	goto	l1968
  2326  001C7A                     l1964:
  2327  001C7A  C00E  F001         	movff	fputs@c,fputc@c
  2328  001C7E  6A02               	clrf	(fputc@c+1)^0,c
  2329  001C80  C00C  F003         	movff	fputs@fp,fputc@fp
  2330  001C84  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2331  001C88  EC6A  F00A         	call	_fputc	;wreg free
  2332  001C8C  4A0F               	infsnz	fputs@i^0,f,c
  2333  001C8E  2A10               	incf	(fputs@i+1)^0,f,c
  2334  001C90                     l1968:
  2335  001C90  500F               	movf	fputs@i^0,w,c
  2336  001C92  240A               	addwf	fputs@s^0,w,c
  2337  001C94  6ED9               	movwf	fsr2l,c
  2338  001C96  5010               	movf	(fputs@i+1)^0,w,c
  2339  001C98  200B               	addwfc	(fputs@s+1)^0,w,c
  2340  001C9A  6EDA               	movwf	fsr2h,c
  2341  001C9C  50DF               	movf	indf2,w,c
  2342  001C9E  6E0E               	movwf	fputs@c^0,c
  2343  001CA0  500E               	movf	fputs@c^0,w,c
  2344  001CA2  A4D8               	btfss	status,2,c
  2345  001CA4  EF56  F00E         	goto	u1031
  2346  001CA8  EF58  F00E         	goto	u1030
  2347  001CAC                     u1031:
  2348  001CAC  EF3D  F00E         	goto	l1964
  2349  001CB0                     u1030:
  2350  001CB0  0012               	return		;funcret
  2351  001CB2                     __end_of_fputs:
  2352                           	callstack 0
  2353                           
  2354 ;; *************** function _fputc *****************
  2355 ;; Defined at:
  2356 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  c               2    0[COMRAM] int 
  2359 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2360 ;;		 -> sprintf@f(11), 
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;		None
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  2    0[COMRAM] int 
  2365 ;; Registers used:
  2366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2372 ;;      Params:         4       0       0       0       0       0       0       0       0
  2373 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2374 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2375 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2376 ;;Total ram usage:        9 bytes
  2377 ;; Hardware stack levels used: 1
  2378 ;; Hardware stack levels required when called: 1
  2379 ;; This function calls:
  2380 ;;		_putch
  2381 ;; This function is called by:
  2382 ;;		_pad
  2383 ;;		_vfpfcnvrt
  2384 ;;		_fputs
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text9
  2389  0014D4                     __ptext9:
  2390                           	callstack 0
  2391  0014D4                     _fputc:
  2392                           	callstack 25
  2393  0014D4  5003               	movf	fputc@fp^0,w,c
  2394  0014D6  1004               	iorwf	(fputc@fp+1)^0,w,c
  2395  0014D8  B4D8               	btfsc	status,2,c
  2396  0014DA  EF71  F00A         	goto	u991
  2397  0014DE  EF73  F00A         	goto	u990
  2398  0014E2                     u991:
  2399  0014E2  EF7C  F00A         	goto	l1952
  2400  0014E6                     u990:
  2401  0014E6  5003               	movf	fputc@fp^0,w,c
  2402  0014E8  1004               	iorwf	(fputc@fp+1)^0,w,c
  2403  0014EA  A4D8               	btfss	status,2,c
  2404  0014EC  EF7A  F00A         	goto	u1001
  2405  0014F0  EF7C  F00A         	goto	u1000
  2406  0014F4                     u1001:
  2407  0014F4  EF81  F00A         	goto	l1954
  2408  0014F8                     u1000:
  2409  0014F8                     l1952:
  2410  0014F8  5001               	movf	fputc@c^0,w,c
  2411  0014FA  ECB6  F00F         	call	_putch
  2412  0014FE  EFCE  F00A         	goto	l1037
  2413  001502                     l1954:
  2414  001502  EE20 F009          	lfsr	2,9
  2415  001506  5003               	movf	fputc@fp^0,w,c
  2416  001508  26D9               	addwf	fsr2l,f,c
  2417  00150A  5004               	movf	(fputc@fp+1)^0,w,c
  2418  00150C  22DA               	addwfc	fsr2h,f,c
  2419  00150E  50DE               	movf	postinc2,w,c
  2420  001510  10DE               	iorwf	postinc2,w,c
  2421  001512  B4D8               	btfsc	status,2,c
  2422  001514  EF8E  F00A         	goto	u1011
  2423  001518  EF90  F00A         	goto	u1010
  2424  00151C                     u1011:
  2425  00151C  EFAB  F00A         	goto	l1958
  2426  001520                     u1010:
  2427  001520  EE20 F009          	lfsr	2,9
  2428  001524  5003               	movf	fputc@fp^0,w,c
  2429  001526  26D9               	addwf	fsr2l,f,c
  2430  001528  5004               	movf	(fputc@fp+1)^0,w,c
  2431  00152A  22DA               	addwfc	fsr2h,f,c
  2432  00152C  EE10 F003          	lfsr	1,3
  2433  001530  5003               	movf	fputc@fp^0,w,c
  2434  001532  26E1               	addwf	fsr1l,f,c
  2435  001534  5004               	movf	(fputc@fp+1)^0,w,c
  2436  001536  22E2               	addwfc	fsr1h,f,c
  2437  001538  50DE               	movf	postinc2,w,c
  2438  00153A  5CE6               	subwf	postinc1,w,c
  2439  00153C  50E6               	movf	postinc1,w,c
  2440  00153E  0A80               	xorlw	128
  2441  001540  6E09               	movwf	(??_fputc+4)^0,c
  2442  001542  50DE               	movf	postinc2,w,c
  2443  001544  0A80               	xorlw	128
  2444  001546  5809               	subwfb	(??_fputc+4)^0,w,c
  2445  001548  B0D8               	btfsc	status,0,c
  2446  00154A  EFA9  F00A         	goto	u1021
  2447  00154E  EFAB  F00A         	goto	u1020
  2448  001552                     u1021:
  2449  001552  EFCE  F00A         	goto	l1037
  2450  001556                     u1020:
  2451  001556                     l1958:
  2452  001556  EE20 F003          	lfsr	2,3
  2453  00155A  5003               	movf	fputc@fp^0,w,c
  2454  00155C  26D9               	addwf	fsr2l,f,c
  2455  00155E  5004               	movf	(fputc@fp+1)^0,w,c
  2456  001560  22DA               	addwfc	fsr2h,f,c
  2457  001562  CFDE F005          	movff	postinc2,??_fputc
  2458  001566  CFDD F006          	movff	postdec2,??_fputc+1
  2459  00156A  C003  FFD9         	movff	fputc@fp,fsr2l
  2460  00156E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2461  001572  CFDE F007          	movff	postinc2,??_fputc+2
  2462  001576  CFDD F008          	movff	postdec2,??_fputc+3
  2463  00157A  5005               	movf	??_fputc^0,w,c
  2464  00157C  2407               	addwf	(??_fputc+2)^0,w,c
  2465  00157E  6ED9               	movwf	fsr2l,c
  2466  001580  5006               	movf	(??_fputc+1)^0,w,c
  2467  001582  2008               	addwfc	(??_fputc+3)^0,w,c
  2468  001584  6EDA               	movwf	fsr2h,c
  2469  001586  C001  FFDF         	movff	fputc@c,indf2
  2470  00158A  EE20 F003          	lfsr	2,3
  2471  00158E  5003               	movf	fputc@fp^0,w,c
  2472  001590  26D9               	addwf	fsr2l,f,c
  2473  001592  5004               	movf	(fputc@fp+1)^0,w,c
  2474  001594  22DA               	addwfc	fsr2h,f,c
  2475  001596  2ADE               	incf	postinc2,f,c
  2476  001598  0E00               	movlw	0
  2477  00159A  22DD               	addwfc	postdec2,f,c
  2478  00159C                     l1037:
  2479  00159C  0012               	return		;funcret
  2480  00159E                     __end_of_fputc:
  2481                           	callstack 0
  2482                           
  2483 ;; *************** function _putch *****************
  2484 ;; Defined at:
  2485 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  c               1    wreg     unsigned char 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  c               1    0[COMRAM] unsigned char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  1    wreg      void 
  2492 ;; Registers used:
  2493 ;;		wreg
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2499 ;;      Params:         0       0       0       0       0       0       0       0       0
  2500 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2501 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2502 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2503 ;;Total ram usage:        0 bytes
  2504 ;; Hardware stack levels used: 1
  2505 ;; This function calls:
  2506 ;;		Nothing
  2507 ;; This function is called by:
  2508 ;;		_fputc
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text10
  2513  001F6C                     __ptext10:
  2514                           	callstack 0
  2515  001F6C                     _putch:
  2516                           	callstack 25
  2517  001F6C  0012               	return		;funcret
  2518  001F6E                     __end_of_putch:
  2519                           	callstack 0
  2520                           
  2521 ;; *************** function _abs *****************
  2522 ;; Defined at:
  2523 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\abs.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  a               2   18[COMRAM] int 
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;		None
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  2   18[COMRAM] int 
  2530 ;; Registers used:
  2531 ;;		wreg, status,2, status,0
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2537 ;;      Params:         2       0       0       0       0       0       0       0       0
  2538 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2539 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2540 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2541 ;;Total ram usage:        4 bytes
  2542 ;; Hardware stack levels used: 1
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_dtoa
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text11
  2551  001CB2                     __ptext11:
  2552                           	callstack 0
  2553  001CB2                     _abs:
  2554                           	callstack 25
  2555  001CB2  BE14               	btfsc	(abs@a+1)^0,7,c
  2556  001CB4  EF66  F00E         	goto	u1220
  2557  001CB8  5014               	movf	(abs@a+1)^0,w,c
  2558  001CBA  E106               	bnz	u1221
  2559  001CBC  0413               	decf	abs@a^0,w,c
  2560  001CBE  B0D8               	btfsc	status,0,c
  2561  001CC0  EF64  F00E         	goto	u1221
  2562  001CC4  EF66  F00E         	goto	u1220
  2563  001CC8                     u1221:
  2564  001CC8  EF74  F00E         	goto	l983
  2565  001CCC                     u1220:
  2566  001CCC  C013  F015         	movff	abs@a,??_abs
  2567  001CD0  C014  F016         	movff	abs@a+1,??_abs+1
  2568  001CD4  1E15               	comf	??_abs^0,f,c
  2569  001CD6  1E16               	comf	(??_abs+1)^0,f,c
  2570  001CD8  4A15               	infsnz	??_abs^0,f,c
  2571  001CDA  2A16               	incf	(??_abs+1)^0,f,c
  2572  001CDC  C015  F013         	movff	??_abs,?_abs
  2573  001CE0  C016  F014         	movff	??_abs+1,?_abs+1
  2574  001CE4  EF78  F00E         	goto	l986
  2575  001CE8                     l983:
  2576  001CE8  C013  F013         	movff	abs@a,?_abs
  2577  001CEC  C014  F014         	movff	abs@a+1,?_abs+1
  2578  001CF0                     l986:
  2579  001CF0  0012               	return		;funcret
  2580  001CF2                     __end_of_abs:
  2581                           	callstack 0
  2582                           
  2583 ;; *************** function ___aomod *****************
  2584 ;; Defined at:
  2585 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aomod.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  dividend        8    0[COMRAM] long long 
  2588 ;;  divisor         8    8[COMRAM] long long 
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;  sign            1   17[COMRAM] unsigned char 
  2591 ;;  counter         1   16[COMRAM] unsigned char 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  8    0[COMRAM] long long 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2601 ;;      Params:        16       0       0       0       0       0       0       0       0
  2602 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2604 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2605 ;;Total ram usage:       18 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		_dtoa
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           	psect	text12
  2615  000FFC                     __ptext12:
  2616                           	callstack 0
  2617  000FFC                     ___aomod:
  2618                           	callstack 25
  2619  000FFC  0E00               	movlw	0
  2620  000FFE  6E12               	movwf	___aomod@sign^0,c
  2621  001000  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2622  001002  EF07  F008         	goto	u1120
  2623  001006  EF05  F008         	goto	u1121
  2624  00100A                     u1121:
  2625  00100A  EF19  F008         	goto	l2038
  2626  00100E                     u1120:
  2627  00100E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2628  001010  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2629  001012  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2630  001014  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2631  001016  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2632  001018  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2633  00101A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2634  00101C  6C01               	negf	___aomod@dividend^0,c
  2635  00101E  0E00               	movlw	0
  2636  001020  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2637  001022  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2638  001024  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2639  001026  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2640  001028  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2641  00102A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2642  00102C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2643  00102E  0E01               	movlw	1
  2644  001030  6E12               	movwf	___aomod@sign^0,c
  2645  001032                     l2038:
  2646  001032  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2647  001034  EF20  F008         	goto	u1130
  2648  001038  EF1E  F008         	goto	u1131
  2649  00103C                     u1131:
  2650  00103C  EF30  F008         	goto	l2042
  2651  001040                     u1130:
  2652  001040  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2653  001042  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2654  001044  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2655  001046  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2656  001048  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2657  00104A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2658  00104C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2659  00104E  6C09               	negf	___aomod@divisor^0,c
  2660  001050  0E00               	movlw	0
  2661  001052  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2662  001054  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2663  001056  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2664  001058  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2665  00105A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2666  00105C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2667  00105E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2668  001060                     l2042:
  2669  001060  5009               	movf	___aomod@divisor^0,w,c
  2670  001062  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2671  001064  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2672  001066  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2673  001068  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2674  00106A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2675  00106C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2676  00106E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2677  001070  B4D8               	btfsc	status,2,c
  2678  001072  EF3D  F008         	goto	u1141
  2679  001076  EF3F  F008         	goto	u1140
  2680  00107A                     u1141:
  2681  00107A  EF87  F008         	goto	l2058
  2682  00107E                     u1140:
  2683  00107E  0E01               	movlw	1
  2684  001080  6E11               	movwf	___aomod@counter^0,c
  2685  001082  EF4D  F008         	goto	l2048
  2686  001086                     l2046:
  2687  001086  90D8               	bcf	status,0,c
  2688  001088  3609               	rlcf	___aomod@divisor^0,f,c
  2689  00108A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2690  00108C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2691  00108E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2692  001090  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2693  001092  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2694  001094  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2695  001096  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2696  001098  2A11               	incf	___aomod@counter^0,f,c
  2697  00109A                     l2048:
  2698  00109A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2699  00109C  EF52  F008         	goto	u1151
  2700  0010A0  EF54  F008         	goto	u1150
  2701  0010A4                     u1151:
  2702  0010A4  EF43  F008         	goto	l2046
  2703  0010A8                     u1150:
  2704  0010A8                     l2050:
  2705  0010A8  5009               	movf	___aomod@divisor^0,w,c
  2706  0010AA  5C01               	subwf	___aomod@dividend^0,w,c
  2707  0010AC  500A               	movf	(___aomod@divisor+1)^0,w,c
  2708  0010AE  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2709  0010B0  500B               	movf	(___aomod@divisor+2)^0,w,c
  2710  0010B2  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2711  0010B4  500C               	movf	(___aomod@divisor+3)^0,w,c
  2712  0010B6  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2713  0010B8  500D               	movf	(___aomod@divisor+4)^0,w,c
  2714  0010BA  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2715  0010BC  500E               	movf	(___aomod@divisor+5)^0,w,c
  2716  0010BE  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2717  0010C0  500F               	movf	(___aomod@divisor+6)^0,w,c
  2718  0010C2  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2719  0010C4  5010               	movf	(___aomod@divisor+7)^0,w,c
  2720  0010C6  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2721  0010C8  A0D8               	btfss	status,0,c
  2722  0010CA  EF69  F008         	goto	u1161
  2723  0010CE  EF6B  F008         	goto	u1160
  2724  0010D2                     u1161:
  2725  0010D2  EF7B  F008         	goto	l2054
  2726  0010D6                     u1160:
  2727  0010D6  5009               	movf	___aomod@divisor^0,w,c
  2728  0010D8  5E01               	subwf	___aomod@dividend^0,f,c
  2729  0010DA  500A               	movf	(___aomod@divisor+1)^0,w,c
  2730  0010DC  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2731  0010DE  500B               	movf	(___aomod@divisor+2)^0,w,c
  2732  0010E0  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2733  0010E2  500C               	movf	(___aomod@divisor+3)^0,w,c
  2734  0010E4  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2735  0010E6  500D               	movf	(___aomod@divisor+4)^0,w,c
  2736  0010E8  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2737  0010EA  500E               	movf	(___aomod@divisor+5)^0,w,c
  2738  0010EC  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2739  0010EE  500F               	movf	(___aomod@divisor+6)^0,w,c
  2740  0010F0  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2741  0010F2  5010               	movf	(___aomod@divisor+7)^0,w,c
  2742  0010F4  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2743  0010F6                     l2054:
  2744  0010F6  90D8               	bcf	status,0,c
  2745  0010F8  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2746  0010FA  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2747  0010FC  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2748  0010FE  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2749  001100  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2750  001102  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2751  001104  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2752  001106  3209               	rrcf	___aomod@divisor^0,f,c
  2753  001108  2E11               	decfsz	___aomod@counter^0,f,c
  2754  00110A  EF54  F008         	goto	l2050
  2755  00110E                     l2058:
  2756  00110E  5012               	movf	___aomod@sign^0,w,c
  2757  001110  B4D8               	btfsc	status,2,c
  2758  001112  EF8D  F008         	goto	u1171
  2759  001116  EF8F  F008         	goto	u1170
  2760  00111A                     u1171:
  2761  00111A  EF9F  F008         	goto	l2062
  2762  00111E                     u1170:
  2763  00111E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2764  001120  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2765  001122  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2766  001124  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2767  001126  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2768  001128  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2769  00112A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2770  00112C  6C01               	negf	___aomod@dividend^0,c
  2771  00112E  0E00               	movlw	0
  2772  001130  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2773  001132  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2774  001134  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2775  001136  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2776  001138  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2777  00113A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2778  00113C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2779  00113E                     l2062:
  2780  00113E  C001  F001         	movff	___aomod@dividend,?___aomod
  2781  001142  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2782  001146  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2783  00114A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2784  00114E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2785  001152  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2786  001156  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2787  00115A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2788  00115E  0012               	return		;funcret
  2789  001160                     __end_of___aomod:
  2790                           	callstack 0
  2791                           
  2792 ;; *************** function ___aodiv *****************
  2793 ;; Defined at:
  2794 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\aodiv.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  dividend        8    0[COMRAM] long long 
  2797 ;;  divisor         8    8[COMRAM] long long 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  quotient        8   18[COMRAM] long long 
  2800 ;;  sign            1   17[COMRAM] unsigned char 
  2801 ;;  counter         1   16[COMRAM] unsigned char 
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  8    0[COMRAM] long long 
  2804 ;; Registers used:
  2805 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2811 ;;      Params:        16       0       0       0       0       0       0       0       0
  2812 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2813 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2814 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2815 ;;Total ram usage:       26 bytes
  2816 ;; Hardware stack levels used: 1
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_dtoa
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text13
  2825  000E74                     __ptext13:
  2826                           	callstack 0
  2827  000E74                     ___aodiv:
  2828                           	callstack 25
  2829  000E74  0E00               	movlw	0
  2830  000E76  6E12               	movwf	___aodiv@sign^0,c
  2831  000E78  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2832  000E7A  EF43  F007         	goto	u1050
  2833  000E7E  EF41  F007         	goto	u1051
  2834  000E82                     u1051:
  2835  000E82  EF55  F007         	goto	l1994
  2836  000E86                     u1050:
  2837  000E86  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2838  000E88  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2839  000E8A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2840  000E8C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2841  000E8E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2842  000E90  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2843  000E92  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2844  000E94  6C09               	negf	___aodiv@divisor^0,c
  2845  000E96  0E00               	movlw	0
  2846  000E98  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2847  000E9A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2848  000E9C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2849  000E9E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2850  000EA0  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2851  000EA2  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2852  000EA4  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2853  000EA6  0E01               	movlw	1
  2854  000EA8  6E12               	movwf	___aodiv@sign^0,c
  2855  000EAA                     l1994:
  2856  000EAA  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2857  000EAC  EF5C  F007         	goto	u1060
  2858  000EB0  EF5A  F007         	goto	u1061
  2859  000EB4                     u1061:
  2860  000EB4  EF6E  F007         	goto	l2000
  2861  000EB8                     u1060:
  2862  000EB8  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2863  000EBA  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2864  000EBC  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2865  000EBE  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2866  000EC0  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2867  000EC2  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2868  000EC4  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2869  000EC6  6C01               	negf	___aodiv@dividend^0,c
  2870  000EC8  0E00               	movlw	0
  2871  000ECA  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2872  000ECC  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2873  000ECE  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2874  000ED0  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2875  000ED2  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2876  000ED4  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2877  000ED6  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2878  000ED8  0E01               	movlw	1
  2879  000EDA  1A12               	xorwf	___aodiv@sign^0,f,c
  2880  000EDC                     l2000:
  2881  000EDC  EE20  F013         	lfsr	2,___aodiv@quotient
  2882  000EE0  0E07               	movlw	7
  2883  000EE2                     u1071:
  2884  000EE2  6ADE               	clrf	postinc2,c
  2885  000EE4  06E8               	decf	wreg,f,c
  2886  000EE6  E2FD               	bc	u1071
  2887  000EE8  5009               	movf	___aodiv@divisor^0,w,c
  2888  000EEA  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2889  000EEC  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2890  000EEE  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2891  000EF0  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2892  000EF2  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2893  000EF4  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2894  000EF6  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2895  000EF8  B4D8               	btfsc	status,2,c
  2896  000EFA  EF81  F007         	goto	u1081
  2897  000EFE  EF83  F007         	goto	u1080
  2898  000F02                     u1081:
  2899  000F02  EFD5  F007         	goto	l2022
  2900  000F06                     u1080:
  2901  000F06  0E01               	movlw	1
  2902  000F08  6E11               	movwf	___aodiv@counter^0,c
  2903  000F0A  EF91  F007         	goto	l2008
  2904  000F0E                     l2006:
  2905  000F0E  90D8               	bcf	status,0,c
  2906  000F10  3609               	rlcf	___aodiv@divisor^0,f,c
  2907  000F12  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2908  000F14  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2909  000F16  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2910  000F18  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2911  000F1A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2912  000F1C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2913  000F1E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2914  000F20  2A11               	incf	___aodiv@counter^0,f,c
  2915  000F22                     l2008:
  2916  000F22  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2917  000F24  EF96  F007         	goto	u1091
  2918  000F28  EF98  F007         	goto	u1090
  2919  000F2C                     u1091:
  2920  000F2C  EF87  F007         	goto	l2006
  2921  000F30                     u1090:
  2922  000F30                     l2010:
  2923  000F30  90D8               	bcf	status,0,c
  2924  000F32  3613               	rlcf	___aodiv@quotient^0,f,c
  2925  000F34  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2926  000F36  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2927  000F38  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2928  000F3A  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2929  000F3C  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2930  000F3E  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2931  000F40  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2932  000F42  5009               	movf	___aodiv@divisor^0,w,c
  2933  000F44  5C01               	subwf	___aodiv@dividend^0,w,c
  2934  000F46  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2935  000F48  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2936  000F4A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2937  000F4C  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2938  000F4E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2939  000F50  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2940  000F52  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2941  000F54  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2942  000F56  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2943  000F58  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2944  000F5A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2945  000F5C  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2946  000F5E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2947  000F60  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2948  000F62  A0D8               	btfss	status,0,c
  2949  000F64  EFB6  F007         	goto	u1101
  2950  000F68  EFB8  F007         	goto	u1100
  2951  000F6C                     u1101:
  2952  000F6C  EFC9  F007         	goto	l2018
  2953  000F70                     u1100:
  2954  000F70  5009               	movf	___aodiv@divisor^0,w,c
  2955  000F72  5E01               	subwf	___aodiv@dividend^0,f,c
  2956  000F74  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2957  000F76  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2958  000F78  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2959  000F7A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2960  000F7C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2961  000F7E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2962  000F80  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2963  000F82  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2964  000F84  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2965  000F86  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2966  000F88  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2967  000F8A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2968  000F8C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2969  000F8E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2970  000F90  8013               	bsf	___aodiv@quotient^0,0,c
  2971  000F92                     l2018:
  2972  000F92  90D8               	bcf	status,0,c
  2973  000F94  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2974  000F96  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2975  000F98  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2976  000F9A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2977  000F9C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2978  000F9E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2979  000FA0  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2980  000FA2  3209               	rrcf	___aodiv@divisor^0,f,c
  2981  000FA4  2E11               	decfsz	___aodiv@counter^0,f,c
  2982  000FA6  EF98  F007         	goto	l2010
  2983  000FAA                     l2022:
  2984  000FAA  5012               	movf	___aodiv@sign^0,w,c
  2985  000FAC  B4D8               	btfsc	status,2,c
  2986  000FAE  EFDB  F007         	goto	u1111
  2987  000FB2  EFDD  F007         	goto	u1110
  2988  000FB6                     u1111:
  2989  000FB6  EFED  F007         	goto	l2026
  2990  000FBA                     u1110:
  2991  000FBA  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2992  000FBC  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2993  000FBE  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2994  000FC0  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2995  000FC2  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2996  000FC4  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2997  000FC6  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2998  000FC8  6C13               	negf	___aodiv@quotient^0,c
  2999  000FCA  0E00               	movlw	0
  3000  000FCC  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3001  000FCE  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3002  000FD0  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3003  000FD2  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3004  000FD4  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3005  000FD6  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3006  000FD8  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3007  000FDA                     l2026:
  3008  000FDA  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3009  000FDE  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3010  000FE2  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3011  000FE6  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3012  000FEA  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3013  000FEE  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3014  000FF2  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3015  000FF6  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3016  000FFA  0012               	return		;funcret
  3017  000FFC                     __end_of___aodiv:
  3018                           	callstack 0
  3019                           
  3020 ;; *************** function _atoi *****************
  3021 ;; Defined at:
  3022 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  s               2    7[COMRAM] PTR const unsigned char 
  3025 ;;		 -> STR_6(22), STR_5(23), 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;  n               2   15[COMRAM] int 
  3028 ;;  neg             2   13[COMRAM] int 
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  2    7[COMRAM] int 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3038 ;;      Params:         2       0       0       0       0       0       0       0       0
  3039 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3040 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3041 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3042 ;;Total ram usage:       10 bytes
  3043 ;; Hardware stack levels used: 1
  3044 ;; Hardware stack levels required when called: 1
  3045 ;; This function calls:
  3046 ;;		___wmul
  3047 ;;		_isdigit
  3048 ;;		_isspace
  3049 ;; This function is called by:
  3050 ;;		_vfpfcnvrt
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           	psect	text14
  3055  001160                     __ptext14:
  3056                           	callstack 0
  3057  001160                     _atoi:
  3058                           	callstack 25
  3059  001160  0E00               	movlw	0
  3060  001162  6E11               	movwf	(atoi@n+1)^0,c
  3061  001164  0E00               	movlw	0
  3062  001166  6E10               	movwf	atoi@n^0,c
  3063  001168  0E00               	movlw	0
  3064  00116A  6E0F               	movwf	(atoi@neg+1)^0,c
  3065  00116C  0E00               	movlw	0
  3066  00116E  6E0E               	movwf	atoi@neg^0,c
  3067  001170  EFBC  F008         	goto	l2176
  3068  001174                     l2172:
  3069  001174  4A08               	infsnz	atoi@s^0,f,c
  3070  001176  2A09               	incf	(atoi@s+1)^0,f,c
  3071  001178                     l2176:
  3072  001178  C008  FFF6         	movff	atoi@s,tblptrl
  3073  00117C  C009  FFF7         	movff	atoi@s+1,tblptrh
  3074  001180                     	if	0	;tblptru may be non-zero
  3075  001180                     	endif
  3076  001180                     	if	0	;tblptru may be non-zero
  3077  001180                     	endif
  3078  001180  0008               	tblrd		*
  3079  001182  50F5               	movf	tablat,w,c
  3080  001184  0A20               	xorlw	32
  3081  001186  B4D8               	btfsc	status,2,c
  3082  001188  EFC8  F008         	goto	u1421
  3083  00118C  EFCA  F008         	goto	u1420
  3084  001190                     u1421:
  3085  001190  EFBA  F008         	goto	l2172
  3086  001194                     u1420:
  3087  001194  0EF7               	movlw	247
  3088  001196  6E0A               	movwf	??_atoi^0,c
  3089  001198  0EFF               	movlw	255
  3090  00119A  6E0B               	movwf	(??_atoi+1)^0,c
  3091  00119C  C008  FFF6         	movff	atoi@s,tblptrl
  3092  0011A0  C009  FFF7         	movff	atoi@s+1,tblptrh
  3093  0011A4                     	if	0	;tblptru may be non-zero
  3094  0011A4                     	endif
  3095  0011A4                     	if	0	;tblptru may be non-zero
  3096  0011A4                     	endif
  3097  0011A4  0008               	tblrd		*
  3098  0011A6  50F5               	movf	tablat,w,c
  3099  0011A8  6E0C               	movwf	(??_atoi+2)^0,c
  3100  0011AA  6A0D               	clrf	(??_atoi+3)^0,c
  3101  0011AC  500A               	movf	??_atoi^0,w,c
  3102  0011AE  260C               	addwf	(??_atoi+2)^0,f,c
  3103  0011B0  500B               	movf	(??_atoi+1)^0,w,c
  3104  0011B2  220D               	addwfc	(??_atoi+3)^0,f,c
  3105  0011B4  500D               	movf	(??_atoi+3)^0,w,c
  3106  0011B6  E109               	bnz	u1430
  3107  0011B8  0E05               	movlw	5
  3108  0011BA  5C0C               	subwf	(??_atoi+2)^0,w,c
  3109  0011BC  A0D8               	btfss	status,0,c
  3110  0011BE  EFE3  F008         	goto	u1431
  3111  0011C2  EFE5  F008         	goto	u1430
  3112  0011C6                     u1431:
  3113  0011C6  EFBA  F008         	goto	l2172
  3114  0011CA                     u1430:
  3115  0011CA  EFEF  F008         	goto	l2184
  3116  0011CE                     l2180:
  3117  0011CE  0E00               	movlw	0
  3118  0011D0  6E0F               	movwf	(atoi@neg+1)^0,c
  3119  0011D2  0E01               	movlw	1
  3120  0011D4  6E0E               	movwf	atoi@neg^0,c
  3121  0011D6                     l2182:
  3122  0011D6  4A08               	infsnz	atoi@s^0,f,c
  3123  0011D8  2A09               	incf	(atoi@s+1)^0,f,c
  3124  0011DA  EF24  F009         	goto	l2192
  3125  0011DE                     l2184:
  3126  0011DE  C008  FFF6         	movff	atoi@s,tblptrl
  3127  0011E2  C009  FFF7         	movff	atoi@s+1,tblptrh
  3128  0011E6                     	if	0	;tblptru may be non-zero
  3129  0011E6                     	endif
  3130  0011E6                     	if	0	;tblptru may be non-zero
  3131  0011E6                     	endif
  3132  0011E6  0008               	tblrd		*
  3133  0011E8  50F5               	movf	tablat,w,c
  3134  0011EA  6E0A               	movwf	??_atoi^0,c
  3135  0011EC  6A0B               	clrf	(??_atoi+1)^0,c
  3136                           
  3137                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3138                           ; Switch size 1, requested type "simple"
  3139                           ; Number of cases is 1, Range of values is 0 to 0
  3140                           ; switch strategies available:
  3141                           ; Name         Instructions Cycles
  3142                           ; simple_byte            4     3 (average)
  3143                           ;	Chosen strategy is simple_byte
  3144  0011EE  500B               	movf	(??_atoi+1)^0,w,c
  3145  0011F0  0A00               	xorlw	0	; case 0
  3146  0011F2  B4D8               	btfsc	status,2,c
  3147  0011F4  EFFE  F008         	goto	l2826
  3148  0011F8  EF24  F009         	goto	l2192
  3149  0011FC                     l2826:
  3150                           
  3151                           ; Switch size 1, requested type "simple"
  3152                           ; Number of cases is 2, Range of values is 43 to 45
  3153                           ; switch strategies available:
  3154                           ; Name         Instructions Cycles
  3155                           ; simple_byte            7     4 (average)
  3156                           ;	Chosen strategy is simple_byte
  3157  0011FC  500A               	movf	??_atoi^0,w,c
  3158  0011FE  0A2B               	xorlw	43	; case 43
  3159  001200  B4D8               	btfsc	status,2,c
  3160  001202  EFEB  F008         	goto	l2182
  3161  001206  0A06               	xorlw	6	; case 45
  3162  001208  B4D8               	btfsc	status,2,c
  3163  00120A  EFE7  F008         	goto	l2180
  3164  00120E  EF24  F009         	goto	l2192
  3165  001212                     l2186:
  3166  001212  C010  F001         	movff	atoi@n,___wmul@multiplier
  3167  001216  C011  F002         	movff	atoi@n+1,___wmul@multiplier+1
  3168  00121A  0E00               	movlw	0
  3169  00121C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3170  00121E  0E0A               	movlw	10
  3171  001220  6E03               	movwf	___wmul@multiplicand^0,c
  3172  001222  EC24  F00F         	call	___wmul	;wreg free
  3173  001226  C008  FFF6         	movff	atoi@s,tblptrl
  3174  00122A  C009  FFF7         	movff	atoi@s+1,tblptrh
  3175  00122E                     	if	0	;tblptru may be non-zero
  3176  00122E                     	endif
  3177  00122E                     	if	0	;tblptru may be non-zero
  3178  00122E                     	endif
  3179  00122E  0008               	tblrd		*
  3180  001230  50F5               	movf	tablat,w,c
  3181  001232  5E01               	subwf	?___wmul^0,f,c
  3182  001234  0E00               	movlw	0
  3183  001236  5A02               	subwfb	(?___wmul+1)^0,f,c
  3184  001238  0E30               	movlw	48
  3185  00123A  2401               	addwf	?___wmul^0,w,c
  3186  00123C  6E10               	movwf	atoi@n^0,c
  3187  00123E  0E00               	movlw	0
  3188  001240  2002               	addwfc	(?___wmul+1)^0,w,c
  3189  001242  6E11               	movwf	(atoi@n+1)^0,c
  3190  001244  EFEB  F008         	goto	l2182
  3191  001248                     l2192:
  3192  001248  0ED0               	movlw	208
  3193  00124A  6E0A               	movwf	??_atoi^0,c
  3194  00124C  0EFF               	movlw	255
  3195  00124E  6E0B               	movwf	(??_atoi+1)^0,c
  3196  001250  C008  FFF6         	movff	atoi@s,tblptrl
  3197  001254  C009  FFF7         	movff	atoi@s+1,tblptrh
  3198  001258                     	if	0	;tblptru may be non-zero
  3199  001258                     	endif
  3200  001258                     	if	0	;tblptru may be non-zero
  3201  001258                     	endif
  3202  001258  0008               	tblrd		*
  3203  00125A  50F5               	movf	tablat,w,c
  3204  00125C  6E0C               	movwf	(??_atoi+2)^0,c
  3205  00125E  6A0D               	clrf	(??_atoi+3)^0,c
  3206  001260  500A               	movf	??_atoi^0,w,c
  3207  001262  260C               	addwf	(??_atoi+2)^0,f,c
  3208  001264  500B               	movf	(??_atoi+1)^0,w,c
  3209  001266  220D               	addwfc	(??_atoi+3)^0,f,c
  3210  001268  500D               	movf	(??_atoi+3)^0,w,c
  3211  00126A  E109               	bnz	u1440
  3212  00126C  0E0A               	movlw	10
  3213  00126E  5C0C               	subwf	(??_atoi+2)^0,w,c
  3214  001270  A0D8               	btfss	status,0,c
  3215  001272  EF3D  F009         	goto	u1441
  3216  001276  EF3F  F009         	goto	u1440
  3217  00127A                     u1441:
  3218  00127A  EF09  F009         	goto	l2186
  3219  00127E                     u1440:
  3220  00127E  500E               	movf	atoi@neg^0,w,c
  3221  001280  100F               	iorwf	(atoi@neg+1)^0,w,c
  3222  001282  A4D8               	btfss	status,2,c
  3223  001284  EF46  F009         	goto	u1451
  3224  001288  EF48  F009         	goto	u1450
  3225  00128C                     u1451:
  3226  00128C  EF56  F009         	goto	l1008
  3227  001290                     u1450:
  3228  001290  C010  F00A         	movff	atoi@n,??_atoi
  3229  001294  C011  F00B         	movff	atoi@n+1,??_atoi+1
  3230  001298  1E0A               	comf	??_atoi^0,f,c
  3231  00129A  1E0B               	comf	(??_atoi+1)^0,f,c
  3232  00129C  4A0A               	infsnz	??_atoi^0,f,c
  3233  00129E  2A0B               	incf	(??_atoi+1)^0,f,c
  3234  0012A0  C00A  F008         	movff	??_atoi,?_atoi
  3235  0012A4  C00B  F009         	movff	??_atoi+1,?_atoi+1
  3236  0012A8  EF5A  F009         	goto	l1011
  3237  0012AC                     l1008:
  3238  0012AC  C010  F008         	movff	atoi@n,?_atoi
  3239  0012B0  C011  F009         	movff	atoi@n+1,?_atoi+1
  3240  0012B4                     l1011:
  3241  0012B4  0012               	return		;funcret
  3242  0012B6                     __end_of_atoi:
  3243                           	callstack 0
  3244                           
  3245 ;; *************** function _isspace *****************
  3246 ;; Defined at:
  3247 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  c               2    0[COMRAM] int 
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;		None
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  2    0[COMRAM] int 
  3254 ;; Registers used:
  3255 ;;		wreg, status,2, status,0
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3261 ;;      Params:         2       0       0       0       0       0       0       0       0
  3262 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3263 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3264 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3265 ;;Total ram usage:        7 bytes
  3266 ;; Hardware stack levels used: 1
  3267 ;; This function calls:
  3268 ;;		Nothing
  3269 ;; This function is called by:
  3270 ;;		_atoi
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           	psect	text15
  3275  001C1C                     __ptext15:
  3276                           	callstack 0
  3277  001C1C                     _isspace:
  3278                           	callstack 25
  3279  001C1C  0E01               	movlw	1
  3280  001C1E  6E07               	movwf	_isspace$1027^0,c
  3281  001C20  0E20               	movlw	32
  3282  001C22  1801               	xorwf	isspace@c^0,w,c
  3283  001C24  1002               	iorwf	(isspace@c+1)^0,w,c
  3284  001C26  B4D8               	btfsc	status,2,c
  3285  001C28  EF18  F00E         	goto	u1251
  3286  001C2C  EF1A  F00E         	goto	u1250
  3287  001C30                     u1251:
  3288  001C30  EF33  F00E         	goto	l2104
  3289  001C34                     u1250:
  3290  001C34  0EF7               	movlw	247
  3291  001C36  6E03               	movwf	??_isspace^0,c
  3292  001C38  0EFF               	movlw	255
  3293  001C3A  6E04               	movwf	(??_isspace+1)^0,c
  3294  001C3C  C001  F005         	movff	isspace@c,??_isspace+2
  3295  001C40  C002  F006         	movff	isspace@c+1,??_isspace+3
  3296  001C44  5003               	movf	??_isspace^0,w,c
  3297  001C46  2605               	addwf	(??_isspace+2)^0,f,c
  3298  001C48  5004               	movf	(??_isspace+1)^0,w,c
  3299  001C4A  2206               	addwfc	(??_isspace+3)^0,f,c
  3300  001C4C  5006               	movf	(??_isspace+3)^0,w,c
  3301  001C4E  E109               	bnz	u1260
  3302  001C50  0E05               	movlw	5
  3303  001C52  5C05               	subwf	(??_isspace+2)^0,w,c
  3304  001C54  A0D8               	btfss	status,0,c
  3305  001C56  EF2F  F00E         	goto	u1261
  3306  001C5A  EF31  F00E         	goto	u1260
  3307  001C5E                     u1261:
  3308  001C5E  EF33  F00E         	goto	l2104
  3309  001C62                     u1260:
  3310  001C62  0E00               	movlw	0
  3311  001C64  6E07               	movwf	_isspace$1027^0,c
  3312  001C66                     l2104:
  3313  001C66  C007  F001         	movff	_isspace$1027,?_isspace
  3314  001C6A  6A02               	clrf	(?_isspace+1)^0,c
  3315  001C6C  0012               	return		;funcret
  3316  001C6E                     __end_of_isspace:
  3317                           	callstack 0
  3318                           
  3319 ;; *************** function _isdigit *****************
  3320 ;; Defined at:
  3321 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;  c               2    0[COMRAM] int 
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;		None
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  2    0[COMRAM] int 
  3328 ;; Registers used:
  3329 ;;		wreg, status,2, status,0
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3335 ;;      Params:         2       0       0       0       0       0       0       0       0
  3336 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3337 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3338 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3339 ;;Total ram usage:        6 bytes
  3340 ;; Hardware stack levels used: 1
  3341 ;; This function calls:
  3342 ;;		Nothing
  3343 ;; This function is called by:
  3344 ;;		_vfpfcnvrt
  3345 ;;		_atoi
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text16
  3350  001DA4                     __ptext16:
  3351                           	callstack 0
  3352  001DA4                     _isdigit:
  3353                           	callstack 26
  3354  001DA4  0ED0               	movlw	208
  3355  001DA6  6E03               	movwf	??_isdigit^0,c
  3356  001DA8  0EFF               	movlw	255
  3357  001DAA  6E04               	movwf	(??_isdigit+1)^0,c
  3358  001DAC  C001  F005         	movff	isdigit@c,??_isdigit+2
  3359  001DB0  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  3360  001DB4  5003               	movf	??_isdigit^0,w,c
  3361  001DB6  2605               	addwf	(??_isdigit+2)^0,f,c
  3362  001DB8  5004               	movf	(??_isdigit+1)^0,w,c
  3363  001DBA  2206               	addwfc	(??_isdigit+3)^0,f,c
  3364  001DBC  5006               	movf	(??_isdigit+3)^0,w,c
  3365  001DBE  E10A               	bnz	u1230
  3366  001DC0  0E0A               	movlw	10
  3367  001DC2  5C05               	subwf	(??_isdigit+2)^0,w,c
  3368  001DC4  A0D8               	btfss	status,0,c
  3369  001DC6  EFE7  F00E         	goto	u1231
  3370  001DCA  EFEA  F00E         	goto	u1230
  3371  001DCE                     u1231:
  3372  001DCE  0E01               	movlw	1
  3373  001DD0  EFEB  F00E         	goto	u1240
  3374  001DD4                     u1230:
  3375  001DD4  0E00               	movlw	0
  3376  001DD6                     u1240:
  3377  001DD6  6E01               	movwf	?_isdigit^0,c
  3378  001DD8  6A02               	clrf	(?_isdigit+1)^0,c
  3379  001DDA  0012               	return		;funcret
  3380  001DDC                     __end_of_isdigit:
  3381                           	callstack 0
  3382                           
  3383 ;; *************** function ___wmul *****************
  3384 ;; Defined at:
  3385 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  multiplier      2    0[COMRAM] unsigned int 
  3388 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;  product         2    4[COMRAM] unsigned int 
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  2    0[COMRAM] unsigned int 
  3393 ;; Registers used:
  3394 ;;		wreg, status,2, status,0, prodl, prodh
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3400 ;;      Params:         4       0       0       0       0       0       0       0       0
  3401 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3403 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3404 ;;Total ram usage:        6 bytes
  3405 ;; Hardware stack levels used: 1
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_atoi
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           	psect	text17
  3414  001E48                     __ptext17:
  3415                           	callstack 0
  3416  001E48                     ___wmul:
  3417                           	callstack 25
  3418  001E48  5001               	movf	___wmul@multiplier^0,w,c
  3419  001E4A  0203               	mulwf	___wmul@multiplicand^0,c
  3420  001E4C  CFF3 F005          	movff	prodl,___wmul@product
  3421  001E50  CFF4 F006          	movff	prodh,___wmul@product+1
  3422  001E54  5001               	movf	___wmul@multiplier^0,w,c
  3423  001E56  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3424  001E58  50F3               	movf	243,w,c
  3425  001E5A  2606               	addwf	(___wmul@product+1)^0,f,c
  3426  001E5C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3427  001E5E  0203               	mulwf	___wmul@multiplicand^0,c
  3428  001E60  50F3               	movf	243,w,c
  3429  001E62  2606               	addwf	(___wmul@product+1)^0,f,c
  3430  001E64  C005  F001         	movff	___wmul@product,?___wmul
  3431  001E68  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3432  001E6C  0012               	return		;funcret
  3433  001E6E                     __end_of___wmul:
  3434                           	callstack 0
  3435                           
  3436 ;; *************** function _getDataDs1307 *****************
  3437 ;; Defined at:
  3438 ;;		line 96 in file "main.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;  dato            1    wreg     unsigned char 
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;  dato            1    2[COMRAM] unsigned char 
  3443 ;;  data            1    3[COMRAM] unsigned char 
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      unsigned char 
  3446 ;; Registers used:
  3447 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3453 ;;      Params:         0       0       0       0       0       0       0       0       0
  3454 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3455 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3456 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3457 ;;Total ram usage:        2 bytes
  3458 ;; Hardware stack levels used: 1
  3459 ;; Hardware stack levels required when called: 2
  3460 ;; This function calls:
  3461 ;;		_I2C_N_ACK
  3462 ;;		_I2C_Read_Slave
  3463 ;;		_I2C_Restart
  3464 ;;		_I2C_Start
  3465 ;;		_I2C_Stop
  3466 ;;		_I2C_Write_Data
  3467 ;;		_bcd_bin_convert
  3468 ;; This function is called by:
  3469 ;;		_main
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text18
  3474  001E12                     __ptext18:
  3475                           	callstack 0
  3476  001E12                     _getDataDs1307:
  3477                           	callstack 28
  3478                           
  3479                           ;incstack = 0
  3480                           ;getDataDs1307@dato stored from wreg
  3481  001E12  6E03               	movwf	getDataDs1307@dato^0,c
  3482  001E14                     
  3483                           ;main.c: 97:     uint8_t data;;main.c: 98:     I2C_Start();
  3484  001E14  EC77  F00F         	call	_I2C_Start	;wreg free
  3485                           
  3486                           ;main.c: 99:     I2C_Write_Data(0xD0);
  3487  001E18  0ED0               	movlw	208
  3488  001E1A  EC79  F00E         	call	_I2C_Write_Data
  3489                           
  3490                           ;main.c: 100:     I2C_Write_Data(dato);
  3491  001E1E  5003               	movf	getDataDs1307@dato^0,w,c
  3492  001E20  EC79  F00E         	call	_I2C_Write_Data
  3493  001E24                     
  3494                           ;main.c: 101:     I2C_Restart();
  3495  001E24  EC9F  F00F         	call	_I2C_Restart	;wreg free
  3496  001E28                     
  3497                           ;main.c: 102:     I2C_Write_Data(0xD1);
  3498  001E28  0ED1               	movlw	209
  3499  001E2A  EC79  F00E         	call	_I2C_Write_Data
  3500  001E2E                     
  3501                           ;main.c: 103:     data = I2C_Read_Slave();
  3502  001E2E  EC8D  F00F         	call	_I2C_Read_Slave	;wreg free
  3503  001E32  6E04               	movwf	getDataDs1307@data^0,c
  3504  001E34                     
  3505                           ;main.c: 104:     I2C_N_ACK();
  3506  001E34  EC83  F00F         	call	_I2C_N_ACK	;wreg free
  3507  001E38                     
  3508                           ;main.c: 105:     I2C_Stop();
  3509  001E38  EC4A  F00F         	call	_I2C_Stop	;wreg free
  3510  001E3C                     
  3511                           ;main.c: 107:     data = bcd_bin_convert(data);
  3512  001E3C  5004               	movf	getDataDs1307@data^0,w,c
  3513  001E3E  EC5B  F00F         	call	_bcd_bin_convert
  3514  001E42  6E04               	movwf	getDataDs1307@data^0,c
  3515  001E44                     
  3516                           ;main.c: 108:     return data;
  3517  001E44  5004               	movf	getDataDs1307@data^0,w,c
  3518  001E46  0012               	return		;funcret
  3519  001E48                     __end_of_getDataDs1307:
  3520                           	callstack 0
  3521                           
  3522 ;; *************** function _bcd_bin_convert *****************
  3523 ;; Defined at:
  3524 ;;		line 91 in file "main.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;  dato            1    wreg     unsigned char 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  dato            1    1[COMRAM] unsigned char 
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1    wreg      unsigned char 
  3531 ;; Registers used:
  3532 ;;		wreg, status,2, status,0, prodl, prodh
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3538 ;;      Params:         0       0       0       0       0       0       0       0       0
  3539 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3540 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3541 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3542 ;;Total ram usage:        2 bytes
  3543 ;; Hardware stack levels used: 1
  3544 ;; This function calls:
  3545 ;;		Nothing
  3546 ;; This function is called by:
  3547 ;;		_getDataDs1307
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           	psect	text19
  3552  001EB6                     __ptext19:
  3553                           	callstack 0
  3554  001EB6                     _bcd_bin_convert:
  3555                           	callstack 29
  3556                           
  3557                           ;incstack = 0
  3558                           ;bcd_bin_convert@dato stored from wreg
  3559  001EB6  6E02               	movwf	bcd_bin_convert@dato^0,c
  3560  001EB8                     
  3561                           ;main.c: 92:     dato = ((dato & 0xF0)>>4)*10 + (dato&0x0F);
  3562  001EB8  C002  F001         	movff	bcd_bin_convert@dato,??_bcd_bin_convert
  3563  001EBC  0E0F               	movlw	15
  3564  001EBE  1601               	andwf	??_bcd_bin_convert^0,f,c
  3565  001EC0  3802               	swapf	bcd_bin_convert@dato^0,w,c
  3566  001EC2  0B0F               	andlw	15
  3567  001EC4  0B0F               	andlw	15
  3568  001EC6  0D0A               	mullw	10
  3569  001EC8  50F3               	movf	243,w,c
  3570  001ECA  2401               	addwf	??_bcd_bin_convert^0,w,c
  3571  001ECC  6E02               	movwf	bcd_bin_convert@dato^0,c
  3572  001ECE                     
  3573                           ;main.c: 93:     return dato;
  3574  001ECE  5002               	movf	bcd_bin_convert@dato^0,w,c
  3575  001ED0  0012               	return		;funcret
  3576  001ED2                     __end_of_bcd_bin_convert:
  3577                           	callstack 0
  3578                           
  3579 ;; *************** function _I2C_Read_Slave *****************
  3580 ;; Defined at:
  3581 ;;		line 93 in file "./I2C_Lib.h"
  3582 ;; Parameters:    Size  Location     Type
  3583 ;;		None
  3584 ;; Auto vars:     Size  Location     Type
  3585 ;;  dato            1    1[COMRAM] unsigned char 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  1    wreg      unsigned char 
  3588 ;; Registers used:
  3589 ;;		wreg, status,2, status,0, cstack
  3590 ;; Tracked objects:
  3591 ;;		On entry : 0/0
  3592 ;;		On exit  : 0/0
  3593 ;;		Unchanged: 0/0
  3594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3595 ;;      Params:         0       0       0       0       0       0       0       0       0
  3596 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3597 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3598 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3599 ;;Total ram usage:        1 bytes
  3600 ;; Hardware stack levels used: 1
  3601 ;; Hardware stack levels required when called: 1
  3602 ;; This function calls:
  3603 ;;		_I2C_Idle
  3604 ;;		_I2C_Reception
  3605 ;; This function is called by:
  3606 ;;		_getDataDs1307
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           	psect	text20
  3611  001F1A                     __ptext20:
  3612                           	callstack 0
  3613  001F1A                     _I2C_Read_Slave:
  3614                           	callstack 28
  3615  001F1A                     
  3616                           ;./I2C_Lib.h: 95:     unsigned char dato;;./I2C_Lib.h: 97:     I2C_Reception();
  3617  001F1A  EC96  F00F         	call	_I2C_Reception	;wreg free
  3618  001F1E                     
  3619                           ;./I2C_Lib.h: 98:     I2C_Idle();
  3620  001F1E  EC37  F00F         	call	_I2C_Idle	;wreg free
  3621  001F22                     
  3622                           ;./I2C_Lib.h: 99:     dato = SSPBUF;
  3623  001F22  CFC9 F002          	movff	4041,I2C_Read_Slave@dato	;volatile
  3624  001F26                     
  3625                           ;./I2C_Lib.h: 100:     RCEN=0;
  3626  001F26  96C5               	bcf	4037,3,c	;volatile
  3627  001F28                     
  3628                           ;./I2C_Lib.h: 101:     return dato;
  3629  001F28  5002               	movf	I2C_Read_Slave@dato^0,w,c
  3630  001F2A  0012               	return		;funcret
  3631  001F2C                     __end_of_I2C_Read_Slave:
  3632                           	callstack 0
  3633                           
  3634 ;; *************** function _I2C_Reception *****************
  3635 ;; Defined at:
  3636 ;;		line 87 in file "./I2C_Lib.h"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;		None
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;		None
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  1    wreg      void 
  3643 ;; Registers used:
  3644 ;;		None
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3650 ;;      Params:         0       0       0       0       0       0       0       0       0
  3651 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3652 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3653 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3654 ;;Total ram usage:        0 bytes
  3655 ;; Hardware stack levels used: 1
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_I2C_Read_Slave
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text21
  3664  001F2C                     __ptext21:
  3665                           	callstack 0
  3666  001F2C                     _I2C_Reception:
  3667                           	callstack 28
  3668  001F2C                     
  3669                           ;./I2C_Lib.h: 88:     SSPCON2bits.RCEN=1;
  3670  001F2C  86C5               	bsf	197,3,c	;volatile
  3671  001F2E                     l94:
  3672  001F2E  A0C7               	btfss	199,0,c	;volatile
  3673  001F30  EF9C  F00F         	goto	u1611
  3674  001F34  EF9E  F00F         	goto	u1610
  3675  001F38                     u1611:
  3676  001F38  EF97  F00F         	goto	l94
  3677  001F3C                     u1610:
  3678  001F3C  0012               	return		;funcret
  3679  001F3E                     __end_of_I2C_Reception:
  3680                           	callstack 0
  3681                           
  3682 ;; *************** function _I2C_N_ACK *****************
  3683 ;; Defined at:
  3684 ;;		line 104 in file "./I2C_Lib.h"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;		None
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;		None
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  1    wreg      void 
  3691 ;; Registers used:
  3692 ;;		None
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3698 ;;      Params:         0       0       0       0       0       0       0       0       0
  3699 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3700 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3701 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3702 ;;Total ram usage:        0 bytes
  3703 ;; Hardware stack levels used: 1
  3704 ;; This function calls:
  3705 ;;		Nothing
  3706 ;; This function is called by:
  3707 ;;		_getDataDs1307
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text22
  3712  001F06                     __ptext22:
  3713                           	callstack 0
  3714  001F06                     _I2C_N_ACK:
  3715                           	callstack 29
  3716  001F06                     
  3717                           ;./I2C_Lib.h: 106:     SSPCON2bits.ACKDT=1;
  3718  001F06  8AC5               	bsf	197,5,c	;volatile
  3719                           
  3720                           ;./I2C_Lib.h: 107:     SSPCON2bits.ACKEN=1;
  3721  001F08  88C5               	bsf	197,4,c	;volatile
  3722  001F0A                     l103:
  3723  001F0A  B8C5               	btfsc	197,4,c	;volatile
  3724  001F0C  EF8A  F00F         	goto	u1811
  3725  001F10  EF8C  F00F         	goto	u1810
  3726  001F14                     u1811:
  3727  001F14  EF85  F00F         	goto	l103
  3728  001F18                     u1810:
  3729  001F18  0012               	return		;funcret
  3730  001F1A                     __end_of_I2C_N_ACK:
  3731                           	callstack 0
  3732                           
  3733 ;; *************** function _Lcd_Init *****************
  3734 ;; Defined at:
  3735 ;;		line 93 in file "./lib_lcd_20x4.h"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;		None
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      void 
  3742 ;; Registers used:
  3743 ;;		wreg, status,2, status,0, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3749 ;;      Params:         0       0       0       0       0       0       0       0       0
  3750 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3751 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3752 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3753 ;;Total ram usage:        1 bytes
  3754 ;; Hardware stack levels used: 1
  3755 ;; Hardware stack levels required when called: 2
  3756 ;; This function calls:
  3757 ;;		_Lcd_Cmd
  3758 ;;		_enviar_dato
  3759 ;; This function is called by:
  3760 ;;		_main
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           	psect	text23
  3765  001724                     __ptext23:
  3766                           	callstack 0
  3767  001724                     _Lcd_Init:
  3768                           	callstack 28
  3769  001724                     
  3770                           ;./lib_lcd_20x4.h: 94:     TRISDbits.RD1=0;
  3771  001724  9295               	bcf	149,1,c	;volatile
  3772                           
  3773                           ;./lib_lcd_20x4.h: 95:     TRISDbits.RD0=0;
  3774  001726  9095               	bcf	149,0,c	;volatile
  3775                           
  3776                           ;./lib_lcd_20x4.h: 96:     TRISDbits.RD4=0;
  3777  001728  9895               	bcf	149,4,c	;volatile
  3778                           
  3779                           ;./lib_lcd_20x4.h: 97:     TRISDbits.RD5=0;
  3780  00172A  9A95               	bcf	149,5,c	;volatile
  3781                           
  3782                           ;./lib_lcd_20x4.h: 98:     TRISDbits.RD6=0;
  3783  00172C  9C95               	bcf	149,6,c	;volatile
  3784                           
  3785                           ;./lib_lcd_20x4.h: 99:     TRISDbits.RD7=0;
  3786  00172E  9E95               	bcf	149,7,c	;volatile
  3787                           
  3788                           ;./lib_lcd_20x4.h: 101:     LATDbits.LATD0=0;
  3789  001730  908C               	bcf	140,0,c	;volatile
  3790  001732                     
  3791                           ;./lib_lcd_20x4.h: 102:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
  3792  001732  0EEA               	movlw	234
  3793  001734  6E05               	movwf	??_Lcd_Init^0,c
  3794  001736  0EC3               	movlw	195
  3795  001738                     u1967:
  3796  001738  2EE8               	decfsz	wreg,f,c
  3797  00173A  D7FE               	bra	u1967
  3798  00173C  2E05               	decfsz	??_Lcd_Init^0,f,c
  3799  00173E  D7FC               	bra	u1967
  3800  001740  F000               	nop	
  3801  001742                     
  3802                           ;./lib_lcd_20x4.h: 104:     enviar_dato(0x30);
  3803  001742  0E30               	movlw	48
  3804  001744  EC5B  F009         	call	_enviar_dato
  3805  001748                     
  3806                           ;./lib_lcd_20x4.h: 105:     _delay((unsigned long)((5)*(48000000UL/4000.0)));
  3807  001748  0E4E               	movlw	78
  3808  00174A  6E05               	movwf	??_Lcd_Init^0,c
  3809  00174C  0EEB               	movlw	235
  3810  00174E                     u1977:
  3811  00174E  2EE8               	decfsz	wreg,f,c
  3812  001750  D7FE               	bra	u1977
  3813  001752  2E05               	decfsz	??_Lcd_Init^0,f,c
  3814  001754  D7FC               	bra	u1977
  3815  001756  F000               	nop	
  3816                           
  3817                           ;./lib_lcd_20x4.h: 106:     enviar_dato(0x30);
  3818  001758  0E30               	movlw	48
  3819  00175A  EC5B  F009         	call	_enviar_dato
  3820  00175E                     
  3821                           ;./lib_lcd_20x4.h: 107:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  3822  00175E  0EF0               	movlw	240
  3823  001760                     u1987:
  3824  001760  D000               	nop2	
  3825  001762  2EE8               	decfsz	wreg,f,c
  3826  001764  D7FD               	bra	u1987
  3827  001766                     
  3828                           ;./lib_lcd_20x4.h: 108:     enviar_dato(0x32);
  3829  001766  0E32               	movlw	50
  3830  001768  EC5B  F009         	call	_enviar_dato
  3831                           
  3832                           ;./lib_lcd_20x4.h: 109:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  3833  00176C  0EF0               	movlw	240
  3834  00176E                     u1997:
  3835  00176E  D000               	nop2	
  3836  001770  2EE8               	decfsz	wreg,f,c
  3837  001772  D7FD               	bra	u1997
  3838                           
  3839                           ;./lib_lcd_20x4.h: 112:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  3840  001774  0EF0               	movlw	240
  3841  001776                     u2007:
  3842  001776  D000               	nop2	
  3843  001778  2EE8               	decfsz	wreg,f,c
  3844  00177A  D7FD               	bra	u2007
  3845  00177C                     
  3846                           ;./lib_lcd_20x4.h: 113:     enviar_dato(0x2B);
  3847  00177C  0E2B               	movlw	43
  3848  00177E  EC5B  F009         	call	_enviar_dato
  3849  001782                     
  3850                           ;./lib_lcd_20x4.h: 114:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  3851  001782  0EF0               	movlw	240
  3852  001784                     u2017:
  3853  001784  D000               	nop2	
  3854  001786  2EE8               	decfsz	wreg,f,c
  3855  001788  D7FD               	bra	u2017
  3856                           
  3857                           ;./lib_lcd_20x4.h: 115:     enviar_dato(0x08);
  3858  00178A  0E08               	movlw	8
  3859  00178C  EC5B  F009         	call	_enviar_dato
  3860  001790                     
  3861                           ;./lib_lcd_20x4.h: 116:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  3862  001790  0EF0               	movlw	240
  3863  001792                     u2027:
  3864  001792  D000               	nop2	
  3865  001794  2EE8               	decfsz	wreg,f,c
  3866  001796  D7FD               	bra	u2027
  3867  001798                     
  3868                           ;./lib_lcd_20x4.h: 117:     enviar_dato(0x0F);
  3869  001798  0E0F               	movlw	15
  3870  00179A  EC5B  F009         	call	_enviar_dato
  3871                           
  3872                           ;./lib_lcd_20x4.h: 118:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  3873  00179E  0EF0               	movlw	240
  3874  0017A0                     u2037:
  3875  0017A0  D000               	nop2	
  3876  0017A2  2EE8               	decfsz	wreg,f,c
  3877  0017A4  D7FD               	bra	u2037
  3878  0017A6                     
  3879                           ;./lib_lcd_20x4.h: 119:     enviar_dato(0x01);
  3880  0017A6  0E01               	movlw	1
  3881  0017A8  EC5B  F009         	call	_enviar_dato
  3882  0017AC                     
  3883                           ;./lib_lcd_20x4.h: 120:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  3884  0017AC  0EF0               	movlw	240
  3885  0017AE                     u2047:
  3886  0017AE  D000               	nop2	
  3887  0017B0  2EE8               	decfsz	wreg,f,c
  3888  0017B2  D7FD               	bra	u2047
  3889                           
  3890                           ;./lib_lcd_20x4.h: 121:     enviar_dato(0x06);
  3891  0017B4  0E06               	movlw	6
  3892  0017B6  EC5B  F009         	call	_enviar_dato
  3893  0017BA                     
  3894                           ;./lib_lcd_20x4.h: 122:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  3895  0017BA  0EF0               	movlw	240
  3896  0017BC                     u2057:
  3897  0017BC  D000               	nop2	
  3898  0017BE  2EE8               	decfsz	wreg,f,c
  3899  0017C0  D7FD               	bra	u2057
  3900  0017C2                     
  3901                           ;./lib_lcd_20x4.h: 124:     enviar_dato(0x0F);
  3902  0017C2  0E0F               	movlw	15
  3903  0017C4  EC5B  F009         	call	_enviar_dato
  3904                           
  3905                           ;./lib_lcd_20x4.h: 125:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  3906  0017C8  0EF0               	movlw	240
  3907  0017CA                     u2067:
  3908  0017CA  D000               	nop2	
  3909  0017CC  2EE8               	decfsz	wreg,f,c
  3910  0017CE  D7FD               	bra	u2067
  3911  0017D0                     
  3912                           ;./lib_lcd_20x4.h: 127:     Lcd_Cmd(12);
  3913  0017D0  0E0C               	movlw	12
  3914  0017D2  ECA8  F00F         	call	_Lcd_Cmd
  3915  0017D6                     
  3916                           ;./lib_lcd_20x4.h: 128:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  3917  0017D6  0EF0               	movlw	240
  3918  0017D8                     u2077:
  3919  0017D8  D000               	nop2	
  3920  0017DA  2EE8               	decfsz	wreg,f,c
  3921  0017DC  D7FD               	bra	u2077
  3922  0017DE  0012               	return		;funcret
  3923  0017E0                     __end_of_Lcd_Init:
  3924                           	callstack 0
  3925                           
  3926 ;; *************** function _I2C_Init_Master *****************
  3927 ;; Defined at:
  3928 ;;		line 34 in file "./I2C_Lib.h"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  speed_master    4   13[COMRAM] unsigned long 
  3931 ;;  interrupt_      1   17[COMRAM] unsigned char 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;		None
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  1    wreg      void 
  3936 ;; Registers used:
  3937 ;;		wreg, status,2, status,0, cstack
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3943 ;;      Params:         5       0       0       0       0       0       0       0       0
  3944 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3945 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3946 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3947 ;;Total ram usage:        9 bytes
  3948 ;; Hardware stack levels used: 1
  3949 ;; Hardware stack levels required when called: 1
  3950 ;; This function calls:
  3951 ;;		___lldiv
  3952 ;; This function is called by:
  3953 ;;		_main
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text24
  3958  001A2E                     __ptext24:
  3959                           	callstack 0
  3960  001A2E                     _I2C_Init_Master:
  3961                           	callstack 29
  3962  001A2E                     
  3963                           ;./I2C_Lib.h: 35:     ADCON1|=(7<<0);
  3964  001A2E  0E07               	movlw	7
  3965  001A30  12C1               	iorwf	193,f,c	;volatile
  3966                           
  3967                           ;./I2C_Lib.h: 36:     TRISB |= 0x03;
  3968  001A32  0E03               	movlw	3
  3969  001A34  1293               	iorwf	147,f,c	;volatile
  3970  001A36                     
  3971                           ;./I2C_Lib.h: 37:     SSPCON1 = 0x28;
  3972  001A36  0E28               	movlw	40
  3973  001A38  6EC6               	movwf	198,c	;volatile
  3974  001A3A                     
  3975                           ;./I2C_Lib.h: 38:     SSPADD = (unsigned char)((48000000UL/(4*speed_master))-1);
  3976  001A3A  0E00               	movlw	0
  3977  001A3C  6E01               	movwf	___lldiv@dividend^0,c
  3978  001A3E  0E6C               	movlw	108
  3979  001A40  6E02               	movwf	(___lldiv@dividend+1)^0,c
  3980  001A42  0EDC               	movlw	220
  3981  001A44  6E03               	movwf	(___lldiv@dividend+2)^0,c
  3982  001A46  0E02               	movlw	2
  3983  001A48  6E04               	movwf	(___lldiv@dividend+3)^0,c
  3984  001A4A  C00E  F013         	movff	I2C_Init_Master@speed_master,??_I2C_Init_Master
  3985  001A4E  C00F  F014         	movff	I2C_Init_Master@speed_master+1,??_I2C_Init_Master+1
  3986  001A52  C010  F015         	movff	I2C_Init_Master@speed_master+2,??_I2C_Init_Master+2
  3987  001A56  C011  F016         	movff	I2C_Init_Master@speed_master+3,??_I2C_Init_Master+3
  3988  001A5A  0E02               	movlw	2
  3989  001A5C                     u1885:
  3990  001A5C  90D8               	bcf	status,0,c
  3991  001A5E  3613               	rlcf	??_I2C_Init_Master^0,f,c
  3992  001A60  3614               	rlcf	(??_I2C_Init_Master+1)^0,f,c
  3993  001A62  3615               	rlcf	(??_I2C_Init_Master+2)^0,f,c
  3994  001A64  3616               	rlcf	(??_I2C_Init_Master+3)^0,f,c
  3995  001A66  2EE8               	decfsz	wreg,f,c
  3996  001A68  EF2E  F00D         	goto	u1885
  3997  001A6C  C013  F005         	movff	??_I2C_Init_Master,___lldiv@divisor
  3998  001A70  C014  F006         	movff	??_I2C_Init_Master+1,___lldiv@divisor+1
  3999  001A74  C015  F007         	movff	??_I2C_Init_Master+2,___lldiv@divisor+2
  4000  001A78  C016  F008         	movff	??_I2C_Init_Master+3,___lldiv@divisor+3
  4001  001A7C  EC48  F00C         	call	___lldiv	;wreg free
  4002  001A80  0401               	decf	?___lldiv^0,w,c
  4003  001A82  6EC8               	movwf	200,c	;volatile
  4004  001A84                     
  4005                           ;./I2C_Lib.h: 39:     SSPSTAT = 0x80;
  4006  001A84  0E80               	movlw	128
  4007  001A86  6EC7               	movwf	199,c	;volatile
  4008  001A88                     
  4009                           ;./I2C_Lib.h: 42:     if(interrupt_){
  4010  001A88  5012               	movf	I2C_Init_Master@interrupt_^0,w,c
  4011  001A8A  B4D8               	btfsc	status,2,c
  4012  001A8C  EF4A  F00D         	goto	u1891
  4013  001A90  EF4C  F00D         	goto	u1890
  4014  001A94                     u1891:
  4015  001A94  EF50  F00D         	goto	l59
  4016  001A98                     u1890:
  4017  001A98                     
  4018                           ;./I2C_Lib.h: 43:         GIE =1;
  4019  001A98  8EF2               	bsf	4082,7,c	;volatile
  4020                           
  4021                           ;./I2C_Lib.h: 44:         PEIE=1;
  4022  001A9A  8CF2               	bsf	4082,6,c	;volatile
  4023                           
  4024                           ;./I2C_Lib.h: 45:         SSPIE=1;
  4025  001A9C  869D               	bsf	3997,3,c	;volatile
  4026                           
  4027                           ;./I2C_Lib.h: 46:         SSPIF = 0;
  4028  001A9E  969E               	bcf	3998,3,c	;volatile
  4029  001AA0                     l59:
  4030  001AA0  0012               	return		;funcret
  4031  001AA2                     __end_of_I2C_Init_Master:
  4032                           	callstack 0
  4033                           
  4034 ;; *************** function ___lldiv *****************
  4035 ;; Defined at:
  4036 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  dividend        4    0[COMRAM] unsigned long 
  4039 ;;  divisor         4    4[COMRAM] unsigned long 
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;  quotient        4    8[COMRAM] unsigned long 
  4042 ;;  counter         1   12[COMRAM] unsigned char 
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  4    0[COMRAM] unsigned long 
  4045 ;; Registers used:
  4046 ;;		wreg, status,2, status,0
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4052 ;;      Params:         8       0       0       0       0       0       0       0       0
  4053 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4055 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4056 ;;Total ram usage:       13 bytes
  4057 ;; Hardware stack levels used: 1
  4058 ;; This function calls:
  4059 ;;		Nothing
  4060 ;; This function is called by:
  4061 ;;		_I2C_Init_Master
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           	psect	text25
  4066  001890                     __ptext25:
  4067                           	callstack 0
  4068  001890                     ___lldiv:
  4069                           	callstack 29
  4070  001890  0E00               	movlw	0
  4071  001892  6E09               	movwf	___lldiv@quotient^0,c
  4072  001894  0E00               	movlw	0
  4073  001896  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  4074  001898  0E00               	movlw	0
  4075  00189A  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  4076  00189C  0E00               	movlw	0
  4077  00189E  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  4078  0018A0  5005               	movf	___lldiv@divisor^0,w,c
  4079  0018A2  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  4080  0018A4  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  4081  0018A6  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  4082  0018A8  B4D8               	btfsc	status,2,c
  4083  0018AA  EF59  F00C         	goto	u1851
  4084  0018AE  EF5B  F00C         	goto	u1850
  4085  0018B2                     u1851:
  4086  0018B2  EF91  F00C         	goto	l232
  4087  0018B6                     u1850:
  4088  0018B6  0E01               	movlw	1
  4089  0018B8  6E0D               	movwf	___lldiv@counter^0,c
  4090  0018BA  EF65  F00C         	goto	l2544
  4091  0018BE                     l2542:
  4092  0018BE  90D8               	bcf	status,0,c
  4093  0018C0  3605               	rlcf	___lldiv@divisor^0,f,c
  4094  0018C2  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  4095  0018C4  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  4096  0018C6  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  4097  0018C8  2A0D               	incf	___lldiv@counter^0,f,c
  4098  0018CA                     l2544:
  4099  0018CA  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  4100  0018CC  EF6A  F00C         	goto	u1861
  4101  0018D0  EF6C  F00C         	goto	u1860
  4102  0018D4                     u1861:
  4103  0018D4  EF5F  F00C         	goto	l2542
  4104  0018D8                     u1860:
  4105  0018D8                     l2546:
  4106  0018D8  90D8               	bcf	status,0,c
  4107  0018DA  3609               	rlcf	___lldiv@quotient^0,f,c
  4108  0018DC  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  4109  0018DE  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  4110  0018E0  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  4111  0018E2  5005               	movf	___lldiv@divisor^0,w,c
  4112  0018E4  5C01               	subwf	___lldiv@dividend^0,w,c
  4113  0018E6  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4114  0018E8  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  4115  0018EA  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4116  0018EC  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  4117  0018EE  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4118  0018F0  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  4119  0018F2  A0D8               	btfss	status,0,c
  4120  0018F4  EF7E  F00C         	goto	u1871
  4121  0018F8  EF80  F00C         	goto	u1870
  4122  0018FC                     u1871:
  4123  0018FC  EF89  F00C         	goto	l2554
  4124  001900                     u1870:
  4125  001900  5005               	movf	___lldiv@divisor^0,w,c
  4126  001902  5E01               	subwf	___lldiv@dividend^0,f,c
  4127  001904  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4128  001906  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  4129  001908  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4130  00190A  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  4131  00190C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4132  00190E  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  4133  001910  8009               	bsf	___lldiv@quotient^0,0,c
  4134  001912                     l2554:
  4135  001912  90D8               	bcf	status,0,c
  4136  001914  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  4137  001916  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  4138  001918  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  4139  00191A  3205               	rrcf	___lldiv@divisor^0,f,c
  4140  00191C  2E0D               	decfsz	___lldiv@counter^0,f,c
  4141  00191E  EF6C  F00C         	goto	l2546
  4142  001922                     l232:
  4143  001922  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4144  001926  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4145  00192A  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4146  00192E  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4147  001932  0012               	return		;funcret
  4148  001934                     __end_of___lldiv:
  4149                           	callstack 0
  4150                           
  4151 ;; *************** function _ConfiRegRTC *****************
  4152 ;; Defined at:
  4153 ;;		line 64 in file "main.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;  dir             1    wreg     unsigned char 
  4156 ;;  dato            1   12[COMRAM] unsigned char 
  4157 ;;  reg             1   13[COMRAM] unsigned char 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;  dir             1   14[COMRAM] unsigned char 
  4160 ;;  data            1   15[COMRAM] unsigned char 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  1    wreg      void 
  4163 ;; Registers used:
  4164 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4170 ;;      Params:         2       0       0       0       0       0       0       0       0
  4171 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4172 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4173 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4174 ;;Total ram usage:        4 bytes
  4175 ;; Hardware stack levels used: 1
  4176 ;; Hardware stack levels required when called: 3
  4177 ;; This function calls:
  4178 ;;		_I2C_Start
  4179 ;;		_I2C_Stop
  4180 ;;		_I2C_Write_Data
  4181 ;;		_Lcd_Out
  4182 ;;		_Lcd_XY
  4183 ;;		_bin_bcd_convert
  4184 ;; This function is called by:
  4185 ;;		_main
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text26
  4190  001AA2                     __ptext26:
  4191                           	callstack 0
  4192  001AA2                     _ConfiRegRTC:
  4193                           	callstack 27
  4194                           
  4195                           ;incstack = 0
  4196                           ;ConfiRegRTC@dir stored from wreg
  4197  001AA2  6E0F               	movwf	ConfiRegRTC@dir^0,c
  4198  001AA4                     
  4199                           ;main.c: 65:     uint8_t data;;main.c: 67:     data=bin_bcd_convert(dato);
  4200  001AA4  500D               	movf	ConfiRegRTC@dato^0,w,c
  4201  001AA6  ECB5  F00E         	call	_bin_bcd_convert
  4202  001AAA  6E10               	movwf	ConfiRegRTC@data^0,c
  4203  001AAC                     
  4204                           ;main.c: 68:     if(reg==reg_horas){
  4205  001AAC  0E02               	movlw	2
  4206  001AAE  180E               	xorwf	ConfiRegRTC@reg^0,w,c
  4207  001AB0  A4D8               	btfss	status,2,c
  4208  001AB2  EF5D  F00D         	goto	u1901
  4209  001AB6  EF5F  F00D         	goto	u1900
  4210  001ABA                     u1901:
  4211  001ABA  EF76  F00D         	goto	l2618
  4212  001ABE                     u1900:
  4213  001ABE                     
  4214                           ;main.c: 69:         Lcd_XY(1,17);
  4215  001ABE  0E11               	movlw	17
  4216  001AC0  6E05               	movwf	Lcd_XY@x^0,c
  4217  001AC2  0E01               	movlw	1
  4218  001AC4  ECD9  F00C         	call	_Lcd_XY
  4219  001AC8                     
  4220                           ;main.c: 70:         Lcd_Out("  ");
  4221  001AC8  0E3D               	movlw	low STR_1
  4222  001ACA  6E05               	movwf	Lcd_Out@text^0,c
  4223  001ACC  0E08               	movlw	high STR_1
  4224  001ACE  6E06               	movwf	(Lcd_Out@text+1)^0,c
  4225  001AD0  ECB5  F00D         	call	_Lcd_Out	;wreg free
  4226  001AD4                     
  4227                           ;main.c: 73:         data|=0b01000000;
  4228  001AD4  8C10               	bsf	ConfiRegRTC@data^0,6,c
  4229  001AD6                     
  4230                           ;main.c: 74:         Lcd_XY(1,17);
  4231  001AD6  0E11               	movlw	17
  4232  001AD8  6E05               	movwf	Lcd_XY@x^0,c
  4233  001ADA  0E01               	movlw	1
  4234  001ADC  ECD9  F00C         	call	_Lcd_XY
  4235  001AE0                     
  4236                           ;main.c: 75:         Lcd_Out("AM");
  4237  001AE0  0E40               	movlw	low STR_2
  4238  001AE2  6E05               	movwf	Lcd_Out@text^0,c
  4239  001AE4  0E08               	movlw	high STR_2
  4240  001AE6  6E06               	movwf	(Lcd_Out@text+1)^0,c
  4241  001AE8  ECB5  F00D         	call	_Lcd_Out	;wreg free
  4242  001AEC                     l2618:
  4243                           
  4244                           ;main.c: 84:     I2C_Start();
  4245  001AEC  EC77  F00F         	call	_I2C_Start	;wreg free
  4246  001AF0                     
  4247                           ;main.c: 85:     I2C_Write_Data(dir);
  4248  001AF0  500F               	movf	ConfiRegRTC@dir^0,w,c
  4249  001AF2  EC79  F00E         	call	_I2C_Write_Data
  4250  001AF6                     
  4251                           ;main.c: 86:     I2C_Write_Data(reg);
  4252  001AF6  500E               	movf	ConfiRegRTC@reg^0,w,c
  4253  001AF8  EC79  F00E         	call	_I2C_Write_Data
  4254  001AFC                     
  4255                           ;main.c: 87:     I2C_Write_Data(data);
  4256  001AFC  5010               	movf	ConfiRegRTC@data^0,w,c
  4257  001AFE  EC79  F00E         	call	_I2C_Write_Data
  4258  001B02                     
  4259                           ;main.c: 88:     I2C_Stop();
  4260  001B02  EC4A  F00F         	call	_I2C_Stop	;wreg free
  4261  001B06  0012               	return		;funcret
  4262  001B08                     __end_of_ConfiRegRTC:
  4263                           	callstack 0
  4264                           
  4265 ;; *************** function _bin_bcd_convert *****************
  4266 ;; Defined at:
  4267 ;;		line 55 in file "main.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;  dato            1    wreg     unsigned char 
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;  dato            1   11[COMRAM] unsigned char 
  4272 ;;  data            1   10[COMRAM] unsigned char 
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  1    wreg      unsigned char 
  4275 ;; Registers used:
  4276 ;;		wreg, status,2, status,0, cstack
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4282 ;;      Params:         0       0       0       0       0       0       0       0       0
  4283 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4284 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4285 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4286 ;;Total ram usage:        4 bytes
  4287 ;; Hardware stack levels used: 1
  4288 ;; Hardware stack levels required when called: 1
  4289 ;; This function calls:
  4290 ;;		___awdiv
  4291 ;;		___awmod
  4292 ;; This function is called by:
  4293 ;;		_ConfiRegRTC
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text27
  4298  001D6A                     __ptext27:
  4299                           	callstack 0
  4300  001D6A                     _bin_bcd_convert:
  4301                           	callstack 28
  4302                           
  4303                           ;incstack = 0
  4304                           ;bin_bcd_convert@dato stored from wreg
  4305  001D6A  6E0C               	movwf	bin_bcd_convert@dato^0,c
  4306  001D6C                     
  4307                           ;main.c: 56:     uint8_t data;;main.c: 57:     data=(uint8_t)((dato/10)<<4)|(dato%10);
  4308  001D6C  C00C  F001         	movff	bin_bcd_convert@dato,___awmod@dividend
  4309  001D70  6A02               	clrf	(___awmod@dividend+1)^0,c
  4310  001D72  0E00               	movlw	0
  4311  001D74  6E04               	movwf	(___awmod@divisor+1)^0,c
  4312  001D76  0E0A               	movlw	10
  4313  001D78  6E03               	movwf	___awmod@divisor^0,c
  4314  001D7A  ECF0  F00B         	call	___awmod	;wreg free
  4315  001D7E  C001  F009         	movff	?___awmod,??_bin_bcd_convert
  4316  001D82  C002  F00A         	movff	?___awmod+1,??_bin_bcd_convert+1
  4317  001D86  C00C  F001         	movff	bin_bcd_convert@dato,___awdiv@dividend
  4318  001D8A  6A02               	clrf	(___awdiv@dividend+1)^0,c
  4319  001D8C  0E00               	movlw	0
  4320  001D8E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4321  001D90  0E0A               	movlw	10
  4322  001D92  6E03               	movwf	___awdiv@divisor^0,c
  4323  001D94  ECCF  F00A         	call	___awdiv	;wreg free
  4324  001D98  3801               	swapf	?___awdiv^0,w,c
  4325  001D9A  0BF0               	andlw	240
  4326  001D9C  1009               	iorwf	??_bin_bcd_convert^0,w,c
  4327  001D9E  6E0B               	movwf	bin_bcd_convert@data^0,c
  4328  001DA0                     
  4329                           ;main.c: 58:     return data;
  4330  001DA0  500B               	movf	bin_bcd_convert@data^0,w,c
  4331  001DA2  0012               	return		;funcret
  4332  001DA4                     __end_of_bin_bcd_convert:
  4333                           	callstack 0
  4334                           
  4335 ;; *************** function ___awmod *****************
  4336 ;; Defined at:
  4337 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;  dividend        2    0[COMRAM] int 
  4340 ;;  divisor         2    2[COMRAM] int 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;  sign            1    5[COMRAM] unsigned char 
  4343 ;;  counter         1    4[COMRAM] unsigned char 
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  2    0[COMRAM] int 
  4346 ;; Registers used:
  4347 ;;		wreg, status,2, status,0
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4353 ;;      Params:         4       0       0       0       0       0       0       0       0
  4354 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4355 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4356 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4357 ;;Total ram usage:        6 bytes
  4358 ;; Hardware stack levels used: 1
  4359 ;; This function calls:
  4360 ;;		Nothing
  4361 ;; This function is called by:
  4362 ;;		_bin_bcd_convert
  4363 ;;		_readDs1307
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text28
  4368  0017E0                     __ptext28:
  4369                           	callstack 0
  4370  0017E0                     ___awmod:
  4371                           	callstack 28
  4372  0017E0  0E00               	movlw	0
  4373  0017E2  6E06               	movwf	___awmod@sign^0,c
  4374  0017E4  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  4375  0017E6  EFF9  F00B         	goto	u1680
  4376  0017EA  EFF7  F00B         	goto	u1681
  4377  0017EE                     u1681:
  4378  0017EE  EFFF  F00B         	goto	l2414
  4379  0017F2                     u1680:
  4380  0017F2  6C01               	negf	___awmod@dividend^0,c
  4381  0017F4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4382  0017F6  B0D8               	btfsc	status,0,c
  4383  0017F8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4384  0017FA  0E01               	movlw	1
  4385  0017FC  6E06               	movwf	___awmod@sign^0,c
  4386  0017FE                     l2414:
  4387  0017FE  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  4388  001800  EF06  F00C         	goto	u1690
  4389  001804  EF04  F00C         	goto	u1691
  4390  001808                     u1691:
  4391  001808  EF0A  F00C         	goto	l2418
  4392  00180C                     u1690:
  4393  00180C  6C03               	negf	___awmod@divisor^0,c
  4394  00180E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4395  001810  B0D8               	btfsc	status,0,c
  4396  001812  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4397  001814                     l2418:
  4398  001814  5003               	movf	___awmod@divisor^0,w,c
  4399  001816  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4400  001818  B4D8               	btfsc	status,2,c
  4401  00181A  EF11  F00C         	goto	u1701
  4402  00181E  EF13  F00C         	goto	u1700
  4403  001822                     u1701:
  4404  001822  EF37  F00C         	goto	l2434
  4405  001826                     u1700:
  4406  001826  0E01               	movlw	1
  4407  001828  6E05               	movwf	___awmod@counter^0,c
  4408  00182A  EF1B  F00C         	goto	l2424
  4409  00182E                     l2422:
  4410  00182E  90D8               	bcf	status,0,c
  4411  001830  3603               	rlcf	___awmod@divisor^0,f,c
  4412  001832  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4413  001834  2A05               	incf	___awmod@counter^0,f,c
  4414  001836                     l2424:
  4415  001836  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4416  001838  EF20  F00C         	goto	u1711
  4417  00183C  EF22  F00C         	goto	u1710
  4418  001840                     u1711:
  4419  001840  EF17  F00C         	goto	l2422
  4420  001844                     u1710:
  4421  001844                     l2426:
  4422  001844  5003               	movf	___awmod@divisor^0,w,c
  4423  001846  5C01               	subwf	___awmod@dividend^0,w,c
  4424  001848  5004               	movf	(___awmod@divisor+1)^0,w,c
  4425  00184A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4426  00184C  A0D8               	btfss	status,0,c
  4427  00184E  EF2B  F00C         	goto	u1721
  4428  001852  EF2D  F00C         	goto	u1720
  4429  001856                     u1721:
  4430  001856  EF31  F00C         	goto	l2430
  4431  00185A                     u1720:
  4432  00185A  5003               	movf	___awmod@divisor^0,w,c
  4433  00185C  5E01               	subwf	___awmod@dividend^0,f,c
  4434  00185E  5004               	movf	(___awmod@divisor+1)^0,w,c
  4435  001860  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4436  001862                     l2430:
  4437  001862  90D8               	bcf	status,0,c
  4438  001864  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4439  001866  3203               	rrcf	___awmod@divisor^0,f,c
  4440  001868  2E05               	decfsz	___awmod@counter^0,f,c
  4441  00186A  EF22  F00C         	goto	l2426
  4442  00186E                     l2434:
  4443  00186E  5006               	movf	___awmod@sign^0,w,c
  4444  001870  B4D8               	btfsc	status,2,c
  4445  001872  EF3D  F00C         	goto	u1731
  4446  001876  EF3F  F00C         	goto	u1730
  4447  00187A                     u1731:
  4448  00187A  EF43  F00C         	goto	l2438
  4449  00187E                     u1730:
  4450  00187E  6C01               	negf	___awmod@dividend^0,c
  4451  001880  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4452  001882  B0D8               	btfsc	status,0,c
  4453  001884  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4454  001886                     l2438:
  4455  001886  C001  F001         	movff	___awmod@dividend,?___awmod
  4456  00188A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4457  00188E  0012               	return		;funcret
  4458  001890                     __end_of___awmod:
  4459                           	callstack 0
  4460                           
  4461 ;; *************** function ___awdiv *****************
  4462 ;; Defined at:
  4463 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;  dividend        2    0[COMRAM] int 
  4466 ;;  divisor         2    2[COMRAM] int 
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;  quotient        2    6[COMRAM] int 
  4469 ;;  sign            1    5[COMRAM] unsigned char 
  4470 ;;  counter         1    4[COMRAM] unsigned char 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  2    0[COMRAM] int 
  4473 ;; Registers used:
  4474 ;;		wreg, status,2, status,0
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4480 ;;      Params:         4       0       0       0       0       0       0       0       0
  4481 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4482 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4483 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4484 ;;Total ram usage:        8 bytes
  4485 ;; Hardware stack levels used: 1
  4486 ;; This function calls:
  4487 ;;		Nothing
  4488 ;; This function is called by:
  4489 ;;		_bin_bcd_convert
  4490 ;;		_readDs1307
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           	psect	text29
  4495  00159E                     __ptext29:
  4496                           	callstack 0
  4497  00159E                     ___awdiv:
  4498                           	callstack 28
  4499  00159E  0E00               	movlw	0
  4500  0015A0  6E06               	movwf	___awdiv@sign^0,c
  4501  0015A2  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4502  0015A4  EFD8  F00A         	goto	u1620
  4503  0015A8  EFD6  F00A         	goto	u1621
  4504  0015AC                     u1621:
  4505  0015AC  EFDE  F00A         	goto	l2370
  4506  0015B0                     u1620:
  4507  0015B0  6C03               	negf	___awdiv@divisor^0,c
  4508  0015B2  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4509  0015B4  B0D8               	btfsc	status,0,c
  4510  0015B6  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4511  0015B8  0E01               	movlw	1
  4512  0015BA  6E06               	movwf	___awdiv@sign^0,c
  4513  0015BC                     l2370:
  4514  0015BC  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4515  0015BE  EFE5  F00A         	goto	u1630
  4516  0015C2  EFE3  F00A         	goto	u1631
  4517  0015C6                     u1631:
  4518  0015C6  EFEB  F00A         	goto	l2376
  4519  0015CA                     u1630:
  4520  0015CA  6C01               	negf	___awdiv@dividend^0,c
  4521  0015CC  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4522  0015CE  B0D8               	btfsc	status,0,c
  4523  0015D0  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4524  0015D2  0E01               	movlw	1
  4525  0015D4  1A06               	xorwf	___awdiv@sign^0,f,c
  4526  0015D6                     l2376:
  4527  0015D6  0E00               	movlw	0
  4528  0015D8  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4529  0015DA  0E00               	movlw	0
  4530  0015DC  6E07               	movwf	___awdiv@quotient^0,c
  4531  0015DE  5003               	movf	___awdiv@divisor^0,w,c
  4532  0015E0  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4533  0015E2  B4D8               	btfsc	status,2,c
  4534  0015E4  EFF6  F00A         	goto	u1641
  4535  0015E8  EFF8  F00A         	goto	u1640
  4536  0015EC                     u1641:
  4537  0015EC  EF20  F00B         	goto	l2398
  4538  0015F0                     u1640:
  4539  0015F0  0E01               	movlw	1
  4540  0015F2  6E05               	movwf	___awdiv@counter^0,c
  4541  0015F4  EF00  F00B         	goto	l2384
  4542  0015F8                     l2382:
  4543  0015F8  90D8               	bcf	status,0,c
  4544  0015FA  3603               	rlcf	___awdiv@divisor^0,f,c
  4545  0015FC  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4546  0015FE  2A05               	incf	___awdiv@counter^0,f,c
  4547  001600                     l2384:
  4548  001600  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4549  001602  EF05  F00B         	goto	u1651
  4550  001606  EF07  F00B         	goto	u1650
  4551  00160A                     u1651:
  4552  00160A  EFFC  F00A         	goto	l2382
  4553  00160E                     u1650:
  4554  00160E                     l2386:
  4555  00160E  90D8               	bcf	status,0,c
  4556  001610  3607               	rlcf	___awdiv@quotient^0,f,c
  4557  001612  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4558  001614  5003               	movf	___awdiv@divisor^0,w,c
  4559  001616  5C01               	subwf	___awdiv@dividend^0,w,c
  4560  001618  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4561  00161A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4562  00161C  A0D8               	btfss	status,0,c
  4563  00161E  EF13  F00B         	goto	u1661
  4564  001622  EF15  F00B         	goto	u1660
  4565  001626                     u1661:
  4566  001626  EF1A  F00B         	goto	l2394
  4567  00162A                     u1660:
  4568  00162A  5003               	movf	___awdiv@divisor^0,w,c
  4569  00162C  5E01               	subwf	___awdiv@dividend^0,f,c
  4570  00162E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4571  001630  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4572  001632  8007               	bsf	___awdiv@quotient^0,0,c
  4573  001634                     l2394:
  4574  001634  90D8               	bcf	status,0,c
  4575  001636  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4576  001638  3203               	rrcf	___awdiv@divisor^0,f,c
  4577  00163A  2E05               	decfsz	___awdiv@counter^0,f,c
  4578  00163C  EF07  F00B         	goto	l2386
  4579  001640                     l2398:
  4580  001640  5006               	movf	___awdiv@sign^0,w,c
  4581  001642  B4D8               	btfsc	status,2,c
  4582  001644  EF26  F00B         	goto	u1671
  4583  001648  EF28  F00B         	goto	u1670
  4584  00164C                     u1671:
  4585  00164C  EF2C  F00B         	goto	l2402
  4586  001650                     u1670:
  4587  001650  6C07               	negf	___awdiv@quotient^0,c
  4588  001652  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4589  001654  B0D8               	btfsc	status,0,c
  4590  001656  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4591  001658                     l2402:
  4592  001658  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4593  00165C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4594  001660  0012               	return		;funcret
  4595  001662                     __end_of___awdiv:
  4596                           	callstack 0
  4597                           
  4598 ;; *************** function _Lcd_XY *****************
  4599 ;; Defined at:
  4600 ;;		line 145 in file "./lib_lcd_20x4.h"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;  y               1    wreg     unsigned char 
  4603 ;;  x               1    4[COMRAM] unsigned char 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;  y               1    7[COMRAM] unsigned char 
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      void 
  4608 ;; Registers used:
  4609 ;;		wreg, status,2, status,0, cstack
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4615 ;;      Params:         1       0       0       0       0       0       0       0       0
  4616 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4617 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4618 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4619 ;;Total ram usage:        4 bytes
  4620 ;; Hardware stack levels used: 1
  4621 ;; Hardware stack levels required when called: 2
  4622 ;; This function calls:
  4623 ;;		_Lcd_Cmd
  4624 ;; This function is called by:
  4625 ;;		_ConfiRegRTC
  4626 ;;		_readDs1307_sprintf
  4627 ;;		_Lcd_Char_XY
  4628 ;;		_Lcd_Out_XY
  4629 ;;		_readDs1307
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text30
  4634  0019B2                     __ptext30:
  4635                           	callstack 0
  4636  0019B2                     _Lcd_XY:
  4637                           	callstack 27
  4638                           
  4639                           ;incstack = 0
  4640                           ;Lcd_XY@y stored from wreg
  4641  0019B2  6E08               	movwf	Lcd_XY@y^0,c
  4642  0019B4                     
  4643                           ;./lib_lcd_20x4.h: 146:     switch(y){
  4644  0019B4  EFF4  F00C         	goto	l2492
  4645  0019B8                     l2482:
  4646  0019B8  5005               	movf	Lcd_XY@x^0,w,c
  4647  0019BA  0F7F               	addlw	127
  4648  0019BC  ECA8  F00F         	call	_Lcd_Cmd
  4649  0019C0  EF11  F00D         	goto	l2494
  4650  0019C4                     l2484:
  4651  0019C4  5005               	movf	Lcd_XY@x^0,w,c
  4652  0019C6  0FBF               	addlw	191
  4653  0019C8  ECA8  F00F         	call	_Lcd_Cmd
  4654  0019CC  EF11  F00D         	goto	l2494
  4655  0019D0                     l2486:
  4656  0019D0  5005               	movf	Lcd_XY@x^0,w,c
  4657  0019D2  0F93               	addlw	147
  4658  0019D4  ECA8  F00F         	call	_Lcd_Cmd
  4659  0019D8  EF11  F00D         	goto	l2494
  4660  0019DC                     l2488:
  4661  0019DC  5005               	movf	Lcd_XY@x^0,w,c
  4662  0019DE  0FD3               	addlw	211
  4663  0019E0  ECA8  F00F         	call	_Lcd_Cmd
  4664  0019E4  EF11  F00D         	goto	l2494
  4665  0019E8                     l2492:
  4666  0019E8  5008               	movf	Lcd_XY@y^0,w,c
  4667  0019EA  6E06               	movwf	??_Lcd_XY^0,c
  4668  0019EC  6A07               	clrf	(??_Lcd_XY+1)^0,c
  4669                           
  4670                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4671                           ; Switch size 1, requested type "simple"
  4672                           ; Number of cases is 1, Range of values is 0 to 0
  4673                           ; switch strategies available:
  4674                           ; Name         Instructions Cycles
  4675                           ; simple_byte            4     3 (average)
  4676                           ;	Chosen strategy is simple_byte
  4677  0019EE  5007               	movf	(??_Lcd_XY+1)^0,w,c
  4678  0019F0  0A00               	xorlw	0	; case 0
  4679  0019F2  B4D8               	btfsc	status,2,c
  4680  0019F4  EFFE  F00C         	goto	l2828
  4681  0019F8  EF11  F00D         	goto	l2494
  4682  0019FC                     l2828:
  4683                           
  4684                           ; Switch size 1, requested type "simple"
  4685                           ; Number of cases is 4, Range of values is 1 to 4
  4686                           ; switch strategies available:
  4687                           ; Name         Instructions Cycles
  4688                           ; simple_byte           13     7 (average)
  4689                           ;	Chosen strategy is simple_byte
  4690  0019FC  5006               	movf	??_Lcd_XY^0,w,c
  4691  0019FE  0A01               	xorlw	1	; case 1
  4692  001A00  B4D8               	btfsc	status,2,c
  4693  001A02  EFDC  F00C         	goto	l2482
  4694  001A06  0A03               	xorlw	3	; case 2
  4695  001A08  B4D8               	btfsc	status,2,c
  4696  001A0A  EFE2  F00C         	goto	l2484
  4697  001A0E  0A01               	xorlw	1	; case 3
  4698  001A10  B4D8               	btfsc	status,2,c
  4699  001A12  EFE8  F00C         	goto	l2486
  4700  001A16  0A07               	xorlw	7	; case 4
  4701  001A18  B4D8               	btfsc	status,2,c
  4702  001A1A  EFEE  F00C         	goto	l2488
  4703  001A1E  EF11  F00D         	goto	l2494
  4704  001A22                     l2494:
  4705                           
  4706                           ;./lib_lcd_20x4.h: 152:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  4707  001A22  0EF0               	movlw	240
  4708  001A24                     u2087:
  4709  001A24  D000               	nop2	
  4710  001A26  2EE8               	decfsz	wreg,f,c
  4711  001A28  D7FD               	bra	u2087
  4712  001A2A                     
  4713                           ;./lib_lcd_20x4.h: 153:     LATDbits.LATD0=0;
  4714  001A2A  908C               	bcf	140,0,c	;volatile
  4715  001A2C  0012               	return		;funcret
  4716  001A2E                     __end_of_Lcd_XY:
  4717                           	callstack 0
  4718                           
  4719 ;; *************** function _Lcd_Cmd *****************
  4720 ;; Defined at:
  4721 ;;		line 132 in file "./lib_lcd_20x4.h"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;  cmd             1    wreg     unsigned char 
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;  cmd             1    3[COMRAM] unsigned char 
  4726 ;; Return value:  Size  Location     Type
  4727 ;;                  1    wreg      void 
  4728 ;; Registers used:
  4729 ;;		wreg, status,2, status,0, cstack
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4735 ;;      Params:         0       0       0       0       0       0       0       0       0
  4736 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4737 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4738 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4739 ;;Total ram usage:        1 bytes
  4740 ;; Hardware stack levels used: 1
  4741 ;; Hardware stack levels required when called: 1
  4742 ;; This function calls:
  4743 ;;		_enviar_dato
  4744 ;; This function is called by:
  4745 ;;		_Lcd_Init
  4746 ;;		_Lcd_XY
  4747 ;;		_main
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           	psect	text31
  4752  001F50                     __ptext31:
  4753                           	callstack 0
  4754  001F50                     _Lcd_Cmd:
  4755                           	callstack 27
  4756                           
  4757                           ;incstack = 0
  4758                           ;Lcd_Cmd@cmd stored from wreg
  4759  001F50  6E04               	movwf	Lcd_Cmd@cmd^0,c
  4760  001F52                     
  4761                           ;./lib_lcd_20x4.h: 133:     LATDbits.LATD0=0;
  4762  001F52  908C               	bcf	140,0,c	;volatile
  4763  001F54                     
  4764                           ;./lib_lcd_20x4.h: 134:     enviar_dato(cmd);
  4765  001F54  5004               	movf	Lcd_Cmd@cmd^0,w,c
  4766  001F56  EC5B  F009         	call	_enviar_dato
  4767  001F5A                     
  4768                           ;./lib_lcd_20x4.h: 135:     LATDbits.LATD0=0;
  4769  001F5A  908C               	bcf	140,0,c	;volatile
  4770  001F5C  0012               	return		;funcret
  4771  001F5E                     __end_of_Lcd_Cmd:
  4772                           	callstack 0
  4773                           
  4774 ;; *************** function _Lcd_Out *****************
  4775 ;; Defined at:
  4776 ;;		line 163 in file "./lib_lcd_20x4.h"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;  text            2    4[COMRAM] PTR unsigned char 
  4779 ;;		 -> aux(20), STR_4(8), STR_3(7), STR_2(3), 
  4780 ;;		 -> STR_1(3), 
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;		None
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  1    wreg      void 
  4785 ;; Registers used:
  4786 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4792 ;;      Params:         2       0       0       0       0       0       0       0       0
  4793 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4794 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4795 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4796 ;;Total ram usage:        2 bytes
  4797 ;; Hardware stack levels used: 1
  4798 ;; Hardware stack levels required when called: 2
  4799 ;; This function calls:
  4800 ;;		_Lcd_Char
  4801 ;; This function is called by:
  4802 ;;		_ConfiRegRTC
  4803 ;;		_readDs1307_sprintf
  4804 ;;		_readDs1307
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           	psect	text32
  4809  001B6A                     __ptext32:
  4810                           	callstack 0
  4811  001B6A                     _Lcd_Out:
  4812                           	callstack 27
  4813  001B6A                     
  4814                           ;./lib_lcd_20x4.h: 164:     LATDbits.LATD0=1;
  4815  001B6A  808C               	bsf	140,0,c	;volatile
  4816                           
  4817                           ;./lib_lcd_20x4.h: 165:     while(*text){
  4818  001B6C  EFCC  F00D         	goto	l2510
  4819  001B70                     l2506:
  4820                           
  4821                           ;./lib_lcd_20x4.h: 166:         Lcd_Char(*text);
  4822  001B70  C005  FFF6         	movff	Lcd_Out@text,tblptrl
  4823  001B74  C006  FFF7         	movff	Lcd_Out@text+1,tblptrh
  4824  001B78  6AF8               	clrf	tblptru,c
  4825  001B7A  0E07               	movlw	(high __ramtop+-1)
  4826  001B7C  64F7               	cpfsgt	tblptrh,c
  4827  001B7E  D003               	bra	u1827
  4828  001B80  0008               	tblrd		*
  4829  001B82  50F5               	movf	tablat,w,c
  4830  001B84  D005               	bra	u1820
  4831  001B86                     u1827:
  4832  001B86  CFF6 FFE1          	movff	tblptrl,fsr1l
  4833  001B8A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4834  001B8E  50E7               	movf	indf1,w,c
  4835  001B90                     u1820:
  4836  001B90  ECAF  F00F         	call	_Lcd_Char
  4837  001B94                     
  4838                           ;./lib_lcd_20x4.h: 167:         text++;
  4839  001B94  4A05               	infsnz	Lcd_Out@text^0,f,c
  4840  001B96  2A06               	incf	(Lcd_Out@text+1)^0,f,c
  4841  001B98                     l2510:
  4842                           
  4843                           ;./lib_lcd_20x4.h: 165:     while(*text){
  4844  001B98  C005  FFF6         	movff	Lcd_Out@text,tblptrl
  4845  001B9C  C006  FFF7         	movff	Lcd_Out@text+1,tblptrh
  4846  001BA0  6AF8               	clrf	tblptru,c
  4847  001BA2  0E07               	movlw	(high __ramtop+-1)
  4848  001BA4  64F7               	cpfsgt	tblptrh,c
  4849  001BA6  D003               	bra	u1837
  4850  001BA8  0008               	tblrd		*
  4851  001BAA  50F5               	movf	tablat,w,c
  4852  001BAC  D005               	bra	u1830
  4853  001BAE                     u1837:
  4854  001BAE  CFF6 FFE1          	movff	tblptrl,fsr1l
  4855  001BB2  CFF7 FFE2          	movff	tblptrh,fsr1h
  4856  001BB6  50E7               	movf	indf1,w,c
  4857  001BB8                     u1830:
  4858  001BB8  0900               	iorlw	0
  4859  001BBA  A4D8               	btfss	status,2,c
  4860  001BBC  EFE2  F00D         	goto	u1841
  4861  001BC0  EFE4  F00D         	goto	u1840
  4862  001BC4                     u1841:
  4863  001BC4  EFB8  F00D         	goto	l2506
  4864  001BC8                     u1840:
  4865  001BC8  0012               	return		;funcret
  4866  001BCA                     __end_of_Lcd_Out:
  4867                           	callstack 0
  4868                           
  4869 ;; *************** function _Lcd_Char *****************
  4870 ;; Defined at:
  4871 ;;		line 138 in file "./lib_lcd_20x4.h"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  letra           1    wreg     unsigned char 
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;  letra           1    3[COMRAM] unsigned char 
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  1    wreg      void 
  4878 ;; Registers used:
  4879 ;;		wreg, status,2, status,0, cstack
  4880 ;; Tracked objects:
  4881 ;;		On entry : 0/0
  4882 ;;		On exit  : 0/0
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4885 ;;      Params:         0       0       0       0       0       0       0       0       0
  4886 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4887 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4888 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4889 ;;Total ram usage:        1 bytes
  4890 ;; Hardware stack levels used: 1
  4891 ;; Hardware stack levels required when called: 1
  4892 ;; This function calls:
  4893 ;;		_enviar_dato
  4894 ;; This function is called by:
  4895 ;;		_Lcd_Out
  4896 ;;		_Lcd_Out_XY
  4897 ;;		_readDs1307
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           	psect	text33
  4902  001F5E                     __ptext33:
  4903                           	callstack 0
  4904  001F5E                     _Lcd_Char:
  4905                           	callstack 27
  4906                           
  4907                           ;incstack = 0
  4908                           ;Lcd_Char@letra stored from wreg
  4909  001F5E  6E04               	movwf	Lcd_Char@letra^0,c
  4910  001F60                     
  4911                           ;./lib_lcd_20x4.h: 139:     LATDbits.LATD0=1;
  4912  001F60  808C               	bsf	140,0,c	;volatile
  4913  001F62                     
  4914                           ;./lib_lcd_20x4.h: 140:     enviar_dato(letra);
  4915  001F62  5004               	movf	Lcd_Char@letra^0,w,c
  4916  001F64  EC5B  F009         	call	_enviar_dato
  4917  001F68                     
  4918                           ;./lib_lcd_20x4.h: 141:     LATDbits.LATD0=0;
  4919  001F68  908C               	bcf	140,0,c	;volatile
  4920  001F6A  0012               	return		;funcret
  4921  001F6C                     __end_of_Lcd_Char:
  4922                           	callstack 0
  4923                           
  4924 ;; *************** function _enviar_dato *****************
  4925 ;; Defined at:
  4926 ;;		line 55 in file "./lib_lcd_20x4.h"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  cmd             1    wreg     unsigned char 
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;  cmd             1    2[COMRAM] unsigned char 
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  1    wreg      void 
  4933 ;; Registers used:
  4934 ;;		wreg, status,2, status,0
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4940 ;;      Params:         0       0       0       0       0       0       0       0       0
  4941 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4942 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4943 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4944 ;;Total ram usage:        3 bytes
  4945 ;; Hardware stack levels used: 1
  4946 ;; This function calls:
  4947 ;;		Nothing
  4948 ;; This function is called by:
  4949 ;;		_Lcd_Init
  4950 ;;		_Lcd_Cmd
  4951 ;;		_Lcd_Char
  4952 ;;		_Lcd_Char_XY
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           	psect	text34
  4957  0012B6                     __ptext34:
  4958                           	callstack 0
  4959  0012B6                     _enviar_dato:
  4960                           	callstack 27
  4961                           
  4962                           ;incstack = 0
  4963                           ;enviar_dato@cmd stored from wreg
  4964  0012B6  6E03               	movwf	enviar_dato@cmd^0,c
  4965  0012B8                     
  4966                           ;./lib_lcd_20x4.h: 56:     TRISDbits.RD4=0;
  4967  0012B8  9895               	bcf	149,4,c	;volatile
  4968                           
  4969                           ;./lib_lcd_20x4.h: 57:     TRISDbits.RD5=0;
  4970  0012BA  9A95               	bcf	149,5,c	;volatile
  4971                           
  4972                           ;./lib_lcd_20x4.h: 58:     TRISDbits.RD6=0;
  4973  0012BC  9C95               	bcf	149,6,c	;volatile
  4974                           
  4975                           ;./lib_lcd_20x4.h: 59:     TRISDbits.RD7=0;
  4976  0012BE  9E95               	bcf	149,7,c	;volatile
  4977                           
  4978                           ;./lib_lcd_20x4.h: 60:     LATDbits.LATD4=0;
  4979  0012C0  988C               	bcf	140,4,c	;volatile
  4980                           
  4981                           ;./lib_lcd_20x4.h: 61:     LATDbits.LATD5=0;
  4982  0012C2  9A8C               	bcf	140,5,c	;volatile
  4983                           
  4984                           ;./lib_lcd_20x4.h: 62:     LATDbits.LATD6=0;
  4985  0012C4  9C8C               	bcf	140,6,c	;volatile
  4986                           
  4987                           ;./lib_lcd_20x4.h: 63:     LATDbits.LATD7=0;
  4988  0012C6  9E8C               	bcf	140,7,c	;volatile
  4989                           
  4990                           ;./lib_lcd_20x4.h: 65:     LATDbits.LATD1=0;
  4991  0012C8  928C               	bcf	140,1,c	;volatile
  4992  0012CA                     
  4993                           ;./lib_lcd_20x4.h: 66:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  4994  0012CA  0EF0               	movlw	240
  4995  0012CC                     u2097:
  4996  0012CC  D000               	nop2	
  4997  0012CE  2EE8               	decfsz	wreg,f,c
  4998  0012D0  D7FD               	bra	u2097
  4999  0012D2                     
  5000                           ;./lib_lcd_20x4.h: 68:     LATDbits.LATD4=(cmd>>4)&0x01;
  5001  0012D2  C003  F001         	movff	enviar_dato@cmd,??_enviar_dato
  5002  0012D6  3A01               	swapf	??_enviar_dato^0,f,c
  5003  0012D8  0E0F               	movlw	15
  5004  0012DA  1601               	andwf	??_enviar_dato^0,f,c
  5005  0012DC  0E01               	movlw	1
  5006  0012DE  1601               	andwf	??_enviar_dato^0,f,c
  5007  0012E0  3A01               	swapf	??_enviar_dato^0,f,c
  5008  0012E2  508C               	movf	140,w,c	;volatile
  5009  0012E4  1801               	xorwf	??_enviar_dato^0,w,c
  5010  0012E6  0BEF               	andlw	-17
  5011  0012E8  1801               	xorwf	??_enviar_dato^0,w,c
  5012  0012EA  6E8C               	movwf	140,c	;volatile
  5013  0012EC                     
  5014                           ;./lib_lcd_20x4.h: 69:     LATDbits.LATD5=(cmd>>5)&0x01;
  5015  0012EC  C003  F001         	movff	enviar_dato@cmd,??_enviar_dato
  5016  0012F0  0E05               	movlw	5
  5017  0012F2  6E02               	movwf	(??_enviar_dato+1)^0,c
  5018  0012F4                     u1465:
  5019  0012F4  90D8               	bcf	status,0,c
  5020  0012F6  3201               	rrcf	??_enviar_dato^0,f,c
  5021  0012F8  2E02               	decfsz	(??_enviar_dato+1)^0,f,c
  5022  0012FA  EF7A  F009         	goto	u1465
  5023  0012FE  0E01               	movlw	1
  5024  001300  1601               	andwf	??_enviar_dato^0,f,c
  5025  001302  3A01               	swapf	??_enviar_dato^0,f,c
  5026  001304  4601               	rlncf	??_enviar_dato^0,f,c
  5027  001306  508C               	movf	140,w,c	;volatile
  5028  001308  1801               	xorwf	??_enviar_dato^0,w,c
  5029  00130A  0BDF               	andlw	-33
  5030  00130C  1801               	xorwf	??_enviar_dato^0,w,c
  5031  00130E  6E8C               	movwf	140,c	;volatile
  5032  001310                     
  5033                           ;./lib_lcd_20x4.h: 70:     LATDbits.LATD6=(cmd>>6)&0x01;
  5034  001310  C003  F001         	movff	enviar_dato@cmd,??_enviar_dato
  5035  001314  0E06               	movlw	6
  5036  001316  6E02               	movwf	(??_enviar_dato+1)^0,c
  5037  001318                     u1475:
  5038  001318  90D8               	bcf	status,0,c
  5039  00131A  3201               	rrcf	??_enviar_dato^0,f,c
  5040  00131C  2E02               	decfsz	(??_enviar_dato+1)^0,f,c
  5041  00131E  EF8C  F009         	goto	u1475
  5042  001322  0E01               	movlw	1
  5043  001324  1601               	andwf	??_enviar_dato^0,f,c
  5044  001326  3A01               	swapf	??_enviar_dato^0,f,c
  5045  001328  4601               	rlncf	??_enviar_dato^0,f,c
  5046  00132A  4601               	rlncf	??_enviar_dato^0,f,c
  5047  00132C  508C               	movf	140,w,c	;volatile
  5048  00132E  1801               	xorwf	??_enviar_dato^0,w,c
  5049  001330  0BBF               	andlw	-65
  5050  001332  1801               	xorwf	??_enviar_dato^0,w,c
  5051  001334  6E8C               	movwf	140,c	;volatile
  5052  001336                     
  5053                           ;./lib_lcd_20x4.h: 71:     LATDbits.LATD7=(cmd>>7)&0x01;
  5054  001336  6A01               	clrf	??_enviar_dato^0,c
  5055  001338  AE03               	btfss	enviar_dato@cmd^0,7,c
  5056  00133A  D001               	bra	u1485
  5057  00133C  2A01               	incf	??_enviar_dato^0,f,c
  5058  00133E                     u1485:
  5059  00133E  0E01               	movlw	1
  5060  001340  1601               	andwf	??_enviar_dato^0,f,c
  5061  001342  3201               	rrcf	??_enviar_dato^0,f,c
  5062  001344  3201               	rrcf	??_enviar_dato^0,f,c
  5063  001346  508C               	movf	140,w,c	;volatile
  5064  001348  1801               	xorwf	??_enviar_dato^0,w,c
  5065  00134A  0B7F               	andlw	-129
  5066  00134C  1801               	xorwf	??_enviar_dato^0,w,c
  5067  00134E  6E8C               	movwf	140,c	;volatile
  5068  001350                     
  5069                           ;./lib_lcd_20x4.h: 72:     LATDbits.LATD1=1;
  5070  001350  828C               	bsf	140,1,c	;volatile
  5071  001352                     
  5072                           ;./lib_lcd_20x4.h: 73:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  5073  001352  0EF0               	movlw	240
  5074  001354                     u2107:
  5075  001354  D000               	nop2	
  5076  001356  2EE8               	decfsz	wreg,f,c
  5077  001358  D7FD               	bra	u2107
  5078  00135A                     
  5079                           ;./lib_lcd_20x4.h: 74:     LATDbits.LATD1=0;
  5080  00135A  928C               	bcf	140,1,c	;volatile
  5081  00135C                     
  5082                           ;./lib_lcd_20x4.h: 76:     LATDbits.LATD4=(cmd&0x0F);
  5083  00135C  C003  F001         	movff	enviar_dato@cmd,??_enviar_dato
  5084  001360  0E0F               	movlw	15
  5085  001362  1601               	andwf	??_enviar_dato^0,f,c
  5086  001364  3A01               	swapf	??_enviar_dato^0,f,c
  5087  001366  508C               	movf	140,w,c	;volatile
  5088  001368  1801               	xorwf	??_enviar_dato^0,w,c
  5089  00136A  0BEF               	andlw	-17
  5090  00136C  1801               	xorwf	??_enviar_dato^0,w,c
  5091  00136E  6E8C               	movwf	140,c	;volatile
  5092  001370                     
  5093                           ;./lib_lcd_20x4.h: 77:     LATDbits.LATD5=((cmd&0x0F)>>1);
  5094  001370  C003  F001         	movff	enviar_dato@cmd,??_enviar_dato
  5095  001374  90D8               	bcf	status,0,c
  5096  001376  3201               	rrcf	??_enviar_dato^0,f,c
  5097  001378  0E07               	movlw	7
  5098  00137A  1601               	andwf	??_enviar_dato^0,f,c
  5099  00137C  3A01               	swapf	??_enviar_dato^0,f,c
  5100  00137E  4601               	rlncf	??_enviar_dato^0,f,c
  5101  001380  508C               	movf	140,w,c	;volatile
  5102  001382  1801               	xorwf	??_enviar_dato^0,w,c
  5103  001384  0BDF               	andlw	-33
  5104  001386  1801               	xorwf	??_enviar_dato^0,w,c
  5105  001388  6E8C               	movwf	140,c	;volatile
  5106  00138A                     
  5107                           ;./lib_lcd_20x4.h: 78:     LATDbits.LATD6=((cmd&0x0F)>>2);
  5108  00138A  C003  F001         	movff	enviar_dato@cmd,??_enviar_dato
  5109  00138E  90D8               	bcf	status,0,c
  5110  001390  3201               	rrcf	??_enviar_dato^0,f,c
  5111  001392  90D8               	bcf	status,0,c
  5112  001394  3201               	rrcf	??_enviar_dato^0,f,c
  5113  001396  0E03               	movlw	3
  5114  001398  1601               	andwf	??_enviar_dato^0,f,c
  5115  00139A  3A01               	swapf	??_enviar_dato^0,f,c
  5116  00139C  4601               	rlncf	??_enviar_dato^0,f,c
  5117  00139E  4601               	rlncf	??_enviar_dato^0,f,c
  5118  0013A0  508C               	movf	140,w,c	;volatile
  5119  0013A2  1801               	xorwf	??_enviar_dato^0,w,c
  5120  0013A4  0BBF               	andlw	-65
  5121  0013A6  1801               	xorwf	??_enviar_dato^0,w,c
  5122  0013A8  6E8C               	movwf	140,c	;volatile
  5123  0013AA                     
  5124                           ;./lib_lcd_20x4.h: 79:     LATDbits.LATD7=((cmd&0x0F)>>3);
  5125  0013AA  C003  F001         	movff	enviar_dato@cmd,??_enviar_dato
  5126  0013AE  90D8               	bcf	status,0,c
  5127  0013B0  3201               	rrcf	??_enviar_dato^0,f,c
  5128  0013B2  90D8               	bcf	status,0,c
  5129  0013B4  3201               	rrcf	??_enviar_dato^0,f,c
  5130  0013B6  90D8               	bcf	status,0,c
  5131  0013B8  3201               	rrcf	??_enviar_dato^0,f,c
  5132  0013BA  0E01               	movlw	1
  5133  0013BC  1601               	andwf	??_enviar_dato^0,f,c
  5134  0013BE  3201               	rrcf	??_enviar_dato^0,f,c
  5135  0013C0  3201               	rrcf	??_enviar_dato^0,f,c
  5136  0013C2  508C               	movf	140,w,c	;volatile
  5137  0013C4  1801               	xorwf	??_enviar_dato^0,w,c
  5138  0013C6  0B7F               	andlw	-129
  5139  0013C8  1801               	xorwf	??_enviar_dato^0,w,c
  5140  0013CA  6E8C               	movwf	140,c	;volatile
  5141  0013CC                     
  5142                           ;./lib_lcd_20x4.h: 81:     LATDbits.LATD1=1;
  5143  0013CC  828C               	bsf	140,1,c	;volatile
  5144  0013CE                     
  5145                           ;./lib_lcd_20x4.h: 82:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  5146  0013CE  0EF0               	movlw	240
  5147  0013D0                     u2117:
  5148  0013D0  D000               	nop2	
  5149  0013D2  2EE8               	decfsz	wreg,f,c
  5150  0013D4  D7FD               	bra	u2117
  5151  0013D6                     
  5152                           ;./lib_lcd_20x4.h: 83:     LATDbits.LATD1=0;
  5153  0013D6  928C               	bcf	140,1,c	;volatile
  5154  0013D8                     
  5155                           ;./lib_lcd_20x4.h: 85:     TRISDbits.RD4=1;
  5156  0013D8  8895               	bsf	149,4,c	;volatile
  5157  0013DA                     
  5158                           ;./lib_lcd_20x4.h: 86:     TRISDbits.RD5=1;
  5159  0013DA  8A95               	bsf	149,5,c	;volatile
  5160  0013DC                     
  5161                           ;./lib_lcd_20x4.h: 87:     TRISDbits.RD6=1;
  5162  0013DC  8C95               	bsf	149,6,c	;volatile
  5163  0013DE                     
  5164                           ;./lib_lcd_20x4.h: 88:     TRISDbits.RD7=1;
  5165  0013DE  8E95               	bsf	149,7,c	;volatile
  5166  0013E0  0012               	return		;funcret
  5167  0013E2                     __end_of_enviar_dato:
  5168                           	callstack 0
  5169                           
  5170 ;; *************** function _I2C_Write_Data *****************
  5171 ;; Defined at:
  5172 ;;		line 58 in file "./I2C_Lib.h"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;  dato            1    wreg     unsigned char 
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;  dato            1    1[COMRAM] unsigned char 
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  1    wreg      void 
  5179 ;; Registers used:
  5180 ;;		wreg, status,2, status,0, cstack
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5186 ;;      Params:         0       0       0       0       0       0       0       0       0
  5187 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5188 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5189 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5190 ;;Total ram usage:        1 bytes
  5191 ;; Hardware stack levels used: 1
  5192 ;; Hardware stack levels required when called: 1
  5193 ;; This function calls:
  5194 ;;		_I2C_Idle
  5195 ;;		_I2C_Restart
  5196 ;; This function is called by:
  5197 ;;		_ConfiRegRTC
  5198 ;;		_getDataDs1307
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           
  5202                           	psect	text35
  5203  001CF2                     __ptext35:
  5204                           	callstack 0
  5205  001CF2                     _I2C_Write_Data:
  5206                           	callstack 28
  5207                           
  5208                           ;incstack = 0
  5209                           ;I2C_Write_Data@dato stored from wreg
  5210  001CF2  6E02               	movwf	I2C_Write_Data@dato^0,c
  5211  001CF4                     
  5212                           ;./I2C_Lib.h: 59:     SSPBUF = dato;
  5213  001CF4  C002  FFC9         	movff	I2C_Write_Data@dato,4041	;volatile
  5214  001CF8                     l69:
  5215  001CF8  B0C7               	btfsc	199,0,c	;volatile
  5216  001CFA  EF81  F00E         	goto	u1761
  5217  001CFE  EF83  F00E         	goto	u1760
  5218  001D02                     u1761:
  5219  001D02  EF7C  F00E         	goto	l69
  5220  001D06                     u1760:
  5221  001D06                     l72:
  5222  001D06  B4C7               	btfsc	199,2,c	;volatile
  5223  001D08  EF88  F00E         	goto	u1771
  5224  001D0C  EF8A  F00E         	goto	u1770
  5225  001D10                     u1771:
  5226  001D10  EF83  F00E         	goto	l72
  5227  001D14                     u1770:
  5228  001D14                     
  5229                           ;./I2C_Lib.h: 62:     I2C_Idle();
  5230  001D14  EC37  F00F         	call	_I2C_Idle	;wreg free
  5231  001D18                     
  5232                           ;./I2C_Lib.h: 63:     if(ACKSTAT)
  5233  001D18  ACC5               	btfss	4037,6,c	;volatile
  5234  001D1A  EF91  F00E         	goto	u1781
  5235  001D1E  EF93  F00E         	goto	u1780
  5236  001D22                     u1781:
  5237  001D22  EF97  F00E         	goto	l76
  5238  001D26                     u1780:
  5239  001D26                     
  5240                           ;./I2C_Lib.h: 64:     {;./I2C_Lib.h: 65:         I2C_Restart();
  5241  001D26  EC9F  F00F         	call	_I2C_Restart	;wreg free
  5242  001D2A                     
  5243                           ;./I2C_Lib.h: 66:         SSPBUF=dato;
  5244  001D2A  C002  FFC9         	movff	I2C_Write_Data@dato,4041	;volatile
  5245  001D2E                     l76:
  5246  001D2E  0012               	return		;funcret
  5247  001D30                     __end_of_I2C_Write_Data:
  5248                           	callstack 0
  5249                           
  5250 ;; *************** function _I2C_Restart *****************
  5251 ;; Defined at:
  5252 ;;		line 80 in file "./I2C_Lib.h"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;		None
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;		None
  5257 ;; Return value:  Size  Location     Type
  5258 ;;                  1    wreg      void 
  5259 ;; Registers used:
  5260 ;;		None
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5266 ;;      Params:         0       0       0       0       0       0       0       0       0
  5267 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5269 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5270 ;;Total ram usage:        0 bytes
  5271 ;; Hardware stack levels used: 1
  5272 ;; This function calls:
  5273 ;;		Nothing
  5274 ;; This function is called by:
  5275 ;;		_I2C_Write_Data
  5276 ;;		_getDataDs1307
  5277 ;;		_I2C_Read_Data
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           	psect	text36
  5282  001F3E                     __ptext36:
  5283                           	callstack 0
  5284  001F3E                     _I2C_Restart:
  5285                           	callstack 28
  5286  001F3E                     
  5287                           ;./I2C_Lib.h: 82:     SSPCON2bits.RSEN=1;
  5288  001F3E  82C5               	bsf	197,1,c	;volatile
  5289  001F40                     l88:
  5290  001F40  B2C5               	btfsc	197,1,c	;volatile
  5291  001F42  EFA5  F00F         	goto	u1601
  5292  001F46  EFA7  F00F         	goto	u1600
  5293  001F4A                     u1601:
  5294  001F4A  EFA0  F00F         	goto	l88
  5295  001F4E                     u1600:
  5296  001F4E  0012               	return		;funcret
  5297  001F50                     __end_of_I2C_Restart:
  5298                           	callstack 0
  5299                           
  5300 ;; *************** function _I2C_Stop *****************
  5301 ;; Defined at:
  5302 ;;		line 71 in file "./I2C_Lib.h"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;		None
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;		None
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  1    wreg      void 
  5309 ;; Registers used:
  5310 ;;		None
  5311 ;; Tracked objects:
  5312 ;;		On entry : 0/0
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5316 ;;      Params:         0       0       0       0       0       0       0       0       0
  5317 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5319 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5320 ;;Total ram usage:        0 bytes
  5321 ;; Hardware stack levels used: 1
  5322 ;; This function calls:
  5323 ;;		Nothing
  5324 ;; This function is called by:
  5325 ;;		_ConfiRegRTC
  5326 ;;		_getDataDs1307
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           	psect	text37
  5331  001E94                     __ptext37:
  5332                           	callstack 0
  5333  001E94                     _I2C_Stop:
  5334                           	callstack 29
  5335  001E94                     
  5336                           ;./I2C_Lib.h: 73:     SSPCON2bits.PEN=1;
  5337  001E94  84C5               	bsf	197,2,c	;volatile
  5338  001E96                     l79:
  5339  001E96  B4C5               	btfsc	197,2,c	;volatile
  5340  001E98  EF50  F00F         	goto	u1791
  5341  001E9C  EF52  F00F         	goto	u1790
  5342  001EA0                     u1791:
  5343  001EA0  EF4B  F00F         	goto	l79
  5344  001EA4                     u1790:
  5345  001EA4                     l82:
  5346  001EA4  A8C7               	btfss	199,4,c	;volatile
  5347  001EA6  EF57  F00F         	goto	u1801
  5348  001EAA  EF59  F00F         	goto	u1800
  5349  001EAE                     u1801:
  5350  001EAE  EF52  F00F         	goto	l82
  5351  001EB2                     u1800:
  5352  001EB2                     
  5353                           ;./I2C_Lib.h: 76:     SSPCON2bits.PEN=0;
  5354  001EB2  94C5               	bcf	197,2,c	;volatile
  5355  001EB4  0012               	return		;funcret
  5356  001EB6                     __end_of_I2C_Stop:
  5357                           	callstack 0
  5358                           
  5359 ;; *************** function _I2C_Start *****************
  5360 ;; Defined at:
  5361 ;;		line 49 in file "./I2C_Lib.h"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;		None
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;		None
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      void 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5375 ;;      Params:         0       0       0       0       0       0       0       0       0
  5376 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5377 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5378 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5379 ;;Total ram usage:        0 bytes
  5380 ;; Hardware stack levels used: 1
  5381 ;; Hardware stack levels required when called: 1
  5382 ;; This function calls:
  5383 ;;		_I2C_Idle
  5384 ;; This function is called by:
  5385 ;;		_ConfiRegRTC
  5386 ;;		_getDataDs1307
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text38
  5391  001EEE                     __ptext38:
  5392                           	callstack 0
  5393  001EEE                     _I2C_Start:
  5394                           	callstack 28
  5395  001EEE                     
  5396                           ;./I2C_Lib.h: 51:     I2C_Idle();
  5397  001EEE  EC37  F00F         	call	_I2C_Idle	;wreg free
  5398  001EF2                     
  5399                           ;./I2C_Lib.h: 52:     SEN=1;
  5400  001EF2  80C5               	bsf	4037,0,c	;volatile
  5401  001EF4                     l62:
  5402  001EF4  B0C5               	btfsc	197,0,c	;volatile
  5403  001EF6  EF7F  F00F         	goto	u1751
  5404  001EFA  EF81  F00F         	goto	u1750
  5405  001EFE                     u1751:
  5406  001EFE  EF7A  F00F         	goto	l62
  5407  001F02                     u1750:
  5408  001F02                     
  5409                           ;./I2C_Lib.h: 54:     if(SSPSTATbits.S){};
  5410  001F02  50C7               	movf	199,w,c	;volatile
  5411  001F04  0012               	return		;funcret
  5412  001F06                     __end_of_I2C_Start:
  5413                           	callstack 0
  5414                           
  5415 ;; *************** function _I2C_Idle *****************
  5416 ;; Defined at:
  5417 ;;		line 129 in file "./I2C_Lib.h"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;		None
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;		None
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  1    wreg      void 
  5424 ;; Registers used:
  5425 ;;		wreg, status,2, status,0
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5431 ;;      Params:         0       0       0       0       0       0       0       0       0
  5432 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5433 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5434 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5435 ;;Total ram usage:        1 bytes
  5436 ;; Hardware stack levels used: 1
  5437 ;; This function calls:
  5438 ;;		Nothing
  5439 ;; This function is called by:
  5440 ;;		_I2C_Start
  5441 ;;		_I2C_Write_Data
  5442 ;;		_I2C_Read_Slave
  5443 ;;		_I2C_Read_Data
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           	psect	text39
  5448  001E6E                     __ptext39:
  5449                           	callstack 0
  5450  001E6E                     _I2C_Idle:
  5451                           	callstack 28
  5452  001E6E                     l114:
  5453  001E6E  B4C7               	btfsc	199,2,c	;volatile
  5454  001E70  EF3C  F00F         	goto	u1581
  5455  001E74  EF3E  F00F         	goto	u1580
  5456  001E78                     u1581:
  5457  001E78  EF37  F00F         	goto	l114
  5458  001E7C                     u1580:
  5459  001E7C  CFC5 F001          	movff	4037,??_I2C_Idle	;volatile
  5460  001E80  0E1F               	movlw	31
  5461  001E82  1601               	andwf	??_I2C_Idle^0,f,c
  5462  001E84  A4D8               	btfss	status,2,c
  5463  001E86  EF47  F00F         	goto	u1591
  5464  001E8A  EF49  F00F         	goto	u1590
  5465  001E8E                     u1591:
  5466  001E8E  EF37  F00F         	goto	l114
  5467  001E92                     u1590:
  5468  001E92  0012               	return		;funcret
  5469  001E94                     __end_of_I2C_Idle:
  5470                           	callstack 0
  5471                           
  5472                           	psect	rparam
  5473  0000                     
  5474                           	psect	idloc
  5475                           
  5476                           ;Config register IDLOC0 @ 0x200000
  5477                           ;	unspecified, using default values
  5478  200000                     	org	2097152
  5479  200000  FF                 	db	255
  5480                           
  5481                           ;Config register IDLOC1 @ 0x200001
  5482                           ;	unspecified, using default values
  5483  200001                     	org	2097153
  5484  200001  FF                 	db	255
  5485                           
  5486                           ;Config register IDLOC2 @ 0x200002
  5487                           ;	unspecified, using default values
  5488  200002                     	org	2097154
  5489  200002  FF                 	db	255
  5490                           
  5491                           ;Config register IDLOC3 @ 0x200003
  5492                           ;	unspecified, using default values
  5493  200003                     	org	2097155
  5494  200003  FF                 	db	255
  5495                           
  5496                           ;Config register IDLOC4 @ 0x200004
  5497                           ;	unspecified, using default values
  5498  200004                     	org	2097156
  5499  200004  FF                 	db	255
  5500                           
  5501                           ;Config register IDLOC5 @ 0x200005
  5502                           ;	unspecified, using default values
  5503  200005                     	org	2097157
  5504  200005  FF                 	db	255
  5505                           
  5506                           ;Config register IDLOC6 @ 0x200006
  5507                           ;	unspecified, using default values
  5508  200006                     	org	2097158
  5509  200006  FF                 	db	255
  5510                           
  5511                           ;Config register IDLOC7 @ 0x200007
  5512                           ;	unspecified, using default values
  5513  200007                     	org	2097159
  5514  200007  FF                 	db	255
  5515                           
  5516                           	psect	config
  5517                           
  5518                           ;Config register CONFIG1L @ 0x300000
  5519                           ;	PLL Prescaler Selection bits
  5520                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
  5521                           ;	System Clock Postscaler Selection bits
  5522                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  5523                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5524                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  5525  300000                     	org	3145728
  5526  300000  04                 	db	4
  5527                           
  5528                           ;Config register CONFIG1H @ 0x300001
  5529                           ;	Oscillator Selection bits
  5530                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  5531                           ;	Fail-Safe Clock Monitor Enable bit
  5532                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5533                           ;	Internal/External Oscillator Switchover bit
  5534                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5535  300001                     	org	3145729
  5536  300001  0E                 	db	14
  5537                           
  5538                           ;Config register CONFIG2L @ 0x300002
  5539                           ;	Power-up Timer Enable bit
  5540                           ;	PWRT = OFF, PWRT disabled
  5541                           ;	Brown-out Reset Enable bits
  5542                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  5543                           ;	Brown-out Reset Voltage bits
  5544                           ;	BORV = 3, Minimum setting 2.05V
  5545                           ;	USB Voltage Regulator Enable bit
  5546                           ;	VREGEN = OFF, USB voltage regulator disabled
  5547  300002                     	org	3145730
  5548  300002  19                 	db	25
  5549                           
  5550                           ;Config register CONFIG2H @ 0x300003
  5551                           ;	Watchdog Timer Enable bit
  5552                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5553                           ;	Watchdog Timer Postscale Select bits
  5554                           ;	WDTPS = 32768, 1:32768
  5555  300003                     	org	3145731
  5556  300003  1E                 	db	30
  5557                           
  5558                           ; Padding undefined space
  5559  300004                     	org	3145732
  5560  300004  FF                 	db	255
  5561                           
  5562                           ;Config register CONFIG3H @ 0x300005
  5563                           ;	CCP2 MUX bit
  5564                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  5565                           ;	PORTB A/D Enable bit
  5566                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5567                           ;	Low-Power Timer 1 Oscillator Enable bit
  5568                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5569                           ;	MCLR Pin Enable bit
  5570                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5571  300005                     	org	3145733
  5572  300005  83                 	db	131
  5573                           
  5574                           ;Config register CONFIG4L @ 0x300006
  5575                           ;	Stack Full/Underflow Reset Enable bit
  5576                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5577                           ;	Single-Supply ICSP Enable bit
  5578                           ;	LVP = OFF, Single-Supply ICSP disabled
  5579                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5580                           ;	ICPRT = OFF, ICPORT disabled
  5581                           ;	Extended Instruction Set Enable bit
  5582                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5583                           ;	Background Debugger Enable bit
  5584                           ;	DEBUG = 0x1, unprogrammed default
  5585  300006                     	org	3145734
  5586  300006  80                 	db	128
  5587                           
  5588                           ; Padding undefined space
  5589  300007                     	org	3145735
  5590  300007  FF                 	db	255
  5591                           
  5592                           ;Config register CONFIG5L @ 0x300008
  5593                           ;	Code Protection bit
  5594                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  5595                           ;	Code Protection bit
  5596                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  5597                           ;	Code Protection bit
  5598                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  5599                           ;	Code Protection bit
  5600                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  5601  300008                     	org	3145736
  5602  300008  0F                 	db	15
  5603                           
  5604                           ;Config register CONFIG5H @ 0x300009
  5605                           ;	Boot Block Code Protection bit
  5606                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  5607                           ;	Data EEPROM Code Protection bit
  5608                           ;	CPD = OFF, Data EEPROM is not code-protected
  5609  300009                     	org	3145737
  5610  300009  C0                 	db	192
  5611                           
  5612                           ;Config register CONFIG6L @ 0x30000A
  5613                           ;	Write Protection bit
  5614                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  5615                           ;	Write Protection bit
  5616                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  5617                           ;	Write Protection bit
  5618                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  5619                           ;	Write Protection bit
  5620                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  5621  30000A                     	org	3145738
  5622  30000A  0F                 	db	15
  5623                           
  5624                           ;Config register CONFIG6H @ 0x30000B
  5625                           ;	Configuration Register Write Protection bit
  5626                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5627                           ;	Boot Block Write Protection bit
  5628                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5629                           ;	Data EEPROM Write Protection bit
  5630                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5631  30000B                     	org	3145739
  5632  30000B  E0                 	db	224
  5633                           
  5634                           ;Config register CONFIG7L @ 0x30000C
  5635                           ;	Table Read Protection bit
  5636                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5637                           ;	Table Read Protection bit
  5638                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5639                           ;	Table Read Protection bit
  5640                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5641                           ;	Table Read Protection bit
  5642                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5643  30000C                     	org	3145740
  5644  30000C  0F                 	db	15
  5645                           
  5646                           ;Config register CONFIG7H @ 0x30000D
  5647                           ;	Boot Block Table Read Protection bit
  5648                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5649  30000D                     	org	3145741
  5650  30000D  40                 	db	64
  5651                           tosu	equ	0xFFF
  5652                           tosh	equ	0xFFE
  5653                           tosl	equ	0xFFD
  5654                           stkptr	equ	0xFFC
  5655                           pclatu	equ	0xFFB
  5656                           pclath	equ	0xFFA
  5657                           pcl	equ	0xFF9
  5658                           tblptru	equ	0xFF8
  5659                           tblptrh	equ	0xFF7
  5660                           tblptrl	equ	0xFF6
  5661                           tablat	equ	0xFF5
  5662                           prodh	equ	0xFF4
  5663                           prodl	equ	0xFF3
  5664                           indf0	equ	0xFEF
  5665                           postinc0	equ	0xFEE
  5666                           postdec0	equ	0xFED
  5667                           preinc0	equ	0xFEC
  5668                           plusw0	equ	0xFEB
  5669                           fsr0h	equ	0xFEA
  5670                           fsr0l	equ	0xFE9
  5671                           wreg	equ	0xFE8
  5672                           indf1	equ	0xFE7
  5673                           postinc1	equ	0xFE6
  5674                           postdec1	equ	0xFE5
  5675                           preinc1	equ	0xFE4
  5676                           plusw1	equ	0xFE3
  5677                           fsr1h	equ	0xFE2
  5678                           fsr1l	equ	0xFE1
  5679                           bsr	equ	0xFE0
  5680                           indf2	equ	0xFDF
  5681                           postinc2	equ	0xFDE
  5682                           postdec2	equ	0xFDD
  5683                           preinc2	equ	0xFDC
  5684                           plusw2	equ	0xFDB
  5685                           fsr2h	equ	0xFDA
  5686                           fsr2l	equ	0xFD9
  5687                           status	equ	0xFD8

Data Sizes:
    Strings     66
    Constant    0
    Data        27
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160     23      89
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_6(CODE[22]), STR_5(CODE[23]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_6(CODE[22]), STR_5(CODE[23]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 23
		 -> STR_6(CODE[22]), STR_5(CODE[23]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_6(CODE[22]), STR_5(CODE[23]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> aux(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S886$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S886$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Out@text	PTR unsigned char  size(2) Largest target is 20
		 -> aux(BANK0[20]), STR_4(CODE[8]), STR_3(CODE[7]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _getDataDs1307->_I2C_Read_Slave
    _getDataDs1307->_I2C_Write_Data
    _getDataDs1307->_bcd_bin_convert
    _I2C_Read_Slave->_I2C_Idle
    _Lcd_Init->_Lcd_Cmd
    _I2C_Init_Master->___lldiv
    _ConfiRegRTC->_bin_bcd_convert
    _bin_bcd_convert->___awdiv
    _Lcd_XY->_Lcd_Cmd
    _Lcd_Cmd->_enviar_dato
    _Lcd_Out->_Lcd_Char
    _Lcd_Char->_enviar_dato
    _I2C_Write_Data->_I2C_Idle
    _I2C_Start->_I2C_Idle

Critical Paths under _main in BANK0

    _readDs1307_sprintf->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   16873
                                             91 COMRAM     2     2      0
                        _ConfiRegRTC
                    _I2C_Init_Master
                            _Lcd_Cmd
                           _Lcd_Init
                      _getDataDs1307
                 _readDs1307_sprintf
 ---------------------------------------------------------------------------------
 (1) _readDs1307_sprintf                                   0     0      0    9963
                            _Lcd_Out
                             _Lcd_XY
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             25    15     10    8348
                                              0 BANK0     23    13     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    7843
                                             83 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6    7470
                                             63 COMRAM    20    14      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                10     8      2    1172
                                              7 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _getDataDs1307                                        2     2      0     202
                                              2 COMRAM     2     2      0
                          _I2C_N_ACK
                     _I2C_Read_Slave
                        _I2C_Restart
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Data
                    _bcd_bin_convert
 ---------------------------------------------------------------------------------
 (2) _bcd_bin_convert                                      2     2      0      67
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Slave                                       1     1      0      23
                                              1 COMRAM     1     1      0
                           _I2C_Idle
                      _I2C_Reception
 ---------------------------------------------------------------------------------
 (3) _I2C_Reception                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_N_ACK                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     374
                                              4 COMRAM     1     1      0
                            _Lcd_Cmd
                        _enviar_dato
 ---------------------------------------------------------------------------------
 (1) _I2C_Init_Master                                      9     4      5     510
                                             13 COMRAM     9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _ConfiRegRTC                                          4     2      2    5626
                                             12 COMRAM     4     2      2
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Data
                            _Lcd_Out
                             _Lcd_XY
                    _bin_bcd_convert
 ---------------------------------------------------------------------------------
 (2) _bin_bcd_convert                                      4     4      0    2791
                                              8 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1360
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_XY                                               4     3      1     916
                                              4 COMRAM     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              1     1      0     198
                                              3 COMRAM     1     1      0
                        _enviar_dato
 ---------------------------------------------------------------------------------
 (2) _Lcd_Out                                              2     0      2     699
                                              4 COMRAM     2     0      2
                           _Lcd_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Char                                             1     1      0     198
                                              3 COMRAM     1     1      0
                        _enviar_dato
 ---------------------------------------------------------------------------------
 (4) _enviar_dato                                          3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Write_Data                                       1     1      0      44
                                              1 COMRAM     1     1      0
                           _I2C_Idle
                        _I2C_Restart
 ---------------------------------------------------------------------------------
 (3) _I2C_Restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_Idle                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiRegRTC
     _I2C_Start
       _I2C_Idle
     _I2C_Stop
     _I2C_Write_Data
       _I2C_Idle
       _I2C_Restart
     _Lcd_Out
       _Lcd_Char
         _enviar_dato
     _Lcd_XY
       _Lcd_Cmd
         _enviar_dato
     _bin_bcd_convert
       ___awdiv
       ___awmod
   _I2C_Init_Master
     ___lldiv
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
     _enviar_dato
   _getDataDs1307
     _I2C_N_ACK
     _I2C_Read_Slave
       _I2C_Idle
       _I2C_Reception
     _I2C_Restart
     _I2C_Start
     _I2C_Stop
     _I2C_Write_Data
     _bcd_bin_convert
   _readDs1307_sprintf
     _Lcd_Out
     _Lcd_XY
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
           _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     17      59       5       55.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITBIGSFRlll        2C      0       0      27        0.0%
BITBIGSFRhhhl       28      0       0      21        0.0%
BITBIGSFRlhh        22      0       0      23        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRlhlh        7      0       0      24        0.0%
BITBIGSFRllh         6      0       0      26        0.0%
BITBIGSFRhl          3      0       0      22        0.0%
BITBIGSFRlhll        1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B8      28        0.0%
DATA                 0      0      B8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Mar 24 22:39:41 2022

                _SSPSTATbits 000FC7                           l62 1EF4                           l64 1F02  
                         l72 1D06                           l66 1F04                           l82 1EA4  
                         l91 1F4E                           l59 1AA0                           l84 1EB2  
                         l76 1D2E                           l85 1EB4                           l69 1CF8  
                         l94 1F2E                           l79 1E96                           l88 1F40  
                         l97 1F3C                 ___awdiv@sign 0006          ___wmul@multiplicand 0003  
                        l100 1F2A                          l103 1F0A                          l114 1E6E  
                        l106 1F18                          l117 1E92                          l205 1E6C  
                        l142 1F5C                          l136 13E0                          l232 1922  
                        l145 1F6A                          l154 1A2C                          l163 1BC8  
                        l139 17DE                          l332 115E                          l182 1B06  
                        l239 1932                          l319 0FFA                          l176 1DA2  
                        l185 1ED0                          l194 19B0                          l436 1660  
                        l188 1E46                          l449 188E                          l914 16A6  
                        l917 16E8                          l925 0C36                          l919 1722  
                        l927 0C3E                          l945 0E72                          l883 1C1A  
                        l972 0B94                          l983 1CE8                          l959 0936  
                        l986 1CF0                          l978 1B60                          l979 1B68  
                        _GIE 007F97                          _SEN 007E28                          u990 14E6  
                        u991 14E2                          _abs 1CB2                          _aux 008E  
                        _pad 1662                 ___awmod@sign 0006                          wreg 000FE8  
 __end_of_readDs1307_sprintf 19B2                         l1011 12B4                         l1014 1DDA  
                       l1022 1C6C                         l1008 12AC                         l2000 0EDC  
                       l2010 0F30                         l2002 0EE8                         ?_abs 0013  
                       l2100 1C34                         l2020 0FA4                         l2012 0F42  
                       l2004 0F06                         l1037 159C                         l1045 1CB0  
                       l2102 1C62                         l2014 0F70                         l2006 0F0E  
                       l2022 0FAA                         l2030 0FFC                         l1054 1E10  
                       l2110 0BB6                         l2104 1C66                         l2024 0FBA  
                       l2016 0F90                         l2008 0F22                         l2040 1040  
                       l2032 1000                         l1048 1F6C                         l2120 0C2A  
                       l2112 0BDE                         l2210 1310                         l2202 12B8  
                       l2026 0FDA                         l2018 0F92                         l2050 10A8  
                       l2042 1060                         l2034 100E                         l2130 0C74  
                       l2122 0C46                         l2114 0BFE                         l2220 135C  
                       l2212 1336                         l2204 12CA                         l2060 111E  
                       l2052 10D6                         l2044 107E                         l2036 102E  
                       l2140 0D10                         l2132 0C7C                         l2124 0C58  
                       l2116 0C0E                         l2108 0B96                         l2300 0A2A  
                       l2230 13CE                         l2222 1370                         l2214 1350  
                       l2206 12D2                         l2062 113E                         l2054 10F6  
                       l2046 1086                         l2038 1032                         l2070 1684  
                       l2150 0DE0                         l2134 0C82                         l2142 0D74  
                       l2126 0C66                         l2118 0C10                         l2310 0AF2  
                       l2302 0A4E                         l2240 13DE                         l2232 13D6  
                       l2224 138A                         l2216 1352                         l2208 12EC  
                       l2400 1650                         l2056 1108                         l2048 109A  
                       l2080 16CA                         l2072 1692                         l2160 0E26  
                       l2144 0D8E                         l2152 0DEE                         l2136 0D04  
                       l2128 0C6C                         l2312 0B16                         l2320 0B44  
                       l2304 0A72                         l2234 13D8                         l2226 13AA  
                       l2218 135A                         l2402 1658                         l2410 17F2  
                       l2170 1160                         l2058 110E                         l2090 1CCC  
                       l2082 16F6                         l2074 169E                         l2066 1662  
                       l2162 0E32                         l2154 0E00                         l2146 0DAC  
                       l2138 0D0A                         l2322 0B52                         l2314 0B24  
                       l2306 0ABA                         l2250 0888                         l2340 1E7C  
                       l2236 13DA                         l2228 13CC                         l2420 1826  
                       l2412 17FA                         l2092 1DA4                         l2180 11CE  
                       l2172 1174                         l2084 170A                         l2076 16B2  
                       l2068 1670                         l2164 0E3A                         l2156 0E0E  
                       l2148 0DC6                         l2316 0B38                         l2252 088C  
                       l2244 0844                         l2342 1F3E                         l2238 13DC  
                       l2510 1B98                         l2350 1F5A                         l2430 1862  
                       l2422 182E                         l2414 17FE                         l2406 17E0  
                       l2182 11D6                         l2078 16C6                         l2158 0E14  
                       l2166 0E4A                         l2270 08BE                         l2262 08B2  
                       l2254 0898                         l2246 0868                         l2326 0B5E  
                       l2504 1B6A                         l2432 1868                         l2424 1836  
                       l2416 180C                         l2408 17E4                         l2512 1D6C  
                       l2600 17D6                         l2344 1F2C                         l2520 1ECE  
                       l2096 1C1C                         l2192 1248                         l2184 11DE  
                       l2176 1178                         l2088 1CB2                         l2328 0B82  
                       l2256 089A                         l2280 0924                         l2248 0876  
                       l2338 1E6E                         l2450 1EEE                         l2354 1F60  
                       l2506 1B70                         l2346 1F52                         l2370 15BC  
                       l2362 159E                         l2426 1844                         l2434 186E  
                       l2418 1814                         l2514 1DA0                         l2610 1AC8  
                       l2098 1C20                         l2194 127E                         l2186 1212  
                       l2178 1194                         l2290 09B0                         l2282 0944  
                       l2274 08C4                         l2266 08B8                         l2258 08AC  
                       l2442 1B08                         l2530 1BEC                         l2452 1EF2  
                       l2460 1D26                         l2356 1F62                         l2508 1B94  
                       l2348 1F54                         l2380 15F0                         l2372 15CA  
                       l2364 15A2                         l2436 187E                         l2428 185A  
                       l2620 1AF0                         l2612 1AD4                         l2604 1AA4  
                       l2540 18B6                         l2196 1290                         l2292 09BE  
                       l2284 0946                         l2444 1B10                         l2532 1C08  
                       l2524 1BCA                         l2462 1D2A                         l2454 1CF4  
                       l2358 1F68                         l2390 162A                         l2382 15F8  
                       l2374 15D2                         l2366 15B0                         l2438 1886  
                       l2622 1AF6                         l2614 1AD6                         l2606 1AAC  
                       l2550 1900                         l2542 18BE                         l2470 1F22  
                       l2518 1EB8                         l2630 1E24                         l2294 09DE  
                       l2286 096A                         l2278 08D0                         l2446 1B1E  
                       l2526 1BDC                         l2464 1E94                         l2456 1D14  
                       l2480 19B4                         l2392 1632                         l2384 1600  
                       l2376 15D6                         l2368 15B8                         l2624 1AFC  
                       l2616 1AE0                         l2608 1ABE                         l2552 1910  
                       l2544 18CA                         l2536 1890                         l2560 1A36  
                       l2472 1F26                         l2640 1E3C                         l2632 1E28  
                       l2288 09A0                         l2448 1B44                         l2528 1BE4  
                       l2458 1D18                         l2482 19B8                         l2394 1634  
                       l2386 160E                         l2378 15DE                         l2626 1B02  
                       l2618 1AEC                         l2554 1912                         l2546 18D8  
                       l2538 18A0                         l2562 1A3A                         l2570 1724  
                       l2474 1F28                         l2466 1F1A                         l2642 1E44  
                       l2634 1E2E                         l2298 09EC                         l2650 1966  
                       l2730 13F0                         l2484 19C4                         l2492 19E8  
                       l2396 163A                         l2388 1614                         l2556 191C  
                       l2548 18E2                         l2564 1A84                         l2580 1766  
                       l2572 1732                         l2468 1F1E                         l2636 1E34  
                       l2628 1E14                         l2652 1972                         l2740 1440  
                       l2732 1408                         l2724 13E2                         l2486 19D0  
                       l2494 1A22                         l2398 1640                         l2566 1A88  
                       l2558 1A2E                         l2590 17A6                         l2582 177C  
                       l2574 1742                         l2478 1F06                         l2638 1E38  
                       l1950 14E6                         l2654 197C                         l2646 1934  
                       l2750 147E                         l2742 144E                         l2734 1416  
                       l2726 13E6                         l2496 1A2A                         l2488 19DC  
                       l2568 1A98                         l2592 17AC                         l2584 1782  
                       l2576 1748                         l1952 14F8                         l2824 08F6  
                       l2648 193E                         l2760 14B0                         l2752 1488  
                       l2744 145C                         l2736 1424                         l2728 13EA  
                       l2594 17BA                         l2586 1790                         l2578 175E  
                       l2826 11FC                         l1954 1502                         l1962 1C6E  
                       l1970 1DDC                         l2762 14B4                         l2754 1492  
                       l2746 146A                         l2738 1432                         l2828 19FC  
                       l2596 17C2                         l2588 1798                         l1980 1E48  
                       l1956 1520                         l1948 14D4                         l1964 1C7A  
                       l1972 1DE8                         l2756 149C                         l2748 1474  
                       l2598 17D0                         l1982 1E64                         l1990 0E86  
                       l1958 1556                         l1966 1C8C                         l1974 1DEC  
                       l2758 14A6                         ?_pad 0011                         l1992 0EA6  
                       l1968 1C90                         l1976 1E04                         l1994 0EAA  
                       l1986 0E74                         l1996 0EB8                         l1988 0E78  
                       l1998 0ED8                         STR_1 083D                         STR_2 0840  
                       STR_3 0836                         STR_4 082E                         STR_5 0801  
                       STR_6 0818                         u1000 14F8                         u1001 14F4  
                       u1010 1520                         u1011 151C                         u1100 0F70  
                       u1020 1556                         u1101 0F6C                         u1021 1552  
                       u1110 0FBA                         u1030 1CB0                         u1111 0FB6  
                       u1031 1CAC                         u1120 100E                         u1040 1E04  
                       u1200 16E8                         u1121 100A                         u1041 1E00  
                       u1201 16E4                         u1050 0E86                         u1130 1040  
                       u1210 16F6                         u1051 0E82                         u1131 103C  
                       u1211 16F2                         u1060 0EB8                         u1140 107E  
                       u1220 1CCC                         u1300 0C0E                         u1061 0EB4  
                       u1141 107A                         u1221 1CC8                         u1301 0C0A  
                       u1230 1DD4                         u1150 10A8                         u1310 0C2A  
                       u2007 1776                         u1231 1DCE                         u1071 0EE2  
                       u1151 10A4                         u1311 0C26                         u1240 1DD6  
                       u1080 0F06                         u1160 10D6                         u1400 0E0E  
                       u1320 0C58                         u2017 1784                         u1081 0F02  
                       u1161 10D2                         u1401 0E0A                         u1321 0C54  
                       u1250 1C34                         u1090 0F30                         u1170 111E  
                       u1410 0E26                         u1330 0C66                         u2107 1354  
                       u2027 1792                         u1251 1C30                         u1091 0F2C  
                       u1171 111A                         u1411 0E22                         u1331 0C62  
                       u1260 1C62                         u1420 1194                         u1180 1670  
                       u1340 0D8E                         u1500 0936                         u2117 13D0  
                       u2037 17A0                         u1261 1C5E                         u1421 1190  
                       u1181 166C                         u1341 0D8A                         u1501 0932  
                       u1430 11CA                         u1190 1692                         u1350 0DAC  
                       u1270 0BC6                         u1510 0944                         u2047 17AE  
                       u1431 11C6                         u1191 168E                         u1351 0DA8  
                       u1271 0BC0                         u1511 0940                         u1600 1F4E  
                       u1440 127E                         u1360 0DC6                         u1280 0BC8  
                       u1520 096A                         u1601 1F4A                         u2057 17BC  
                       u1441 127A                         u1361 0DC2                         u1521 0966  
                       u1610 1F3C                         u1450 1290                         u1370 0DE0  
                       u1290 0BDE                         u1530 09B0                         u2067 17CA  
                       u1611 1F38                         u1451 128C                         u1371 0DDC  
                       u1291 0BDA                         u1531 09AC                         u1620 15B0  
                       u1700 1826                         u1380 0DEE                         u1540 0A2A  
                       u1621 15AC                         u1701 1822                         u2077 17D8  
                       u1381 0DEA                         u1541 0A26                         u1630 15CA  
                       u1710 1844                         u1390 0E00                         u1550 0A4E  
                       u2087 1A24                         u1631 15C6                         u1711 1840  
                       u1391 0DFC                         u1551 0A4A                         u1800 1EB2  
                       u1640 15F0                         u1720 185A                         u1560 0A72  
                       u1801 1EAE                         u1465 12F4                         u2097 12CC  
                       u1641 15EC                         u1721 1856                         u1561 0A6E  
                       u1650 160E                         u1730 187E                         u1810 1F18  
                       u1570 0B16                         u1490 0868                         u1475 1318  
                       u1651 160A                         u1731 187A                         u1811 1F14  
                       u1571 0B12                         u1491 0864                         u1580 1E7C  
                       u1820 1B90                         u1660 162A                         u1900 1ABE  
                       u1740 1B60                         u1581 1E78                         u1485 133E  
                       u1661 1626                         u1901 1ABA                         u1741 1B5C  
                       u1590 1E92                         u1750 1F02                         u1830 1BB8  
                       u1670 1650                         u1591 1E8E                         u1751 1EFE  
                       u1671 164C                         u1760 1D06                         u1840 1BC8  
                       u1680 17F2                         u1761 1D02                         u1841 1BC4  
                       u1681 17EE                         u1770 1D14                         u1690 180C  
                       u1850 18B6                         u1771 1D10                         u1827 1B86  
                       u1691 1808                         u1851 18B2                         u1780 1D26  
                       u1860 18D8                         u1781 1D22                         u1837 1BAE  
                       u1861 18D4                         u1790 1EA4                         u1870 1900  
                       u1791 1EA0                         u1871 18FC                         u1890 1A98  
                       u1891 1A94                         _PEIE 007F96                         u1885 1A5C  
                       u1957 14BE                         u1967 1738                         u1977 174E  
                       u1987 1760                         _RCEN 007E2B                         u1997 176E  
                       abs@a 0013                         _data 0087                         _dbuf 0067  
                       _atoi 1160                         _main 13E2                         _dtoa 0B96  
           __end_of_I2C_Idle 1E94                         _prec 0064                         _nout 0060  
                       pad@i 0018                         pad@p 0015                         fsr1h 000FE2  
                       fsr2h 000FDA                         indf1 000FE7                         indf2 000FDF  
                       fsr1l 000FE1                         pad@w 001A                         fsr2l 000FD9  
           __end_of_I2C_Stop 1EB6                         prodh 000FF4                         prodl 000FF3  
               ?_enviar_dato 0001          __end_of_ConfiRegRTC 1B08                         start 0000  
           ?_I2C_Init_Master 000E              __end_of_Lcd_Cmd 1F5E              __end_of_Lcd_Out 1BCA  
               ___param_bank 000000                        ??_abs 0015                        ??_pad 0017  
           ?_bcd_bin_convert 0001              __end_of___aodiv 0FFC                        ?_atoi 0008  
                      ?_main 0001                        ?_dtoa 001C              __end_of___aomod 1160  
                      _ACKEN 007E2C                        _ACKDT 007E2D              __end_of___awdiv 1662  
            __end_of___awmod 1890              __end_of___lldiv 1934              ___awdiv@divisor 0003  
            ___awdiv@counter 0005                 vfpfcnvrt@fmt 0042                        _TRISB 000F93  
                      _SSPIE 007CEB                        _SSPIF 007CF3            __end_of_I2C_N_ACK 1F1A  
                      _flags 005E                        _fputc 14D4                        _fputs 1C6E  
            __end_of_isdigit 1DDC                        atoi@n 0010                        pad@fp 0011  
                      atoi@s 0008                        _width 0062                        _putch 1F6C  
                      dtoa@d 001E                        dtoa@i 003E                        dtoa@n 0036  
                      dtoa@p 0030                        dtoa@s 0034                        dtoa@w 0032  
            __end_of_isspace 1C6E            __end_of_I2C_Start 1F06                        tablat 000FF5  
                      status 000FD8              __end_of_sprintf 1C1C             __end_of_Lcd_Char 1F6C  
           __end_of_Lcd_Init 17E0              __initialization 1D30                 __end_of_atoi 12B6  
               __end_of_main 14D4                 __end_of_dtoa 0E74                       ??_atoi 000A  
                     ??_main 005C                       ??_dtoa 0026                __activetblptr 000002  
      __end_of_getDataDs1307 1E48                       _ADCON1 000FC1                       ?_fputc 0001  
                     ?_fputs 000A             ___awdiv@dividend 0001                       ?_putch 0001  
                _ConfiRegRTC 1AA2  I2C_Init_Master@speed_master 000E                    ??_Lcd_Cmd 0004  
              vfpfcnvrt@done 0052                    ??_Lcd_Out 0007                       _SSPADD 000FC8  
                     _TRISB0 007C98                       _TRISB1 007C99                       _SSPBUF 000FC9  
                     _Lcd_XY 19B2                 vfprintf@cfmt 005A                    ??___aodiv 0011  
                  ??___aomod 0011                       ___wmul 1E48                    ??___awdiv 0005  
                  ??___awmod 0005                    ??___lldiv 0009                       clear_0 1D56  
           ___awdiv@quotient 0007              ___awmod@divisor 0003                _I2C_Reception 1F2C  
                     isa$std 000001              ___awmod@counter 0005                       pad@buf 0013  
                     dtoa@fp 001C                       _strlen 1DDC                       fputc@c 0001  
                  ?_I2C_Idle 0001                       fputs@c 000E                       fputs@i 000F  
                     fputs@s 000A                    ??_isdigit 0003                    ?_I2C_Stop 0001  
            _bin_bcd_convert 1D6A                 __mediumconst 0000                    ??_isspace 0003  
             enviar_dato@cmd 0003                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                       putch@c 0001             __end_of_vfprintf 1B6A  
                  ??_sprintf 005C                   __accesstop 0060      __end_of__initialization 1D60  
              ___rparam_used 000001               __pcstackCOMRAM 0001                 __pidataBANK0 1ED2  
              __end_of_fputc 159E                __end_of_fputs 1CB2                __end_of_putch 1F6E  
             ?_I2C_Reception 0001                   ??_I2C_Idle 0001                   ??_I2C_Stop 0001  
                  ?_Lcd_Char 0001                    ?_Lcd_Init 0001                      ??_fputc 0005  
                    ??_fputs 000E                      ??_putch 0001                   __pbssBANK0 0060  
                    ?_Lcd_XY 0005           _readDs1307_sprintf 1934                      ?___wmul 0001  
        ?_readDs1307_sprintf 0001      __end_of_bin_bcd_convert 1DA4                      _ACKSTAT 007E2E  
                    ?_strlen 0001                ??_I2C_Restart 0001                      Lcd_XY@x 0005  
                    Lcd_XY@y 0008               ConfiRegRTC@dir 000F                   ??_Lcd_Char 0004  
             ConfiRegRTC@reg 000E                   ??_Lcd_Init 0005                      _SSPCON1 000FC6  
                    _SSPCON2 000FC5                      _SSPSTAT 000FC7         ??_readDs1307_sprintf 005C  
                  _I2C_N_ACK 1F06                      _Lcd_Cmd 1F50                      _Lcd_Out 1B6A  
                  _I2C_Start 1EEE                      __Hparam 0000                      __Lparam 0000  
            ??_I2C_Reception 0001                      ___aodiv 0E74                      ___aomod 0FFC  
                    ___awdiv 159E                      ___awmod 17E0                      ___lldiv 1890  
             _I2C_Read_Slave 1F1A                    ?_vfprintf 0054                 __psmallconst 0800  
              Lcd_Char@letra 0004                      __pcinit 1D30                      __ramtop 0800  
                    __ptext0 13E2                      __ptext1 1934                      __ptext2 1BCA  
                    __ptext3 1B08                      __ptext4 0844                      __ptext5 0B96  
                    __ptext6 1662                      __ptext7 1DDC                      __ptext8 1C6E  
                    __ptext9 14D4                      _isdigit 1DA4             ___awmod@dividend 0001  
                    _isspace 1C1C                      atoi@neg 000E                      _sprintf 1BCA  
        __end_of_I2C_Restart 1F50                 ?_ConfiRegRTC 000D         end_of_initialization 1D60  
                 ?_I2C_N_ACK 0001                      fputc@fp 0003                __Lmediumconst 0000  
                    fputs@fp 000C                   ?_I2C_Start 0001              ___lldiv@divisor 0005  
            ___lldiv@counter 000D            __end_of_vfpfcnvrt 0B96       __end_of_I2C_Read_Slave 1F2C  
                    postdec1 000FE5                      postdec2 000FDD                      postinc0 000FEE  
                    postinc1 000FE6                      postinc2 000FDE                   ??_vfprintf 005A  
                    strlen@a 0003             ?_bin_bcd_convert 0001                      strlen@s 0001  
                  _TRISDbits 000F95               __end_of_Lcd_XY 1A2E              ?_I2C_Read_Slave 0001  
             _I2C_Write_Data 1CF2                  vfpfcnvrt@ap 0044                  vfpfcnvrt@fp 0040  
                vfpfcnvrt@ll 004A               __end_of___wmul 1E6E                  _I2C_Restart 1F3E  
             __end_of_strlen 1E12          start_initialization 1D30            ??_I2C_Init_Master 0013  
                __end_of_abs 1CF2                  __end_of_pad 1724                  ??_I2C_N_ACK 0001  
          ??_bcd_bin_convert 0001                  ??_I2C_Start 0002                ??_enviar_dato 0001  
                   ??_Lcd_XY 0006       __end_of_I2C_Write_Data 1D30                  vfprintf@fmt 0056  
        bin_bcd_convert@data 000B          bin_bcd_convert@dato 000C                     ??___wmul 0005  
                __pdataBANK0 0087                     ??_strlen 0003                  __pbssCOMRAM 005E  
              __pcstackBANK0 00A2             ___aodiv@dividend 0001                _getDataDs1307 1E12  
                   ?_Lcd_Cmd 0001                     ?_Lcd_Out 0005              ?_I2C_Write_Data 0001  
                   ?___aodiv 0001                     ?___aomod 0001                     ?___awdiv 0001  
           ___aodiv@quotient 0013                     ?___awmod 0001                     ?___lldiv 0001  
        __end_of_enviar_dato 13E2            getDataDs1307@data 0004            getDataDs1307@dato 0003  
                __smallconst 0800                     _I2C_Idle 1E6E                     ?_isdigit 0001  
                   _I2C_Stop 1E94                     ?_isspace 0001               ?_getDataDs1307 0001  
                   ?_sprintf 00A2               ___wmul@product 0005                     _LATDbits 000F8C  
            ConfiRegRTC@data 0010              ConfiRegRTC@dato 000D        __end_of_I2C_Reception 1F3E  
                  _vfpfcnvrt 0844    I2C_Init_Master@interrupt_ 0012            ___wmul@multiplier 0001  
         I2C_Read_Slave@dato 0002                 _isspace$1027 0007                     _Lcd_Char 1F5E  
                   _Lcd_Init 1724                    copy_data0 1D44             ??_I2C_Read_Slave 0002  
                _enviar_dato 12B6                     __Hrparam 0000                 _registrosRTC 0066  
                 vfprintf@ap 0058                     __Lrparam 0000                   vfprintf@fp 0054  
            _I2C_Init_Master 1A2E                   ?_vfpfcnvrt 0040              ___aodiv@divisor 0009  
            ___aodiv@counter 0011                 ?_I2C_Restart 0001              ??_getDataDs1307 0003  
                 sprintf@fmt 00A4              _bcd_bin_convert 1EB6                     _dtoa$978 002E  
                   __ptext10 1F6C                     __ptext11 1CB2                     __ptext20 1F1A  
                   __ptext12 0FFC                     __ptext21 1F2C                     __ptext13 0E74  
                   __ptext30 19B2                     __ptext22 1F06                     __ptext14 1160  
                   __ptext31 1F50                     __ptext23 1724                     __ptext15 1C1C  
                   __ptext32 1B6A                     __ptext24 1A2E                     __ptext16 1DA4  
                   __ptext33 1F5E                     __ptext25 1890                     __ptext17 1E48  
                   __ptext34 12B6                     __ptext26 1AA2                     __ptext18 1E12  
                   __ptext35 1CF2                     __ptext27 1D6A                     __ptext19 1EB6  
                   __ptext36 1F3E                     __ptext28 17E0                     __ptext37 1E94  
                   __ptext29 159E                     __ptext38 1EEE                     __ptext39 1E6E  
                   isa$xinst 000000                     _vfprintf 1B08             ___aomod@dividend 0001  
                Lcd_Out@text 0005                     isdigit@c 0001                    sprintf@ap 00AC  
        bcd_bin_convert@dato 0002                     isspace@c 0001             ___lldiv@dividend 0001  
           ??_I2C_Write_Data 0002      __end_of_I2C_Init_Master 1AA2                   Lcd_Cmd@cmd 0004  
            ___aomod@divisor 0009                  ??_vfpfcnvrt 0046              ___aomod@counter 0011  
    __end_of_bcd_bin_convert 1ED2                     sprintf@f 00AE                     sprintf@s 00A2  
           ___lldiv@quotient 0009                  _SSPCON2bits 000FC5                ??_ConfiRegRTC 000F  
               ___aodiv@sign 0012            ??_bin_bcd_convert 0009           I2C_Write_Data@dato 0002  
               ___aomod@sign 0012  
