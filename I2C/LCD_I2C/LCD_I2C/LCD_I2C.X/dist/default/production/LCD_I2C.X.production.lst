

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jun 08 19:52:00 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21  0000                     
    22                           ; Version 2.10
    23                           ; Generated 31/07/2019 GMT
    24                           ; 
    25                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     _SSPCON2	set	4037
    57  0000                     _SSPBUF	set	4041
    58  0000                     _SSPSTATbits	set	4039
    59  0000                     _SSPCON2bits	set	4037
    60  0000                     _SSPSTAT	set	4039
    61  0000                     _SSPADD	set	4040
    62  0000                     _SSPCON1	set	4038
    63  0000                     _TRISB	set	3987
    64  0000                     _ADCON1	set	4033
    65  0000                     _ACKEN	set	32300
    66  0000                     _ACKDT	set	32301
    67  0000                     _RCEN	set	32299
    68  0000                     _SEN	set	32296
    69  0000                     _SSPIF	set	31987
    70                           
    71                           	psect	smallconst
    72  000800                     __psmallconst:
    73                           	opt callstack 0
    74  000800  00                 	db	0
    75  000801                     STR_2:
    76  000801  50                 	db	80	;'P'
    77  000802  49                 	db	73	;'I'
    78  000803  43                 	db	67	;'C'
    79  000804  31                 	db	49	;'1'
    80  000805  38                 	db	56	;'8'
    81  000806  46                 	db	70	;'F'
    82  000807  34                 	db	52	;'4'
    83  000808  35                 	db	53	;'5'
    84  000809  35                 	db	53	;'5'
    85  00080A  30                 	db	48	;'0'
    86  00080B  00                 	db	0
    87  00080C                     STR_1:
    88  00080C  48                 	db	72	;'H'
    89  00080D  4F                 	db	79	;'O'
    90  00080E  4C                 	db	76	;'L'
    91  00080F  41                 	db	65	;'A'
    92  000810  00                 	db	0
    93                           
    94                           ; #config settings
    95  000811  00                 	db	0	; dummy byte at the end
    96  0000                     
    97                           	psect	cinit
    98  000AC0                     __pcinit:
    99                           	opt callstack 0
   100  000AC0                     start_initialization:
   101                           	opt callstack 0
   102  000AC0                     __initialization:
   103                           	opt callstack 0
   104  000AC0                     end_of_initialization:
   105                           	opt callstack 0
   106  000AC0                     __end_of__initialization:
   107                           	opt callstack 0
   108  000AC0  0E00               	movlw	low (__Lsmallconst shr (0+16))
   109  000AC2  6EF8               	movwf	tblptru,c
   110  000AC4  0E08               	movlw	high __Lsmallconst
   111  000AC6  6EF7               	movwf	tblptrh,c
   112  000AC8  0100               	movlb	0
   113  000ACA  EF8A  F004         	goto	_main	;jump to C main() function
   114                           
   115                           	psect	cstackCOMRAM
   116  000001                     __pcstackCOMRAM:
   117                           	opt callstack 0
   118  000001                     ??_I2C_Idle:
   119  000001                     ?___lldiv:
   120                           	opt callstack 0
   121  000001                     I2C_Write_Data@dato:
   122                           	opt callstack 0
   123  000001                     ___lldiv@dividend:
   124                           	opt callstack 0
   125                           
   126                           ; 4 bytes @ 0x0
   127  000001                     	ds	1
   128  000002                     I2C_Start@addres_wr:
   129                           	opt callstack 0
   130                           
   131                           ; 1 bytes @ 0x1
   132  000002                     	ds	1
   133  000003                     lcd_send_data@data:
   134                           	opt callstack 0
   135  000003                     lcd_send_cmd@data:
   136                           	opt callstack 0
   137                           
   138                           ; 1 bytes @ 0x2
   139  000003                     	ds	1
   140  000004                     lcd_send_data@data_l:
   141                           	opt callstack 0
   142  000004                     lcd_send_cmd@data_l:
   143                           	opt callstack 0
   144                           
   145                           ; 1 bytes @ 0x3
   146  000004                     	ds	1
   147  000005                     lcd_send_data@data_u:
   148                           	opt callstack 0
   149  000005                     lcd_send_cmd@data_u:
   150                           	opt callstack 0
   151  000005                     ___lldiv@divisor:
   152                           	opt callstack 0
   153                           
   154                           ; 4 bytes @ 0x4
   155  000005                     	ds	1
   156  000006                     lcd_send_string@str:
   157                           	opt callstack 0
   158                           
   159                           ; 2 bytes @ 0x5
   160  000006                     	ds	2
   161  000008                     
   162                           ; 1 bytes @ 0x7
   163  000008                     	ds	1
   164  000009                     ___lldiv@quotient:
   165                           	opt callstack 0
   166                           
   167                           ; 4 bytes @ 0x8
   168  000009                     	ds	4
   169  00000D                     ___lldiv@counter:
   170                           	opt callstack 0
   171                           
   172                           ; 1 bytes @ 0xC
   173  00000D                     	ds	1
   174  00000E                     I2C_Init_Master@clock_freq:
   175                           	opt callstack 0
   176                           
   177                           ; 4 bytes @ 0xD
   178  00000E                     	ds	4
   179  000012                     ??_I2C_Init_Master:
   180                           
   181                           ; 1 bytes @ 0x11
   182  000012                     	ds	4
   183  000016                     
   184                           ; 1 bytes @ 0x15
   185 ;;
   186 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   187 ;;
   188 ;; *************** function _main *****************
   189 ;; Defined at:
   190 ;;		line 85 in file "main.c"
   191 ;; Parameters:    Size  Location     Type
   192 ;;		None
   193 ;; Auto vars:     Size  Location     Type
   194 ;;		None
   195 ;; Return value:  Size  Location     Type
   196 ;;                  1    wreg      void 
   197 ;; Registers used:
   198 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   199 ;; Tracked objects:
   200 ;;		On entry : 0/0
   201 ;;		On exit  : 0/0
   202 ;;		Unchanged: 0/0
   203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   204 ;;      Params:         0       0       0       0       0       0       0       0       0
   205 ;;      Locals:         0       0       0       0       0       0       0       0       0
   206 ;;      Temps:          0       0       0       0       0       0       0       0       0
   207 ;;      Totals:         0       0       0       0       0       0       0       0       0
   208 ;;Total ram usage:        0 bytes
   209 ;; Hardware stack levels required when called:    4
   210 ;; This function calls:
   211 ;;		_I2C_Init_Master
   212 ;;		_lcd_init
   213 ;;		_lcd_send_cmd
   214 ;;		_lcd_send_string
   215 ;; This function is called by:
   216 ;;		Startup code after reset
   217 ;; This function uses a non-reentrant model
   218 ;;
   219                           
   220                           	psect	text0
   221  000914                     __ptext0:
   222                           	opt callstack 0
   223  000914                     _main:
   224                           	opt callstack 27
   225  000914                     
   226                           ;main.c: 89:     I2C_Init_Master(100000);
   227  000914  0EA0               	movlw	160
   228  000916  6E0E               	movwf	I2C_Init_Master@clock_freq^0,c
   229  000918  0E86               	movlw	134
   230  00091A  6E0F               	movwf	(I2C_Init_Master@clock_freq+1)^0,c
   231  00091C  0E01               	movlw	1
   232  00091E  6E10               	movwf	(I2C_Init_Master@clock_freq+2)^0,c
   233  000920  0E00               	movlw	0
   234  000922  6E11               	movwf	(I2C_Init_Master@clock_freq+3)^0,c
   235  000924  EC5B  F004         	call	_I2C_Init_Master	;wreg free
   236                           
   237                           ;main.c: 93:     lcd_init ();
   238  000928  EC53  F005         	call	_lcd_init	;wreg free
   239  00092C                     
   240                           ;main.c: 97:     lcd_send_string ("HOLA");
   241  00092C  0E0C               	movlw	low STR_1
   242  00092E  6E06               	movwf	lcd_send_string@str^0,c
   243  000930  0E08               	movlw	high STR_1
   244  000932  6E07               	movwf	(lcd_send_string@str+1)^0,c
   245  000934  EC02  F005         	call	_lcd_send_string	;wreg free
   246  000938                     
   247                           ;main.c: 99:     lcd_send_cmd (0xc0);
   248  000938  0EC0               	movlw	192
   249  00093A  ECC7  F004         	call	_lcd_send_cmd
   250                           
   251                           ;main.c: 101:     lcd_send_string ("PIC18F4550");
   252  00093E  0E01               	movlw	low STR_2
   253  000940  6E06               	movwf	lcd_send_string@str^0,c
   254  000942  0E08               	movlw	high STR_2
   255  000944  6E07               	movwf	(lcd_send_string@str+1)^0,c
   256  000946  EC02  F005         	call	_lcd_send_string	;wreg free
   257  00094A                     l141:
   258  00094A  EFA5  F004         	goto	l141
   259  00094E  EF00  F000         	goto	start
   260  000952                     __end_of_main:
   261                           	opt callstack 0
   262                           
   263 ;; *************** function _lcd_send_string *****************
   264 ;; Defined at:
   265 ;;		line 79 in file "main.c"
   266 ;; Parameters:    Size  Location     Type
   267 ;;  str             2    5[COMRAM] PTR unsigned char 
   268 ;;		 -> STR_2(11), STR_1(5), 
   269 ;; Auto vars:     Size  Location     Type
   270 ;;		None
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   275 ;; Tracked objects:
   276 ;;		On entry : 0/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   280 ;;      Params:         2       0       0       0       0       0       0       0       0
   281 ;;      Locals:         0       0       0       0       0       0       0       0       0
   282 ;;      Temps:          0       0       0       0       0       0       0       0       0
   283 ;;      Totals:         2       0       0       0       0       0       0       0       0
   284 ;;Total ram usage:        2 bytes
   285 ;; Hardware stack levels used:    1
   286 ;; Hardware stack levels required when called:    3
   287 ;; This function calls:
   288 ;;		_lcd_send_data
   289 ;; This function is called by:
   290 ;;		_main
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294                           	psect	text1
   295  000A04                     __ptext1:
   296                           	opt callstack 0
   297  000A04                     _lcd_send_string:
   298                           	opt callstack 27
   299  000A04                     
   300                           ;main.c: 79: void lcd_send_string (char *str);main.c: 80: {;main.c: 81:  while (*str) lc
      +                          d_send_data (*str++);
   301  000A04  EF0E  F005         	goto	l994
   302  000A08                     l990:
   303  000A08  C006  FFF6         	movff	lcd_send_string@str,tblptrl
   304  000A0C  C007  FFF7         	movff	lcd_send_string@str+1,tblptrh
   305  000A10                     	if	0	;tblptru may be non-zero
   306  000A10                     	endif
   307  000A10                     	if	0	;tblptru may be non-zero
   308  000A10                     	endif
   309  000A10  0008               	tblrd		*
   310  000A12  50F5               	movf	tablat,w,c
   311  000A14  ECA9  F004         	call	_lcd_send_data
   312  000A18  4A06               	infsnz	lcd_send_string@str^0,f,c
   313  000A1A  2A07               	incf	(lcd_send_string@str+1)^0,f,c
   314  000A1C                     l994:
   315  000A1C  C006  FFF6         	movff	lcd_send_string@str,tblptrl
   316  000A20  C007  FFF7         	movff	lcd_send_string@str+1,tblptrh
   317  000A24                     	if	0	;tblptru may be non-zero
   318  000A24                     	endif
   319  000A24                     	if	0	;tblptru may be non-zero
   320  000A24                     	endif
   321  000A24  0008               	tblrd		*
   322  000A26  50F5               	movf	tablat,w,c
   323  000A28  0900               	iorlw	0
   324  000A2A  A4D8               	btfss	status,2,c
   325  000A2C  EF1A  F005         	goto	u261
   326  000A30  EF1C  F005         	goto	u260
   327  000A34                     u261:
   328  000A34  EF04  F005         	goto	l990
   329  000A38                     u260:
   330  000A38  0012               	return		;funcret
   331  000A3A                     __end_of_lcd_send_string:
   332                           	opt callstack 0
   333                           
   334 ;; *************** function _lcd_send_data *****************
   335 ;; Defined at:
   336 ;;		line 16 in file "main.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;  data            1    wreg     unsigned char 
   339 ;; Auto vars:     Size  Location     Type
   340 ;;  data            1    2[COMRAM] unsigned char 
   341 ;;  data_u          1    4[COMRAM] unsigned char 
   342 ;;  data_l          1    3[COMRAM] unsigned char 
   343 ;; Return value:  Size  Location     Type
   344 ;;                  1    wreg      void 
   345 ;; Registers used:
   346 ;;		wreg, status,2, status,0, cstack
   347 ;; Tracked objects:
   348 ;;		On entry : 0/0
   349 ;;		On exit  : 0/0
   350 ;;		Unchanged: 0/0
   351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   352 ;;      Params:         0       0       0       0       0       0       0       0       0
   353 ;;      Locals:         3       0       0       0       0       0       0       0       0
   354 ;;      Temps:          0       0       0       0       0       0       0       0       0
   355 ;;      Totals:         3       0       0       0       0       0       0       0       0
   356 ;;Total ram usage:        3 bytes
   357 ;; Hardware stack levels used:    1
   358 ;; Hardware stack levels required when called:    2
   359 ;; This function calls:
   360 ;;		_I2C_Start
   361 ;;		_I2C_Stop
   362 ;;		_I2C_Write_Data
   363 ;; This function is called by:
   364 ;;		_lcd_send_string
   365 ;;		_lcd_clear
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           	psect	text2
   370  000952                     __ptext2:
   371                           	opt callstack 0
   372  000952                     _lcd_send_data:
   373                           	opt callstack 27
   374                           
   375                           ;incstack = 0
   376                           ;lcd_send_data@data stored from wreg
   377  000952  6E03               	movwf	lcd_send_data@data^0,c
   378  000954                     
   379                           ;main.c: 16: void lcd_send_data (unsigned char data);main.c: 17: {;main.c: 18:  unsigned
      +                           char data_l, data_u;;main.c: 19:  data_l = (data<<4)&0xf0;
   380  000954  3803               	swapf	lcd_send_data@data^0,w,c
   381  000956  0BF0               	andlw	240
   382  000958  0BF0               	andlw	240
   383  00095A  6E04               	movwf	lcd_send_data@data_l^0,c
   384                           
   385                           ;main.c: 20:  data_u = data&0xf0;
   386  00095C  5003               	movf	lcd_send_data@data^0,w,c
   387  00095E  0BF0               	andlw	240
   388  000960  6E05               	movwf	lcd_send_data@data_u^0,c
   389  000962                     
   390                           ;main.c: 22:  I2C_Start(0x4E);
   391  000962  0E4E               	movlw	78
   392  000964  ECE5  F004         	call	_I2C_Start
   393  000968                     
   394                           ;main.c: 24:  I2C_Write_Data(data_u|0x0D);
   395  000968  5005               	movf	lcd_send_data@data_u^0,w,c
   396  00096A  090D               	iorlw	13
   397  00096C  EC30  F005         	call	_I2C_Write_Data
   398  000970                     
   399                           ;main.c: 25:  I2C_Write_Data(data_u|0x09);
   400  000970  5005               	movf	lcd_send_data@data_u^0,w,c
   401  000972  0909               	iorlw	9
   402  000974  EC30  F005         	call	_I2C_Write_Data
   403  000978                     
   404                           ;main.c: 27:  I2C_Write_Data (data_l|0x0D);
   405  000978  5004               	movf	lcd_send_data@data_l^0,w,c
   406  00097A  090D               	iorlw	13
   407  00097C  EC30  F005         	call	_I2C_Write_Data
   408  000980                     
   409                           ;main.c: 28:  I2C_Write_Data (data_l|0x09);
   410  000980  5004               	movf	lcd_send_data@data_l^0,w,c
   411  000982  0909               	iorlw	9
   412  000984  EC30  F005         	call	_I2C_Write_Data
   413                           
   414                           ;main.c: 30:  I2C_Stop();
   415  000988  EC42  F005         	call	_I2C_Stop	;wreg free
   416  00098C  0012               	return		;funcret
   417  00098E                     __end_of_lcd_send_data:
   418                           	opt callstack 0
   419                           
   420 ;; *************** function _lcd_init *****************
   421 ;; Defined at:
   422 ;;		line 69 in file "main.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		wreg, status,2, status,0, cstack
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   436 ;;      Params:         0       0       0       0       0       0       0       0       0
   437 ;;      Locals:         0       0       0       0       0       0       0       0       0
   438 ;;      Temps:          0       0       0       0       0       0       0       0       0
   439 ;;      Totals:         0       0       0       0       0       0       0       0       0
   440 ;;Total ram usage:        0 bytes
   441 ;; Hardware stack levels used:    1
   442 ;; Hardware stack levels required when called:    3
   443 ;; This function calls:
   444 ;;		_lcd_send_cmd
   445 ;; This function is called by:
   446 ;;		_main
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           	psect	text3
   451  000AA6                     __ptext3:
   452                           	opt callstack 0
   453  000AA6                     _lcd_init:
   454                           	opt callstack 27
   455  000AA6                     
   456                           ;main.c: 71:  lcd_send_cmd (0x02);
   457  000AA6  0E02               	movlw	2
   458  000AA8  ECC7  F004         	call	_lcd_send_cmd
   459                           
   460                           ;main.c: 72:  lcd_send_cmd (0x28);
   461  000AAC  0E28               	movlw	40
   462  000AAE  ECC7  F004         	call	_lcd_send_cmd
   463                           
   464                           ;main.c: 73:  lcd_send_cmd (0x0c);
   465  000AB2  0E0C               	movlw	12
   466  000AB4  ECC7  F004         	call	_lcd_send_cmd
   467                           
   468                           ;main.c: 74:  lcd_send_cmd (0x80);
   469  000AB8  0E80               	movlw	128
   470  000ABA  ECC7  F004         	call	_lcd_send_cmd
   471  000ABE  0012               	return		;funcret
   472  000AC0                     __end_of_lcd_init:
   473                           	opt callstack 0
   474                           
   475 ;; *************** function _lcd_send_cmd *****************
   476 ;; Defined at:
   477 ;;		line 35 in file "main.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;  data            1    wreg     unsigned char 
   480 ;; Auto vars:     Size  Location     Type
   481 ;;  data            1    2[COMRAM] unsigned char 
   482 ;;  data_u          1    4[COMRAM] unsigned char 
   483 ;;  data_l          1    3[COMRAM] unsigned char 
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2, status,0, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   493 ;;      Params:         0       0       0       0       0       0       0       0       0
   494 ;;      Locals:         3       0       0       0       0       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0       0       0       0       0
   496 ;;      Totals:         3       0       0       0       0       0       0       0       0
   497 ;;Total ram usage:        3 bytes
   498 ;; Hardware stack levels used:    1
   499 ;; Hardware stack levels required when called:    2
   500 ;; This function calls:
   501 ;;		_I2C_Start
   502 ;;		_I2C_Stop
   503 ;;		_I2C_Write_Data
   504 ;; This function is called by:
   505 ;;		_lcd_init
   506 ;;		_main
   507 ;;		_lcd_clear
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           	psect	text4
   512  00098E                     __ptext4:
   513                           	opt callstack 0
   514  00098E                     _lcd_send_cmd:
   515                           	opt callstack 28
   516                           
   517                           ;incstack = 0
   518                           ;lcd_send_cmd@data stored from wreg
   519  00098E  6E03               	movwf	lcd_send_cmd@data^0,c
   520  000990                     
   521                           ;main.c: 35: void lcd_send_cmd (unsigned char data);main.c: 36: {;main.c: 37:  unsigned 
      +                          char data_l, data_u;;main.c: 38:  data_l = (data<<4)&0xf0;
   522  000990  3803               	swapf	lcd_send_cmd@data^0,w,c
   523  000992  0BF0               	andlw	240
   524  000994  0BF0               	andlw	240
   525  000996  6E04               	movwf	lcd_send_cmd@data_l^0,c
   526                           
   527                           ;main.c: 39:  data_u = data&0xf0;
   528  000998  5003               	movf	lcd_send_cmd@data^0,w,c
   529  00099A  0BF0               	andlw	240
   530  00099C  6E05               	movwf	lcd_send_cmd@data_u^0,c
   531  00099E                     
   532                           ;main.c: 41:  I2C_Start(0x4E);
   533  00099E  0E4E               	movlw	78
   534  0009A0  ECE5  F004         	call	_I2C_Start
   535  0009A4                     
   536                           ;main.c: 43:  I2C_Write_Data(data_u|0x0C);
   537  0009A4  5005               	movf	lcd_send_cmd@data_u^0,w,c
   538  0009A6  090C               	iorlw	12
   539  0009A8  EC30  F005         	call	_I2C_Write_Data
   540  0009AC                     
   541                           ;main.c: 44:  I2C_Write_Data(data_u|0x08);
   542  0009AC  5005               	movf	lcd_send_cmd@data_u^0,w,c
   543  0009AE  0908               	iorlw	8
   544  0009B0  EC30  F005         	call	_I2C_Write_Data
   545  0009B4                     
   546                           ;main.c: 46:  I2C_Write_Data(data_l|0x0C);
   547  0009B4  5004               	movf	lcd_send_cmd@data_l^0,w,c
   548  0009B6  090C               	iorlw	12
   549  0009B8  EC30  F005         	call	_I2C_Write_Data
   550  0009BC                     
   551                           ;main.c: 47:  I2C_Write_Data(data_l|0x08);
   552  0009BC  5004               	movf	lcd_send_cmd@data_l^0,w,c
   553  0009BE  0908               	iorlw	8
   554  0009C0  EC30  F005         	call	_I2C_Write_Data
   555                           
   556                           ;main.c: 49:  I2C_Stop();
   557  0009C4  EC42  F005         	call	_I2C_Stop	;wreg free
   558  0009C8  0012               	return		;funcret
   559  0009CA                     __end_of_lcd_send_cmd:
   560                           	opt callstack 0
   561                           
   562 ;; *************** function _I2C_Write_Data *****************
   563 ;; Defined at:
   564 ;;		line 39 in file "I2C_Lib.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;  dato            1    wreg     unsigned char 
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  dato            1    0[COMRAM] unsigned char 
   569 ;; Return value:  Size  Location     Type
   570 ;;                  1    wreg      void 
   571 ;; Registers used:
   572 ;;		wreg
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   578 ;;      Params:         0       0       0       0       0       0       0       0       0
   579 ;;      Locals:         1       0       0       0       0       0       0       0       0
   580 ;;      Temps:          0       0       0       0       0       0       0       0       0
   581 ;;      Totals:         1       0       0       0       0       0       0       0       0
   582 ;;Total ram usage:        1 bytes
   583 ;; Hardware stack levels used:    1
   584 ;; This function calls:
   585 ;;		Nothing
   586 ;; This function is called by:
   587 ;;		_lcd_send_data
   588 ;;		_lcd_send_cmd
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           	psect	text5
   593  000A60                     __ptext5:
   594                           	opt callstack 0
   595  000A60                     _I2C_Write_Data:
   596                           	opt callstack 28
   597                           
   598                           ;incstack = 0
   599                           ;I2C_Write_Data@dato stored from wreg
   600  000A60  6E01               	movwf	I2C_Write_Data@dato^0,c
   601  000A62                     
   602                           ;I2C_Lib.c: 40:     SSPBUF = dato;
   603  000A62  C001  FFC9         	movff	I2C_Write_Data@dato,4041	;volatile
   604  000A66                     l49:
   605  000A66  B0C7               	btfsc	199,0,c	;volatile
   606  000A68  EF38  F005         	goto	u61
   607  000A6C  EF3A  F005         	goto	u60
   608  000A70                     u61:
   609  000A70  EF33  F005         	goto	l49
   610  000A74                     u60:
   611  000A74                     l52:
   612  000A74  B4C7               	btfsc	199,2,c	;volatile
   613  000A76  EF3F  F005         	goto	u71
   614  000A7A  EF41  F005         	goto	u70
   615  000A7E                     u71:
   616  000A7E  EF3A  F005         	goto	l52
   617  000A82                     u70:
   618  000A82  0012               	return		;funcret
   619  000A84                     __end_of_I2C_Write_Data:
   620                           	opt callstack 0
   621                           
   622 ;; *************** function _I2C_Stop *****************
   623 ;; Defined at:
   624 ;;		line 51 in file "I2C_Lib.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;		None
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		None
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   638 ;;      Params:         0       0       0       0       0       0       0       0       0
   639 ;;      Locals:         0       0       0       0       0       0       0       0       0
   640 ;;      Temps:          0       0       0       0       0       0       0       0       0
   641 ;;      Totals:         0       0       0       0       0       0       0       0       0
   642 ;;Total ram usage:        0 bytes
   643 ;; Hardware stack levels used:    1
   644 ;; This function calls:
   645 ;;		Nothing
   646 ;; This function is called by:
   647 ;;		_lcd_send_data
   648 ;;		_lcd_send_cmd
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           	psect	text6
   653  000A84                     __ptext6:
   654                           	opt callstack 0
   655  000A84                     _I2C_Stop:
   656                           	opt callstack 28
   657  000A84                     
   658                           ;I2C_Lib.c: 53:     SSPCON2bits.PEN=1;
   659  000A84  84C5               	bsf	197,2,c	;volatile
   660  000A86                     l58:
   661  000A86  B4C5               	btfsc	197,2,c	;volatile
   662  000A88  EF48  F005         	goto	u81
   663  000A8C  EF4A  F005         	goto	u80
   664  000A90                     u81:
   665  000A90  EF43  F005         	goto	l58
   666  000A94                     u80:
   667  000A94                     l61:
   668  000A94  A8C7               	btfss	199,4,c	;volatile
   669  000A96  EF4F  F005         	goto	u91
   670  000A9A  EF51  F005         	goto	u90
   671  000A9E                     u91:
   672  000A9E  EF4A  F005         	goto	l61
   673  000AA2                     u90:
   674  000AA2                     
   675                           ;I2C_Lib.c: 56:     SSPCON2bits.PEN=0;
   676  000AA2  94C5               	bcf	197,2,c	;volatile
   677  000AA4  0012               	return		;funcret
   678  000AA6                     __end_of_I2C_Stop:
   679                           	opt callstack 0
   680                           
   681 ;; *************** function _I2C_Start *****************
   682 ;; Defined at:
   683 ;;		line 26 in file "I2C_Lib.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;  addres_wr       1    wreg     unsigned char 
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  addres_wr       1    1[COMRAM] unsigned char 
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		wreg, status,2, status,0, cstack
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   697 ;;      Params:         0       0       0       0       0       0       0       0       0
   698 ;;      Locals:         1       0       0       0       0       0       0       0       0
   699 ;;      Temps:          0       0       0       0       0       0       0       0       0
   700 ;;      Totals:         1       0       0       0       0       0       0       0       0
   701 ;;Total ram usage:        1 bytes
   702 ;; Hardware stack levels used:    1
   703 ;; Hardware stack levels required when called:    1
   704 ;; This function calls:
   705 ;;		_I2C_Idle
   706 ;; This function is called by:
   707 ;;		_lcd_send_data
   708 ;;		_lcd_send_cmd
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text7
   713  0009CA                     __ptext7:
   714                           	opt callstack 0
   715  0009CA                     _I2C_Start:
   716                           	opt callstack 27
   717                           
   718                           ;incstack = 0
   719                           ;I2C_Start@addres_wr stored from wreg
   720  0009CA  6E02               	movwf	I2C_Start@addres_wr^0,c
   721  0009CC                     
   722                           ;I2C_Lib.c: 28:     I2C_Idle();
   723  0009CC  EC1D  F005         	call	_I2C_Idle	;wreg free
   724  0009D0                     
   725                           ;I2C_Lib.c: 29:     SEN=1;
   726  0009D0  80C5               	bsf	4037,0,c	;volatile
   727  0009D2                     l36:
   728  0009D2  B0C5               	btfsc	197,0,c	;volatile
   729  0009D4  EFEE  F004         	goto	u31
   730  0009D8  EFF0  F004         	goto	u30
   731  0009DC                     u31:
   732  0009DC  EFE9  F004         	goto	l36
   733  0009E0                     u30:
   734  0009E0                     
   735                           ;I2C_Lib.c: 31:     if(SSPSTATbits.S);
   736  0009E0  50C7               	movf	199,w,c	;volatile
   737  0009E2                     
   738                           ;I2C_Lib.c: 32:     SSPBUF = addres_wr;
   739  0009E2  C002  FFC9         	movff	I2C_Start@addres_wr,4041	;volatile
   740  0009E6                     l40:
   741  0009E6  B0C7               	btfsc	199,0,c	;volatile
   742  0009E8  EFF8  F004         	goto	u41
   743  0009EC  EFFA  F004         	goto	u40
   744  0009F0                     u41:
   745  0009F0  EFF3  F004         	goto	l40
   746  0009F4                     u40:
   747  0009F4                     l43:
   748  0009F4  B4C7               	btfsc	199,2,c	;volatile
   749  0009F6  EFFF  F004         	goto	u51
   750  0009FA  EF01  F005         	goto	u50
   751  0009FE                     u51:
   752  0009FE  EFFA  F004         	goto	l43
   753  000A02                     u50:
   754  000A02  0012               	return		;funcret
   755  000A04                     __end_of_I2C_Start:
   756                           	opt callstack 0
   757                           
   758 ;; *************** function _I2C_Idle *****************
   759 ;; Defined at:
   760 ;;		line 107 in file "I2C_Lib.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;		None
   763 ;; Auto vars:     Size  Location     Type
   764 ;;		None
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		wreg, status,2, status,0
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   774 ;;      Params:         0       0       0       0       0       0       0       0       0
   775 ;;      Locals:         0       0       0       0       0       0       0       0       0
   776 ;;      Temps:          1       0       0       0       0       0       0       0       0
   777 ;;      Totals:         1       0       0       0       0       0       0       0       0
   778 ;;Total ram usage:        1 bytes
   779 ;; Hardware stack levels used:    1
   780 ;; This function calls:
   781 ;;		Nothing
   782 ;; This function is called by:
   783 ;;		_I2C_Start
   784 ;;		_I2C_Read_S_M
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text8
   789  000A3A                     __ptext8:
   790                           	opt callstack 0
   791  000A3A                     _I2C_Idle:
   792                           	opt callstack 27
   793  000A3A                     l91:
   794  000A3A  B4C7               	btfsc	199,2,c	;volatile
   795  000A3C  EF22  F005         	goto	u11
   796  000A40  EF24  F005         	goto	u10
   797  000A44                     u11:
   798  000A44  EF1D  F005         	goto	l91
   799  000A48                     u10:
   800  000A48  CFC5 F001          	movff	4037,??_I2C_Idle	;volatile
   801  000A4C  0E1F               	movlw	31
   802  000A4E  1601               	andwf	??_I2C_Idle^0,f,c
   803  000A50  A4D8               	btfss	status,2,c
   804  000A52  EF2D  F005         	goto	u21
   805  000A56  EF2F  F005         	goto	u20
   806  000A5A                     u21:
   807  000A5A  EF1D  F005         	goto	l91
   808  000A5E                     u20:
   809  000A5E  0012               	return		;funcret
   810  000A60                     __end_of_I2C_Idle:
   811                           	opt callstack 0
   812                           
   813 ;; *************** function _I2C_Init_Master *****************
   814 ;; Defined at:
   815 ;;		line 12 in file "I2C_Lib.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;  clock_freq      4   13[COMRAM] unsigned long 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;		None
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, status,2, status,0, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   829 ;;      Params:         4       0       0       0       0       0       0       0       0
   830 ;;      Locals:         0       0       0       0       0       0       0       0       0
   831 ;;      Temps:          4       0       0       0       0       0       0       0       0
   832 ;;      Totals:         8       0       0       0       0       0       0       0       0
   833 ;;Total ram usage:        8 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    1
   836 ;; This function calls:
   837 ;;		___lldiv
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text9
   844  0008B6                     __ptext9:
   845                           	opt callstack 0
   846  0008B6                     _I2C_Init_Master:
   847                           	opt callstack 29
   848  0008B6                     
   849                           ;I2C_Lib.c: 13:     ADCON1 = 0x0F;
   850  0008B6  0E0F               	movlw	15
   851  0008B8  6EC1               	movwf	193,c	;volatile
   852  0008BA                     
   853                           ;I2C_Lib.c: 14:     TRISB |= 0x03;
   854  0008BA  0E03               	movlw	3
   855  0008BC  1293               	iorwf	147,f,c	;volatile
   856  0008BE                     
   857                           ;I2C_Lib.c: 15:     SSPCON1 = 0x28;
   858  0008BE  0E28               	movlw	40
   859  0008C0  6EC6               	movwf	198,c	;volatile
   860  0008C2                     
   861                           ;I2C_Lib.c: 16:     SSPADD = (20000000UL/(4*clock_freq))-1;
   862  0008C2  0E00               	movlw	0
   863  0008C4  6E01               	movwf	___lldiv@dividend^0,c
   864  0008C6  0E2D               	movlw	45
   865  0008C8  6E02               	movwf	(___lldiv@dividend+1)^0,c
   866  0008CA  0E31               	movlw	49
   867  0008CC  6E03               	movwf	(___lldiv@dividend+2)^0,c
   868  0008CE  0E01               	movlw	1
   869  0008D0  6E04               	movwf	(___lldiv@dividend+3)^0,c
   870  0008D2  C00E  F012         	movff	I2C_Init_Master@clock_freq,??_I2C_Init_Master
   871  0008D6  C00F  F013         	movff	I2C_Init_Master@clock_freq+1,??_I2C_Init_Master+1
   872  0008DA  C010  F014         	movff	I2C_Init_Master@clock_freq+2,??_I2C_Init_Master+2
   873  0008DE  C011  F015         	movff	I2C_Init_Master@clock_freq+3,??_I2C_Init_Master+3
   874  0008E2  0E02               	movlw	2
   875  0008E4                     u255:
   876  0008E4  90D8               	bcf	status,0,c
   877  0008E6  3612               	rlcf	??_I2C_Init_Master^0,f,c
   878  0008E8  3613               	rlcf	(??_I2C_Init_Master+1)^0,f,c
   879  0008EA  3614               	rlcf	(??_I2C_Init_Master+2)^0,f,c
   880  0008EC  3615               	rlcf	(??_I2C_Init_Master+3)^0,f,c
   881  0008EE  2EE8               	decfsz	wreg,f,c
   882  0008F0  EF72  F004         	goto	u255
   883  0008F4  C012  F005         	movff	??_I2C_Init_Master,___lldiv@divisor
   884  0008F8  C013  F006         	movff	??_I2C_Init_Master+1,___lldiv@divisor+1
   885  0008FC  C014  F007         	movff	??_I2C_Init_Master+2,___lldiv@divisor+2
   886  000900  C015  F008         	movff	??_I2C_Init_Master+3,___lldiv@divisor+3
   887  000904  EC09  F004         	call	___lldiv	;wreg free
   888  000908  0401               	decf	?___lldiv^0,w,c
   889  00090A  6EC8               	movwf	200,c	;volatile
   890  00090C                     
   891                           ;I2C_Lib.c: 17:     SSPSTAT = 0x80;
   892  00090C  0E80               	movlw	128
   893  00090E  6EC7               	movwf	199,c	;volatile
   894  000910                     
   895                           ;I2C_Lib.c: 23:     SSPIF = 0;
   896  000910  969E               	bcf	3998,3,c	;volatile
   897  000912  0012               	return		;funcret
   898  000914                     __end_of_I2C_Init_Master:
   899                           	opt callstack 0
   900                           
   901 ;; *************** function ___lldiv *****************
   902 ;; Defined at:
   903 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;  dividend        4    0[COMRAM] unsigned long 
   906 ;;  divisor         4    4[COMRAM] unsigned long 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  quotient        4    8[COMRAM] unsigned long 
   909 ;;  counter         1   12[COMRAM] unsigned char 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  4    0[COMRAM] unsigned long 
   912 ;; Registers used:
   913 ;;		wreg, status,2, status,0
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   919 ;;      Params:         8       0       0       0       0       0       0       0       0
   920 ;;      Locals:         5       0       0       0       0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0       0       0       0       0
   922 ;;      Totals:        13       0       0       0       0       0       0       0       0
   923 ;;Total ram usage:       13 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; This function calls:
   926 ;;		Nothing
   927 ;; This function is called by:
   928 ;;		_I2C_Init_Master
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text10
   933  000812                     __ptext10:
   934                           	opt callstack 0
   935  000812                     ___lldiv:
   936                           	opt callstack 29
   937  000812  0E00               	movlw	0
   938  000814  6E09               	movwf	___lldiv@quotient^0,c
   939  000816  0E00               	movlw	0
   940  000818  6E0A               	movwf	(___lldiv@quotient+1)^0,c
   941  00081A  0E00               	movlw	0
   942  00081C  6E0B               	movwf	(___lldiv@quotient+2)^0,c
   943  00081E  0E00               	movlw	0
   944  000820  6E0C               	movwf	(___lldiv@quotient+3)^0,c
   945  000822  5005               	movf	___lldiv@divisor^0,w,c
   946  000824  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
   947  000826  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
   948  000828  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
   949  00082A  B4D8               	btfsc	status,2,c
   950  00082C  EF1A  F004         	goto	u221
   951  000830  EF1C  F004         	goto	u220
   952  000834                     u221:
   953  000834  EF52  F004         	goto	l174
   954  000838                     u220:
   955  000838  0E01               	movlw	1
   956  00083A  6E0D               	movwf	___lldiv@counter^0,c
   957  00083C  EF26  F004         	goto	l962
   958  000840                     l960:
   959  000840  90D8               	bcf	status,0,c
   960  000842  3605               	rlcf	___lldiv@divisor^0,f,c
   961  000844  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
   962  000846  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
   963  000848  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
   964  00084A  2A0D               	incf	___lldiv@counter^0,f,c
   965  00084C                     l962:
   966  00084C  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
   967  00084E  EF2B  F004         	goto	u231
   968  000852  EF2D  F004         	goto	u230
   969  000856                     u231:
   970  000856  EF20  F004         	goto	l960
   971  00085A                     u230:
   972  00085A                     l964:
   973  00085A  90D8               	bcf	status,0,c
   974  00085C  3609               	rlcf	___lldiv@quotient^0,f,c
   975  00085E  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
   976  000860  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
   977  000862  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
   978  000864  5005               	movf	___lldiv@divisor^0,w,c
   979  000866  5C01               	subwf	___lldiv@dividend^0,w,c
   980  000868  5006               	movf	(___lldiv@divisor+1)^0,w,c
   981  00086A  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
   982  00086C  5007               	movf	(___lldiv@divisor+2)^0,w,c
   983  00086E  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
   984  000870  5008               	movf	(___lldiv@divisor+3)^0,w,c
   985  000872  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
   986  000874  A0D8               	btfss	status,0,c
   987  000876  EF3F  F004         	goto	u241
   988  00087A  EF41  F004         	goto	u240
   989  00087E                     u241:
   990  00087E  EF4A  F004         	goto	l972
   991  000882                     u240:
   992  000882  5005               	movf	___lldiv@divisor^0,w,c
   993  000884  5E01               	subwf	___lldiv@dividend^0,f,c
   994  000886  5006               	movf	(___lldiv@divisor+1)^0,w,c
   995  000888  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
   996  00088A  5007               	movf	(___lldiv@divisor+2)^0,w,c
   997  00088C  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
   998  00088E  5008               	movf	(___lldiv@divisor+3)^0,w,c
   999  000890  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  1000  000892  8009               	bsf	___lldiv@quotient^0,0,c
  1001  000894                     l972:
  1002  000894  90D8               	bcf	status,0,c
  1003  000896  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  1004  000898  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  1005  00089A  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  1006  00089C  3205               	rrcf	___lldiv@divisor^0,f,c
  1007  00089E  2E0D               	decfsz	___lldiv@counter^0,f,c
  1008  0008A0  EF2D  F004         	goto	l964
  1009  0008A4                     l174:
  1010  0008A4  C009  F001         	movff	___lldiv@quotient,?___lldiv
  1011  0008A8  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  1012  0008AC  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  1013  0008B0  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  1014  0008B4  0012               	return		;funcret
  1015  0008B6                     __end_of___lldiv:
  1016                           	opt callstack 0
  1017                           
  1018                           	psect	rparam
  1019  0000                     tosu	equ	0xFFF
  1020                           tosh	equ	0xFFE
  1021                           tosl	equ	0xFFD
  1022                           stkptr	equ	0xFFC
  1023                           pclatu	equ	0xFFB
  1024                           pclath	equ	0xFFA
  1025                           pcl	equ	0xFF9
  1026                           tblptru	equ	0xFF8
  1027                           tblptrh	equ	0xFF7
  1028                           tblptrl	equ	0xFF6
  1029                           tablat	equ	0xFF5
  1030                           prodh	equ	0xFF4
  1031                           prodl	equ	0xFF3
  1032                           indf0	equ	0xFEF
  1033                           postinc0	equ	0xFEE
  1034                           postdec0	equ	0xFED
  1035                           preinc0	equ	0xFEC
  1036                           plusw0	equ	0xFEB
  1037                           fsr0h	equ	0xFEA
  1038                           fsr0l	equ	0xFE9
  1039                           wreg	equ	0xFE8
  1040                           indf1	equ	0xFE7
  1041                           postinc1	equ	0xFE6
  1042                           postdec1	equ	0xFE5
  1043                           preinc1	equ	0xFE4
  1044                           plusw1	equ	0xFE3
  1045                           fsr1h	equ	0xFE2
  1046                           fsr1l	equ	0xFE1
  1047                           bsr	equ	0xFE0
  1048                           indf2	equ	0xFDF
  1049                           postinc2	equ	0xFDE
  1050                           postdec2	equ	0xFDD
  1051                           preinc2	equ	0xFDC
  1052                           plusw2	equ	0xFDB
  1053                           fsr2h	equ	0xFDA
  1054                           fsr2l	equ	0xFD9
  1055                           status	equ	0xFD8


Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     21      21
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    lcd_send_string@str	PTR unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_I2C_Init_Master
    _lcd_send_string->_lcd_send_data
    _lcd_send_data->_I2C_Start
    _lcd_init->_lcd_send_cmd
    _lcd_send_cmd->_I2C_Start
    _I2C_Start->_I2C_Idle
    _I2C_Init_Master->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     969
                    _I2C_Init_Master
                           _lcd_init
                       _lcd_send_cmd
                    _lcd_send_string
 ---------------------------------------------------------------------------------
 (1) _lcd_send_string                                      2     0      2     317
                                              5 COMRAM     2     0      2
                      _lcd_send_data
 ---------------------------------------------------------------------------------
 (2) _lcd_send_data                                        3     3      0     120
                                              2 COMRAM     3     3      0
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Data
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     120
                       _lcd_send_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_send_cmd                                         3     3      0     120
                                              2 COMRAM     3     3      0
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Data
 ---------------------------------------------------------------------------------
 (3) _I2C_Write_Data                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            1     1      0      15
                                              1 COMRAM     1     1      0
                           _I2C_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_Idle                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init_Master                                      8     4      4     412
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init_Master
     ___lldiv
   _lcd_init
     _lcd_send_cmd
       _I2C_Start
         _I2C_Idle
       _I2C_Stop
       _I2C_Write_Data
   _lcd_send_cmd
     _I2C_Start
       _I2C_Idle
     _I2C_Stop
     _I2C_Write_Data
   _lcd_send_string
     _lcd_send_data
       _I2C_Start
         _I2C_Idle
       _I2C_Stop
       _I2C_Write_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     15      15       1       22.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jun 08 19:52:00 2020

            ?_lcd_send_cmd 0001         __size_of_I2C_Start 003A             ?_lcd_send_data 0001  
              _SSPSTATbits 000FC7                         l40 09E6                         l33 0912  
                       l43 09F4                         l36 09D2                         l52 0A74  
                       l61 0A94                         l46 0A02                         l38 09E0  
                       l39 09E2                         l63 0AA2                         l55 0A82  
                       l64 0AA4                         l49 0A66                         l58 0A86  
                       l91 0A3A                         l94 0A5E                         u10 0A48  
                       u11 0A44                         u20 0A5E                         u21 0A5A  
                       u30 09E0                         u31 09DC                         u40 09F4  
                       u41 09F0                         u50 0A02                         u51 09FE  
                       u60 0A74                         u61 0A70                         u70 0A82  
                       u71 0A7E                         u80 0A94                         u81 0A90  
                       u90 0AA2                         u91 0A9E                __CFG_BORV$3 000000  
             __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000  
             __CFG_CP3$OFF 000000                        l120 09C8                        l130 0ABE  
                      l117 098C                        l141 094A                        l142 094A  
                      l136 0A38                        l181 08B4                        l174 08A4  
                      l820 0A3A                        l822 0A48                        l830 0A84  
                      l824 09CC                        l840 0978                        l832 0954  
                      l826 09D0                        l850 09AC                        l842 0980  
                      l834 0962                        l828 0A62                        l852 09B4  
                      l844 0990                        l836 0968                        l854 09BC  
                      l846 099E                        l838 0970                        l960 0840  
                      l848 09A4                        l970 0892                        l962 084C  
                      l954 0812                        l972 0894                        l964 085A  
                      l956 0822                        l980 08BE                        l892 0AA6  
                      l974 089E                        l966 0864                        l958 0838  
                      l982 08C2                        l990 0A08                        l968 0882  
                      l984 090C                        l976 08B6                        l992 0A18  
                      l986 0910                        l978 08BA                        l994 0A1C  
                      l988 0A04                        l996 0914                        l998 092C  
             __CFG_CPB$OFF 000000                        u220 0838                        u221 0834  
                      u230 085A                        u231 0856                        u240 0882  
                      u241 087E                        u260 0A38                        u261 0A34  
                      u255 08E4               __CFG_CPD$OFF 000000                        _SEN 007E28  
             __CFG_BOR$OFF 000000                        wreg 000FE8               __CFG_LVP$OFF 000000  
             __CFG_WDT$OFF 000000                       l1000 0938                       STR_1 080C  
                     STR_2 0801                       _RCEN 007E2B               __CFG_PWRT$ON 000000  
                     _main 0914           __end_of_I2C_Idle 0A60           __end_of_I2C_Stop 0AA6  
         ?_lcd_send_string 0006                       start 0000           ?_I2C_Init_Master 000E  
            __CFG_IESO$OFF 000000              __CFG_MCLRE$ON 000000               ___param_bank 000000  
           ??_lcd_send_cmd 0003              __CFG_PLLDIV$5 000000             __CFG_CCP2MX$ON 000000  
                    ?_main 0001                      _ACKEN 007E2C                      _ACKDT 007E2D  
          __end_of___lldiv 08B6              __CFG_USBDIV$1 000000                      _TRISB 000F93  
                    _SSPIF 007CF3              __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000  
            __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000  
           __CFG_FCMEN$OFF 000000             __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000  
           __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000          __end_of_I2C_Start 0A04  
                    tablat 000FF5                      status 000FD8             __CFG_ICPRT$OFF 000000  
           __CFG_PBADEN$ON 000000            __initialization 0AC0            ??_lcd_send_data 0003  
             __end_of_main 0952                     ??_main 0016              __activetblptr 000001  
                   _ADCON1 000FC1                     _SSPADD 000FC8                     _SSPBUF 000FC9  
           __CFG_XINST$OFF 000000           __end_of_lcd_init 0AC0             __CFG_STVREN$ON 000000  
                ??___lldiv 0009                  ?_I2C_Idle 0001                  ?_I2C_Stop 0001  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8       __end_of_lcd_send_cmd 09CA                 __accesstop 0060  
  __end_of__initialization 0AC0              ___rparam_used 000001         lcd_send_cmd@data_l 0004  
       lcd_send_cmd@data_u 0005             __pcstackCOMRAM 0001                 ??_I2C_Idle 0001  
               ??_I2C_Stop 0001           lcd_send_cmd@data 0003    __size_of_I2C_Write_Data 0024  
                  _SSPCON1 000FC6                    _SSPCON2 000FC5                  ?_lcd_init 0001  
                  _SSPSTAT 000FC7            __CFG_VREGEN$OFF 000000                  _I2C_Start 09CA  
                  __Hparam 0000                    __Lparam 0000                    ___lldiv 0812  
 __size_of_lcd_send_string 0036               __psmallconst 0800   __size_of_I2C_Init_Master 005E  
                  __pcinit 0AC0                    __ramtop 0800                    __ptext0 0914  
                  __ptext1 0A04                    __ptext2 0952                    __ptext3 0AA6  
                  __ptext4 098E                    __ptext5 0A60                    __ptext6 0A84  
                  __ptext7 09CA                    __ptext8 0A3A                    __ptext9 08B6  
    __size_of_lcd_send_cmd 003C                 ??_lcd_init 0006       end_of_initialization 0AC0  
               ?_I2C_Start 0001            ___lldiv@divisor 0005            ___lldiv@counter 000D  
             _lcd_send_cmd 098E      __end_of_lcd_send_data 098E          __size_of_I2C_Idle 0026  
        __size_of_I2C_Stop 0022         lcd_send_string@str 0006             _I2C_Write_Data 0A60  
      lcd_send_data@data_l 0004        lcd_send_data@data_u 0005          ??_lcd_send_string 0008  
      start_initialization 0AC0          ??_I2C_Init_Master 0012                ??_I2C_Start 0002  
   __end_of_I2C_Write_Data 0A84           __CFG_LPT1OSC$OFF 000000          lcd_send_data@data 0003  
        __size_of_lcd_init 001A  I2C_Init_Master@clock_freq 000E            ?_I2C_Write_Data 0001  
                 ?___lldiv 0001         I2C_Start@addres_wr 0002                __smallconst 0800  
                 _I2C_Idle 0A3A                   _I2C_Stop 0A84           __CFG_WDTPS$32768 000000  
                 __Hrparam 0000                   __Lrparam 0000               __Lsmallconst 0800  
          _lcd_send_string 0A04            _I2C_Init_Master 08B6           __size_of___lldiv 00A4  
                 __ptext10 0812                   _lcd_init 0AA6     __size_of_lcd_send_data 003C  
            __size_of_main 003E      __CFG_CPUDIV$OSC1_PLL2 000000           ___lldiv@dividend 0001  
         ??_I2C_Write_Data 0001    __end_of_lcd_send_string 0A3A    __end_of_I2C_Init_Master 0914  
            _lcd_send_data 0952           ___lldiv@quotient 0009                _SSPCON2bits 000FC5  
       __CFG_FOSC$HSPLL_HS 000000         I2C_Write_Data@dato 0001  
