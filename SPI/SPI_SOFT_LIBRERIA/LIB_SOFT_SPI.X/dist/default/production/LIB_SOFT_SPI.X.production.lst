

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Mar 26 21:45:45 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _PORTDbits	set	3971
    52  0000                     _TRISB	set	3987
    53  0000                     _TRISDbits	set	3989
    54  0000                     _LATB	set	3978
    55                           
    56                           ; #config settings
    57                           
    58                           	psect	cinit
    59  007E20                     __pcinit:
    60                           	callstack 0
    61  007E20                     start_initialization:
    62                           	callstack 0
    63  007E20                     __initialization:
    64                           	callstack 0
    65  007E20                     end_of_initialization:
    66                           	callstack 0
    67  007E20                     __end_of__initialization:
    68                           	callstack 0
    69  007E20  0100               	movlb	0
    70  007E22  EF70  F03F         	goto	_main	;jump to C main() function
    71                           
    72                           	psect	cstackCOMRAM
    73  000001                     __pcstackCOMRAM:
    74                           	callstack 0
    75  000001                     ??_SPI_SOFT_Tx:
    76  000001                     ??_SPI_SOFT_Rx:
    77  000001                     
    78                           ; 2 bytes @ 0x0
    79  000001                     	ds	2
    80  000003                     SPI_SOFT_Rx@buffer:
    81                           	callstack 0
    82                           
    83                           ; 1 bytes @ 0x2
    84  000003                     	ds	1
    85  000004                     SPI_SOFT_Tx@dato:
    86                           	callstack 0
    87  000004                     SPI_SOFT_Rx@i:
    88                           	callstack 0
    89                           
    90                           ; 1 bytes @ 0x3
    91  000004                     	ds	1
    92  000005                     SPI_SOFT_Tx@i:
    93                           	callstack 0
    94                           
    95                           ; 1 bytes @ 0x4
    96  000005                     	ds	1
    97  000006                     ??_main:
    98                           
    99                           ; 1 bytes @ 0x5
   100  000006                     	ds	2
   101  000008                     main@dato:
   102                           	callstack 0
   103                           
   104                           ; 1 bytes @ 0x7
   105  000008                     	ds	1
   106  000009                     main@dato1:
   107                           	callstack 0
   108                           
   109                           ; 1 bytes @ 0x8
   110  000009                     	ds	1
   111                           
   112 ;;
   113 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   114 ;;
   115 ;; *************** function _main *****************
   116 ;; Defined at:
   117 ;;		line 34 in file "main.c"
   118 ;; Parameters:    Size  Location     Type
   119 ;;		None
   120 ;; Auto vars:     Size  Location     Type
   121 ;;  dato1           1    8[COMRAM] unsigned char 
   122 ;;  dato            1    7[COMRAM] unsigned char 
   123 ;; Return value:  Size  Location     Type
   124 ;;                  2   20[None  ] int 
   125 ;; Registers used:
   126 ;;		wreg, status,2, status,0, cstack
   127 ;; Tracked objects:
   128 ;;		On entry : 0/0
   129 ;;		On exit  : 0/0
   130 ;;		Unchanged: 0/0
   131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   132 ;;      Params:         0       0       0       0       0       0       0       0       0
   133 ;;      Locals:         2       0       0       0       0       0       0       0       0
   134 ;;      Temps:          2       0       0       0       0       0       0       0       0
   135 ;;      Totals:         4       0       0       0       0       0       0       0       0
   136 ;;Total ram usage:        4 bytes
   137 ;; Hardware stack levels required when called: 1
   138 ;; This function calls:
   139 ;;		_SPI_SOFT_Init
   140 ;;		_SPI_SOFT_Rx
   141 ;;		_SPI_SOFT_Tx
   142 ;; This function is called by:
   143 ;;		Startup code after reset
   144 ;; This function uses a non-reentrant model
   145 ;;
   146                           
   147                           	psect	text0
   148  007EE0                     __ptext0:
   149                           	callstack 0
   150  007EE0                     _main:
   151                           	callstack 30
   152  007EE0                     
   153                           ;main.c: 36:     TRISB = 0x00;
   154  007EE0  0E00               	movlw	0
   155  007EE2  6E93               	movwf	147,c	;volatile
   156  007EE4                     
   157                           ;main.c: 37:     SPI_SOFT_Init();
   158  007EE4  EC13  F03F         	call	_SPI_SOFT_Init	;wreg free
   159  007EE8                     
   160                           ;main.c: 40:     PORTDbits.RD3 = 1;
   161  007EE8  8683               	bsf	131,3,c	;volatile
   162  007EEA                     
   163                           ;main.c: 41:     PORTDbits.RD3 = 0;
   164  007EEA  9683               	bcf	131,3,c	;volatile
   165  007EEC                     
   166                           ;main.c: 42:     SPI_SOFT_Tx(0b00000001);
   167  007EEC  0E01               	movlw	1
   168  007EEE  EC18  F03F         	call	_SPI_SOFT_Tx
   169  007EF2                     
   170                           ;main.c: 43:     SPI_SOFT_Tx(0b00000000);
   171  007EF2  0E00               	movlw	0
   172  007EF4  EC18  F03F         	call	_SPI_SOFT_Tx
   173  007EF8                     
   174                           ;main.c: 44:     PORTDbits.RD3 = 1;
   175  007EF8  8683               	bsf	131,3,c	;volatile
   176  007EFA                     
   177                           ;main.c: 45:     _delay((unsigned long)((10)*(48000000UL/4000.0)));
   178  007EFA  0E9C               	movlw	156
   179  007EFC  6E06               	movwf	??_main^0,c
   180  007EFE  0ED7               	movlw	215
   181  007F00                     u77:
   182  007F00  2EE8               	decfsz	wreg,f,c
   183  007F02  D7FE               	bra	u77
   184  007F04  2E06               	decfsz	??_main^0,f,c
   185  007F06  D7FC               	bra	u77
   186  007F08  F000               	nop	
   187  007F0A                     
   188                           ;main.c: 48:     PORTDbits.RD3 = 0;
   189  007F0A  9683               	bcf	131,3,c	;volatile
   190  007F0C                     
   191                           ;main.c: 49:     SPI_SOFT_Tx(0b00000110);
   192  007F0C  0E06               	movlw	6
   193  007F0E  EC18  F03F         	call	_SPI_SOFT_Tx
   194  007F12                     
   195                           ;main.c: 50:     PORTDbits.RD3 = 1;
   196  007F12  8683               	bsf	131,3,c	;volatile
   197  007F14                     
   198                           ;main.c: 51:     _delay((unsigned long)((10)*(48000000UL/4000.0)));
   199  007F14  0E9C               	movlw	156
   200  007F16  6E06               	movwf	??_main^0,c
   201  007F18  0ED7               	movlw	215
   202  007F1A                     u87:
   203  007F1A  2EE8               	decfsz	wreg,f,c
   204  007F1C  D7FE               	bra	u87
   205  007F1E  2E06               	decfsz	??_main^0,f,c
   206  007F20  D7FC               	bra	u87
   207  007F22  F000               	nop	
   208  007F24                     
   209                           ;main.c: 53:     PORTDbits.RD3 = 0;
   210  007F24  9683               	bcf	131,3,c	;volatile
   211  007F26                     
   212                           ;main.c: 54:     SPI_SOFT_Tx(0b00000010);
   213  007F26  0E02               	movlw	2
   214  007F28  EC18  F03F         	call	_SPI_SOFT_Tx
   215  007F2C                     
   216                           ;main.c: 56:     _delay((unsigned long)((10)*(48000000UL/4000.0)));
   217  007F2C  0E9C               	movlw	156
   218  007F2E  6E06               	movwf	??_main^0,c
   219  007F30  0ED7               	movlw	215
   220  007F32                     u97:
   221  007F32  2EE8               	decfsz	wreg,f,c
   222  007F34  D7FE               	bra	u97
   223  007F36  2E06               	decfsz	??_main^0,f,c
   224  007F38  D7FC               	bra	u97
   225  007F3A  F000               	nop	
   226  007F3C                     
   227                           ;main.c: 60:     SPI_SOFT_Tx(0b00000000);
   228  007F3C  0E00               	movlw	0
   229  007F3E  EC18  F03F         	call	_SPI_SOFT_Tx
   230  007F42                     
   231                           ;main.c: 61:     SPI_SOFT_Tx(0b00000000);
   232  007F42  0E00               	movlw	0
   233  007F44  EC18  F03F         	call	_SPI_SOFT_Tx
   234  007F48                     
   235                           ;main.c: 63:     _delay((unsigned long)((10)*(48000000UL/4000.0)));
   236  007F48  0E9C               	movlw	156
   237  007F4A  6E06               	movwf	??_main^0,c
   238  007F4C  0ED7               	movlw	215
   239  007F4E                     u107:
   240  007F4E  2EE8               	decfsz	wreg,f,c
   241  007F50  D7FE               	bra	u107
   242  007F52  2E06               	decfsz	??_main^0,f,c
   243  007F54  D7FC               	bra	u107
   244  007F56  F000               	nop	
   245  007F58                     
   246                           ;main.c: 67:     SPI_SOFT_Tx(0b00000011);
   247  007F58  0E03               	movlw	3
   248  007F5A  EC18  F03F         	call	_SPI_SOFT_Tx
   249  007F5E                     
   250                           ;main.c: 68:     SPI_SOFT_Tx(0b00001111);
   251  007F5E  0E0F               	movlw	15
   252  007F60  EC18  F03F         	call	_SPI_SOFT_Tx
   253  007F64                     
   254                           ;main.c: 69:     PORTDbits.RD3 = 1;
   255  007F64  8683               	bsf	131,3,c	;volatile
   256  007F66                     
   257                           ;main.c: 70:     _delay((unsigned long)((10)*(48000000UL/4000.0)));
   258  007F66  0E9C               	movlw	156
   259  007F68  6E06               	movwf	??_main^0,c
   260  007F6A  0ED7               	movlw	215
   261  007F6C                     u117:
   262  007F6C  2EE8               	decfsz	wreg,f,c
   263  007F6E  D7FE               	bra	u117
   264  007F70  2E06               	decfsz	??_main^0,f,c
   265  007F72  D7FC               	bra	u117
   266  007F74  F000               	nop	
   267  007F76                     
   268                           ;main.c: 75:     uint8_t dato,dato1;;main.c: 76:     PORTDbits.RD3 = 0;
   269  007F76  9683               	bcf	131,3,c	;volatile
   270  007F78                     
   271                           ;main.c: 77:     SPI_SOFT_Tx(0b00000011);
   272  007F78  0E03               	movlw	3
   273  007F7A  EC18  F03F         	call	_SPI_SOFT_Tx
   274  007F7E                     
   275                           ;main.c: 79:     SPI_SOFT_Tx(0b00000000);
   276  007F7E  0E00               	movlw	0
   277  007F80  EC18  F03F         	call	_SPI_SOFT_Tx
   278  007F84                     
   279                           ;main.c: 80:     SPI_SOFT_Tx(0b00000000);
   280  007F84  0E00               	movlw	0
   281  007F86  EC18  F03F         	call	_SPI_SOFT_Tx
   282  007F8A                     
   283                           ;main.c: 81:     _delay((unsigned long)((1000)*(48000000UL/4000.0)));
   284  007F8A  0E3D               	movlw	61
   285  007F8C  6E07               	movwf	(??_main+1)^0,c
   286  007F8E  0EE1               	movlw	225
   287  007F90  6E06               	movwf	??_main^0,c
   288  007F92  0E40               	movlw	64
   289  007F94                     u127:
   290  007F94  2EE8               	decfsz	wreg,f,c
   291  007F96  D7FE               	bra	u127
   292  007F98  2E06               	decfsz	??_main^0,f,c
   293  007F9A  D7FC               	bra	u127
   294  007F9C  2E07               	decfsz	(??_main+1)^0,f,c
   295  007F9E  D7FA               	bra	u127
   296  007FA0                     
   297                           ;main.c: 82:     PORTDbits.RD3 = 1;
   298  007FA0  8683               	bsf	131,3,c	;volatile
   299  007FA2                     
   300                           ;main.c: 83:      _delay((unsigned long)((1000)*(48000000UL/4000.0)));
   301  007FA2  0E3D               	movlw	61
   302  007FA4  6E07               	movwf	(??_main+1)^0,c
   303  007FA6  0EE1               	movlw	225
   304  007FA8  6E06               	movwf	??_main^0,c
   305  007FAA  0E40               	movlw	64
   306  007FAC                     u137:
   307  007FAC  2EE8               	decfsz	wreg,f,c
   308  007FAE  D7FE               	bra	u137
   309  007FB0  2E06               	decfsz	??_main^0,f,c
   310  007FB2  D7FC               	bra	u137
   311  007FB4  2E07               	decfsz	(??_main+1)^0,f,c
   312  007FB6  D7FA               	bra	u137
   313  007FB8                     
   314                           ;main.c: 84:       PORTDbits.RD3 = 0;
   315  007FB8  9683               	bcf	131,3,c	;volatile
   316  007FBA                     
   317                           ;main.c: 85:     SPI_SOFT_Tx(0b00000011);
   318  007FBA  0E03               	movlw	3
   319  007FBC  EC18  F03F         	call	_SPI_SOFT_Tx
   320  007FC0                     
   321                           ;main.c: 86:     SPI_SOFT_Tx(0b00000000);
   322  007FC0  0E00               	movlw	0
   323  007FC2  EC18  F03F         	call	_SPI_SOFT_Tx
   324  007FC6                     
   325                           ;main.c: 87:     SPI_SOFT_Tx(0b00000000);
   326  007FC6  0E00               	movlw	0
   327  007FC8  EC18  F03F         	call	_SPI_SOFT_Tx
   328  007FCC                     
   329                           ;main.c: 89:     dato=SPI_SOFT_Rx();
   330  007FCC  EC40  F03F         	call	_SPI_SOFT_Rx	;wreg free
   331  007FD0  6E08               	movwf	main@dato^0,c
   332  007FD2                     
   333                           ;main.c: 90:     LATB=dato;
   334  007FD2  C008  FF8A         	movff	main@dato,3978	;volatile
   335  007FD6                     
   336                           ;main.c: 91:     _delay((unsigned long)((600)*(48000000UL/4000.0)));
   337  007FD6  0E25               	movlw	37
   338  007FD8  6E07               	movwf	(??_main+1)^0,c
   339  007FDA  0E87               	movlw	135
   340  007FDC  6E06               	movwf	??_main^0,c
   341  007FDE  0E8C               	movlw	140
   342  007FE0                     u147:
   343  007FE0  2EE8               	decfsz	wreg,f,c
   344  007FE2  D7FE               	bra	u147
   345  007FE4  2E06               	decfsz	??_main^0,f,c
   346  007FE6  D7FC               	bra	u147
   347  007FE8  2E07               	decfsz	(??_main+1)^0,f,c
   348  007FEA  D7FA               	bra	u147
   349  007FEC                     
   350                           ;main.c: 92:     dato1=SPI_SOFT_Rx();
   351  007FEC  EC40  F03F         	call	_SPI_SOFT_Rx	;wreg free
   352  007FF0  6E09               	movwf	main@dato1^0,c
   353  007FF2                     
   354                           ;main.c: 93:     LATB=dato1;
   355  007FF2  C009  FF8A         	movff	main@dato1,3978	;volatile
   356  007FF6                     
   357                           ;main.c: 94:     PORTDbits.RD3 = 1;
   358  007FF6  8683               	bsf	131,3,c	;volatile
   359  007FF8                     l21:
   360  007FF8  EFFC  F03F         	goto	l21
   361  007FFC  EF00  F000         	goto	start
   362  008000                     __end_of_main:
   363                           	callstack 0
   364                           
   365 ;; *************** function _SPI_SOFT_Tx *****************
   366 ;; Defined at:
   367 ;;		line 119 in file "main.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;  dato            1    wreg     unsigned char 
   370 ;; Auto vars:     Size  Location     Type
   371 ;;  dato            1    3[COMRAM] unsigned char 
   372 ;;  i               1    4[COMRAM] unsigned char 
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, status,2, status,0
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   382 ;;      Params:         0       0       0       0       0       0       0       0       0
   383 ;;      Locals:         2       0       0       0       0       0       0       0       0
   384 ;;      Temps:          3       0       0       0       0       0       0       0       0
   385 ;;      Totals:         5       0       0       0       0       0       0       0       0
   386 ;;Total ram usage:        5 bytes
   387 ;; Hardware stack levels used: 1
   388 ;; This function calls:
   389 ;;		Nothing
   390 ;; This function is called by:
   391 ;;		_main
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           	psect	text1
   396  007E30                     __ptext1:
   397                           	callstack 0
   398  007E30                     _SPI_SOFT_Tx:
   399                           	callstack 30
   400                           
   401                           ;incstack = 0
   402                           ;SPI_SOFT_Tx@dato stored from wreg
   403  007E30  6E04               	movwf	SPI_SOFT_Tx@dato^0,c
   404  007E32                     
   405                           ;main.c: 121:     for(uint8_t i=0;i<8;i++){
   406  007E32  0E00               	movlw	0
   407  007E34  6E05               	movwf	SPI_SOFT_Tx@i^0,c
   408  007E36                     l30:
   409                           
   410                           ;main.c: 122:         PORTDbits.RD2 = 0;
   411  007E36  9483               	bcf	131,2,c	;volatile
   412  007E38                     
   413                           ;main.c: 124:         if((dato<<i)&0x80)PORTDbits.RD1=1; else PORTDbits.RD1=0;
   414  007E38  C005  F001         	movff	SPI_SOFT_Tx@i,??_SPI_SOFT_Tx
   415  007E3C  5004               	movf	SPI_SOFT_Tx@dato^0,w,c
   416  007E3E  6E02               	movwf	(??_SPI_SOFT_Tx+1)^0,c
   417  007E40  6A03               	clrf	(??_SPI_SOFT_Tx+2)^0,c
   418  007E42  2A01               	incf	??_SPI_SOFT_Tx^0,f,c
   419  007E44  EF27  F03F         	goto	u14
   420  007E48                     u15:
   421  007E48  90D8               	bcf	status,0,c
   422  007E4A  3602               	rlcf	(??_SPI_SOFT_Tx+1)^0,f,c
   423  007E4C  3603               	rlcf	(??_SPI_SOFT_Tx+2)^0,f,c
   424  007E4E                     u14:
   425  007E4E  2E01               	decfsz	??_SPI_SOFT_Tx^0,f,c
   426  007E50  EF24  F03F         	goto	u15
   427  007E54  AE02               	btfss	(??_SPI_SOFT_Tx+1)^0,7,c
   428  007E56  EF2F  F03F         	goto	u21
   429  007E5A  EF31  F03F         	goto	u20
   430  007E5E                     u21:
   431  007E5E  EF34  F03F         	goto	l32
   432  007E62                     u20:
   433  007E62  8283               	bsf	131,1,c	;volatile
   434  007E64  EF35  F03F         	goto	l33
   435  007E68                     l32:
   436  007E68  9283               	bcf	131,1,c	;volatile
   437  007E6A                     l33:
   438                           
   439                           ;main.c: 125:         PORTDbits.RD2 =1;
   440  007E6A  8483               	bsf	131,2,c	;volatile
   441  007E6C                     
   442                           ;main.c: 126:     }
   443  007E6C  2A05               	incf	SPI_SOFT_Tx@i^0,f,c
   444  007E6E  0E07               	movlw	7
   445  007E70  6405               	cpfsgt	SPI_SOFT_Tx@i^0,c
   446  007E72  EF3D  F03F         	goto	u31
   447  007E76  EF3F  F03F         	goto	u30
   448  007E7A                     u31:
   449  007E7A  EF1B  F03F         	goto	l30
   450  007E7E                     u30:
   451  007E7E  0012               	return		;funcret
   452  007E80                     __end_of_SPI_SOFT_Tx:
   453                           	callstack 0
   454                           
   455 ;; *************** function _SPI_SOFT_Rx *****************
   456 ;; Defined at:
   457 ;;		line 129 in file "main.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;		None
   460 ;; Auto vars:     Size  Location     Type
   461 ;;  i               1    3[COMRAM] char 
   462 ;;  buffer          1    2[COMRAM] unsigned char 
   463 ;; Return value:  Size  Location     Type
   464 ;;                  1    wreg      unsigned char 
   465 ;; Registers used:
   466 ;;		wreg, status,2, status,0
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   472 ;;      Params:         0       0       0       0       0       0       0       0       0
   473 ;;      Locals:         2       0       0       0       0       0       0       0       0
   474 ;;      Temps:          2       0       0       0       0       0       0       0       0
   475 ;;      Totals:         4       0       0       0       0       0       0       0       0
   476 ;;Total ram usage:        4 bytes
   477 ;; Hardware stack levels used: 1
   478 ;; This function calls:
   479 ;;		Nothing
   480 ;; This function is called by:
   481 ;;		_main
   482 ;; This function uses a non-reentrant model
   483 ;;
   484                           
   485                           	psect	text2
   486  007E80                     __ptext2:
   487                           	callstack 0
   488  007E80                     _SPI_SOFT_Rx:
   489                           	callstack 30
   490  007E80                     
   491                           ;main.c: 130:     uint8_t buffer=0;
   492  007E80  0E00               	movlw	0
   493  007E82  6E03               	movwf	SPI_SOFT_Rx@buffer^0,c
   494                           
   495                           ;main.c: 132:     int8_t i=7;
   496  007E84  0E07               	movlw	7
   497  007E86  6E04               	movwf	SPI_SOFT_Rx@i^0,c
   498  007E88                     l733:
   499                           
   500                           ;main.c: 134:         --i;
   501  007E88  0604               	decf	SPI_SOFT_Rx@i^0,f,c
   502  007E8A                     
   503                           ;main.c: 135:         PORTDbits.RD2=0;
   504  007E8A  9483               	bcf	131,2,c	;volatile
   505  007E8C                     
   506                           ;main.c: 136:         buffer |= (PORTDbits.RD0<<(i+1));
   507  007E8C  C004  F001         	movff	SPI_SOFT_Rx@i,??_SPI_SOFT_Rx
   508  007E90  0E01               	movlw	1
   509  007E92  2601               	addwf	??_SPI_SOFT_Rx^0,f,c
   510  007E94  B083               	btfsc	131,0,c	;volatile
   511  007E96  EF4F  F03F         	goto	u41
   512  007E9A  EF53  F03F         	goto	u40
   513  007E9E                     u41:
   514  007E9E  6A02               	clrf	(??_SPI_SOFT_Rx+1)^0,c
   515  007EA0  2A02               	incf	(??_SPI_SOFT_Rx+1)^0,f,c
   516  007EA2  EF54  F03F         	goto	u48
   517  007EA6                     u40:
   518  007EA6  6A02               	clrf	(??_SPI_SOFT_Rx+1)^0,c
   519  007EA8                     u48:
   520  007EA8  2A01               	incf	??_SPI_SOFT_Rx^0,f,c
   521  007EAA  EF59  F03F         	goto	u54
   522  007EAE                     u55:
   523  007EAE  90D8               	bcf	status,0,c
   524  007EB0  3602               	rlcf	(??_SPI_SOFT_Rx+1)^0,f,c
   525  007EB2                     u54:
   526  007EB2  2E01               	decfsz	??_SPI_SOFT_Rx^0,f,c
   527  007EB4  EF57  F03F         	goto	u55
   528  007EB8  5002               	movf	(??_SPI_SOFT_Rx+1)^0,w,c
   529  007EBA  1203               	iorwf	SPI_SOFT_Rx@buffer^0,f,c
   530  007EBC                     
   531                           ;main.c: 137:         PORTDbits.RD2=1;
   532  007EBC  8483               	bsf	131,2,c	;volatile
   533  007EBE                     
   534                           ;main.c: 138:         _delay((unsigned long)((10)*(48000000UL/4000.0)));
   535  007EBE  0E9C               	movlw	156
   536  007EC0  6E01               	movwf	??_SPI_SOFT_Rx^0,c
   537  007EC2  0ED7               	movlw	215
   538  007EC4                     u157:
   539  007EC4  2EE8               	decfsz	wreg,f,c
   540  007EC6  D7FE               	bra	u157
   541  007EC8  2E01               	decfsz	??_SPI_SOFT_Rx^0,f,c
   542  007ECA  D7FC               	bra	u157
   543  007ECC  F000               	nop	
   544  007ECE                     
   545                           ;main.c: 140:     }while(i>=0);
   546  007ECE  BE04               	btfsc	SPI_SOFT_Rx@i^0,7,c
   547  007ED0  EF6E  F03F         	goto	u60
   548  007ED4  EF6C  F03F         	goto	u61
   549  007ED8                     u61:
   550  007ED8  EF44  F03F         	goto	l733
   551  007EDC                     u60:
   552  007EDC                     
   553                           ;main.c: 142:     return buffer;
   554  007EDC  5003               	movf	SPI_SOFT_Rx@buffer^0,w,c
   555  007EDE  0012               	return		;funcret
   556  007EE0                     __end_of_SPI_SOFT_Rx:
   557                           	callstack 0
   558                           
   559 ;; *************** function _SPI_SOFT_Init *****************
   560 ;; Defined at:
   561 ;;		line 109 in file "main.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;		None
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		None
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   575 ;;      Params:         0       0       0       0       0       0       0       0       0
   576 ;;      Locals:         0       0       0       0       0       0       0       0       0
   577 ;;      Temps:          0       0       0       0       0       0       0       0       0
   578 ;;      Totals:         0       0       0       0       0       0       0       0       0
   579 ;;Total ram usage:        0 bytes
   580 ;; Hardware stack levels used: 1
   581 ;; This function calls:
   582 ;;		Nothing
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           	psect	text3
   589  007E26                     __ptext3:
   590                           	callstack 0
   591  007E26                     _SPI_SOFT_Init:
   592                           	callstack 30
   593  007E26                     
   594                           ;main.c: 111:     TRISDbits.RD0 = 1;
   595  007E26  8095               	bsf	149,0,c	;volatile
   596                           
   597                           ;main.c: 112:     TRISDbits.RD1 = 0;
   598  007E28  9295               	bcf	149,1,c	;volatile
   599                           
   600                           ;main.c: 113:     TRISDbits.RD2 = 0;
   601  007E2A  9495               	bcf	149,2,c	;volatile
   602                           
   603                           ;main.c: 114:     TRISDbits.RD3 = 0;
   604  007E2C  9695               	bcf	149,3,c	;volatile
   605  007E2E  0012               	return		;funcret
   606  007E30                     __end_of_SPI_SOFT_Init:
   607                           	callstack 0
   608  0000                     
   609                           	psect	rparam
   610  0000                     
   611                           	psect	idloc
   612                           
   613                           ;Config register IDLOC0 @ 0x200000
   614                           ;	unspecified, using default values
   615  200000                     	org	2097152
   616  200000  FF                 	db	255
   617                           
   618                           ;Config register IDLOC1 @ 0x200001
   619                           ;	unspecified, using default values
   620  200001                     	org	2097153
   621  200001  FF                 	db	255
   622                           
   623                           ;Config register IDLOC2 @ 0x200002
   624                           ;	unspecified, using default values
   625  200002                     	org	2097154
   626  200002  FF                 	db	255
   627                           
   628                           ;Config register IDLOC3 @ 0x200003
   629                           ;	unspecified, using default values
   630  200003                     	org	2097155
   631  200003  FF                 	db	255
   632                           
   633                           ;Config register IDLOC4 @ 0x200004
   634                           ;	unspecified, using default values
   635  200004                     	org	2097156
   636  200004  FF                 	db	255
   637                           
   638                           ;Config register IDLOC5 @ 0x200005
   639                           ;	unspecified, using default values
   640  200005                     	org	2097157
   641  200005  FF                 	db	255
   642                           
   643                           ;Config register IDLOC6 @ 0x200006
   644                           ;	unspecified, using default values
   645  200006                     	org	2097158
   646  200006  FF                 	db	255
   647                           
   648                           ;Config register IDLOC7 @ 0x200007
   649                           ;	unspecified, using default values
   650  200007                     	org	2097159
   651  200007  FF                 	db	255
   652                           
   653                           	psect	config
   654                           
   655                           ;Config register CONFIG1L @ 0x300000
   656                           ;	PLL Prescaler Selection bits
   657                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
   658                           ;	System Clock Postscaler Selection bits
   659                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   660                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   661                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   662  300000                     	org	3145728
   663  300000  04                 	db	4
   664                           
   665                           ;Config register CONFIG1H @ 0x300001
   666                           ;	Oscillator Selection bits
   667                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
   668                           ;	Fail-Safe Clock Monitor Enable bit
   669                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   670                           ;	Internal/External Oscillator Switchover bit
   671                           ;	IESO = OFF, Oscillator Switchover mode disabled
   672  300001                     	org	3145729
   673  300001  0E                 	db	14
   674                           
   675                           ;Config register CONFIG2L @ 0x300002
   676                           ;	Power-up Timer Enable bit
   677                           ;	PWRT = OFF, PWRT disabled
   678                           ;	Brown-out Reset Enable bits
   679                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   680                           ;	Brown-out Reset Voltage bits
   681                           ;	BORV = 3, Minimum setting 2.05V
   682                           ;	USB Voltage Regulator Enable bit
   683                           ;	VREGEN = OFF, USB voltage regulator disabled
   684  300002                     	org	3145730
   685  300002  19                 	db	25
   686                           
   687                           ;Config register CONFIG2H @ 0x300003
   688                           ;	Watchdog Timer Enable bit
   689                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   690                           ;	Watchdog Timer Postscale Select bits
   691                           ;	WDTPS = 32768, 1:32768
   692  300003                     	org	3145731
   693  300003  1E                 	db	30
   694                           
   695                           ; Padding undefined space
   696  300004                     	org	3145732
   697  300004  FF                 	db	255
   698                           
   699                           ;Config register CONFIG3H @ 0x300005
   700                           ;	CCP2 MUX bit
   701                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   702                           ;	PORTB A/D Enable bit
   703                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   704                           ;	Low-Power Timer 1 Oscillator Enable bit
   705                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   706                           ;	MCLR Pin Enable bit
   707                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   708  300005                     	org	3145733
   709  300005  83                 	db	131
   710                           
   711                           ;Config register CONFIG4L @ 0x300006
   712                           ;	Stack Full/Underflow Reset Enable bit
   713                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   714                           ;	Single-Supply ICSP Enable bit
   715                           ;	LVP = OFF, Single-Supply ICSP disabled
   716                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   717                           ;	ICPRT = OFF, ICPORT disabled
   718                           ;	Extended Instruction Set Enable bit
   719                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   720                           ;	Background Debugger Enable bit
   721                           ;	DEBUG = 0x1, unprogrammed default
   722  300006                     	org	3145734
   723  300006  80                 	db	128
   724                           
   725                           ; Padding undefined space
   726  300007                     	org	3145735
   727  300007  FF                 	db	255
   728                           
   729                           ;Config register CONFIG5L @ 0x300008
   730                           ;	Code Protection bit
   731                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   732                           ;	Code Protection bit
   733                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   734                           ;	Code Protection bit
   735                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   736                           ;	Code Protection bit
   737                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   738  300008                     	org	3145736
   739  300008  0F                 	db	15
   740                           
   741                           ;Config register CONFIG5H @ 0x300009
   742                           ;	Boot Block Code Protection bit
   743                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   744                           ;	Data EEPROM Code Protection bit
   745                           ;	CPD = OFF, Data EEPROM is not code-protected
   746  300009                     	org	3145737
   747  300009  C0                 	db	192
   748                           
   749                           ;Config register CONFIG6L @ 0x30000A
   750                           ;	Write Protection bit
   751                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   752                           ;	Write Protection bit
   753                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   754                           ;	Write Protection bit
   755                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   756                           ;	Write Protection bit
   757                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   758  30000A                     	org	3145738
   759  30000A  0F                 	db	15
   760                           
   761                           ;Config register CONFIG6H @ 0x30000B
   762                           ;	Configuration Register Write Protection bit
   763                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   764                           ;	Boot Block Write Protection bit
   765                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   766                           ;	Data EEPROM Write Protection bit
   767                           ;	WRTD = OFF, Data EEPROM is not write-protected
   768  30000B                     	org	3145739
   769  30000B  E0                 	db	224
   770                           
   771                           ;Config register CONFIG7L @ 0x30000C
   772                           ;	Table Read Protection bit
   773                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   774                           ;	Table Read Protection bit
   775                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   776                           ;	Table Read Protection bit
   777                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   778                           ;	Table Read Protection bit
   779                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   780  30000C                     	org	3145740
   781  30000C  0F                 	db	15
   782                           
   783                           ;Config register CONFIG7H @ 0x30000D
   784                           ;	Boot Block Table Read Protection bit
   785                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   786  30000D                     	org	3145741
   787  30000D  40                 	db	64
   788                           tosu	equ	0xFFF
   789                           tosh	equ	0xFFE
   790                           tosl	equ	0xFFD
   791                           stkptr	equ	0xFFC
   792                           pclatu	equ	0xFFB
   793                           pclath	equ	0xFFA
   794                           pcl	equ	0xFF9
   795                           tblptru	equ	0xFF8
   796                           tblptrh	equ	0xFF7
   797                           tblptrl	equ	0xFF6
   798                           tablat	equ	0xFF5
   799                           prodh	equ	0xFF4
   800                           prodl	equ	0xFF3
   801                           indf0	equ	0xFEF
   802                           postinc0	equ	0xFEE
   803                           postdec0	equ	0xFED
   804                           preinc0	equ	0xFEC
   805                           plusw0	equ	0xFEB
   806                           fsr0h	equ	0xFEA
   807                           fsr0l	equ	0xFE9
   808                           wreg	equ	0xFE8
   809                           indf1	equ	0xFE7
   810                           postinc1	equ	0xFE6
   811                           postdec1	equ	0xFE5
   812                           preinc1	equ	0xFE4
   813                           plusw1	equ	0xFE3
   814                           fsr1h	equ	0xFE2
   815                           fsr1l	equ	0xFE1
   816                           bsr	equ	0xFE0
   817                           indf2	equ	0xFDF
   818                           postinc2	equ	0xFDE
   819                           postdec2	equ	0xFDD
   820                           preinc2	equ	0xFDC
   821                           plusw2	equ	0xFDB
   822                           fsr2h	equ	0xFDA
   823                           fsr2l	equ	0xFD9
   824                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9       9
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_SPI_SOFT_Tx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     135
                                              5 COMRAM     4     4      0
                      _SPI_SOFT_Init
                        _SPI_SOFT_Rx
                        _SPI_SOFT_Tx
 ---------------------------------------------------------------------------------
 (1) _SPI_SOFT_Tx                                          5     5      0      60
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _SPI_SOFT_Rx                                          4     4      0      45
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _SPI_SOFT_Init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_SOFT_Init
   _SPI_SOFT_Rx
   _SPI_SOFT_Tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      9       9       1        9.5%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
DATA                 0      0       0       4        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBIGSFRhh         6A      0       0      21        0.0%
BITBIGSFRhl          1      0       0      22        0.0%
BITBIGSFRlhh         8      0       0      23        0.0%
BITBIGSFRlhl         6      0       0      24        0.0%
BITBIGSFRll         23      0       0      25        0.0%
BIGRAM             7FF      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Mar 26 21:45:45 2022

                     l21 7FF8                       l30 7E36                       l22 7FF8  
                     l32 7E68                       l33 7E6A                       l34 7E7E  
                     l27 7E2E                       l39 7EDE                       u20 7E62  
                     u21 7E5E                       u30 7E7E                       u14 7E4E  
                     u31 7E7A                       u15 7E48                       u40 7EA6  
                     u41 7E9E                       u60 7EDC                       u61 7ED8  
                     u54 7EB2                       u55 7EAE                       u48 7EA8  
                     u77 7F00                       u87 7F1A                       u97 7F32  
                    l801 7F8A                      l715 7E26                      l731 7E80  
                    l723 7E38                      l811 7FC0                      l803 7FA0  
                    l741 7EBE                      l733 7E88                      l725 7E62  
                    l717 7E32                      l821 7FEC                      l813 7FC6  
                    l805 7FA2                      l743 7ECE                      l735 7E8A  
                    l727 7E6C                      l823 7FF2                      l815 7FCC  
                    l807 7FB8                      l751 7EE4                      l745 7EDC  
                    l737 7E8C                      l729 7E6E                      l825 7FF6  
                    l817 7FD2                      l809 7FBA                      l761 7EF8  
                    l753 7EE8                      l739 7EBC                      l819 7FD6  
                    l771 7F14                      l763 7EFA                      l755 7EEA  
                    l781 7F42                      l773 7F24                      l765 7F0A  
                    l757 7EEC                      l749 7EE0                      l791 7F66  
                    l783 7F48                      l775 7F26                      l767 7F0C  
                    l759 7EF2                      l793 7F76                      l785 7F58  
                    l777 7F2C                      l769 7F12                      l795 7F78  
                    l787 7F5E                      l779 7F3C                      l797 7F7E  
                    l789 7F64                      l799 7F84                      u107 7F4E  
                    u117 7F6C                      u127 7F94                      u137 7FAC  
                    u147 7FE0                      u157 7EC4                      wreg 000FE8  
                   _LATB 000F8A                     _main 7EE0             SPI_SOFT_Rx@i 0004  
           SPI_SOFT_Tx@i 0005                     start 0000             ___param_bank 000000  
                  ?_main 0001                    _TRISB 000F93          ??_SPI_SOFT_Init 0001  
                  status 000FD8          __initialization 7E20             __end_of_main 8000  
                 ??_main 0006            __activetblptr 000000                   isa$std 000001  
           ?_SPI_SOFT_Rx 0001             ?_SPI_SOFT_Tx 0001               __accesstop 0060  
__end_of__initialization 7E20            ___rparam_used 000001           __pcstackCOMRAM 0001  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7E20  
                __ramtop 0800                  __ptext0 7EE0                  __ptext1 7E30  
                __ptext2 7E80                  __ptext3 7E26          SPI_SOFT_Tx@dato 0004  
   end_of_initialization 7E20    __end_of_SPI_SOFT_Init 7E30                _PORTDbits 000F83  
              _TRISDbits 000F95      start_initialization 7E20        SPI_SOFT_Rx@buffer 0003  
              main@dato1 0009            ??_SPI_SOFT_Rx 0001            ??_SPI_SOFT_Tx 0001  
               __Hrparam 0000                 __Lrparam 0000      __end_of_SPI_SOFT_Rx 7EE0  
    __end_of_SPI_SOFT_Tx 7E80                 isa$xinst 000000                 main@dato 0008  
          _SPI_SOFT_Init 7E26              _SPI_SOFT_Rx 7E80              _SPI_SOFT_Tx 7E30  
         ?_SPI_SOFT_Init 0001  
